,Title,Categories,Tags,Replies,Post,Comment
0,About the SQL FAQ category,"Get Help,Git",,1,"
SQL (Structured Query Language) is the standard data-management language, enabling you to communicate with databases. This forum category covers the Codecademy courses on SQL.
",
1,Can a WHERE clause be applied with a HAVING statement in the same query?,"Get Help,Git",,4,"
Question
Can a WHERE clause be applied with a HAVING statement in the same query?
Answer
Yes, you can absolutely apply a WHERE clause in a query that also utilizes a HAVING statement.
When you apply a WHERE clause in the same query, it must always be before any GROUP BY, which in turn must be before any HAVING.
As a result, the data is essentially filtered on the WHERE condition first. Then, from this filtered data, it is grouped by specified columns and then further filtered based on the HAVING condition.
Example
/* 
This will first filter the movies with a box_office > 500000.
Then, it will group those results by genre, and finally restrict
the query to genres that have more than 5 movies.
*/

SELECT genre, ROUND(AVG(score))
FROM movies
WHERE box_office > 500000 
GROUP BY genre
HAVING COUNT(*) > 5;

","
This information really helps! 

This helped a lot  Thanks

@jephos249 Thanks a lot … 
"
2,When should I use INNER JOIN instead of LEFT JOIN?,"Get Help,Git",,16,"
Question
When should I use INNER JOIN vs LEFT JOIN?
Answer
Depending on how we want to select the combined data, it can determine whether to use an INNER JOIN or a LEFT JOIN.
Generally, we use INNER JOIN when we want to select only rows that match an ON condition. If no rows match the ON condition, then it will not return any results. This can be somewhat stricter than using a LEFT JOIN.
We use a LEFT JOIN when we want every row from the first table, regardless of whether there is a matching row from the second table. This is similar to saying,
“Return all the data from the first table no matter what. If there are any matches with the second table, provide that information as well, but if not, just fill the missing data with NULL values.”
In a way, LEFT JOIN is less strict than INNER JOIN. Furthermore, the results of a LEFT JOIN will actually include all results that an INNER JOIN would have provided for the same given condition.
","
For a real world example:
We created/maintain a database at my work for trading purposes. We maintain a fund master list and each day receive a file with fund level cash flows. We have our queries set up to do a LEFT JOIN, joining all records of the fund master list to the cash flow file regardless of whether there is a match. The end result is we can view a report with all funds and their daily cash flow, and the ones that don’t have cash flow today will still show up but with a null value. This is helpful to know as too many portfolios with null values can be indicative of problems with the cash flow file.

This is more of an observation, in this exercise the second value in C3 is also deleted in the graphic. I’m guessing that is a bug? If not, what am I missing in this exercise?

I think the idea behind this is that the row is occupied by the “left” table data,  which has no match in the other table, giving null values as result

If you are familiar with set theory (Mathematics) Then, INNER JOIN is more like (A intersection B)
and Left Join is {A union (A intersection B)}

This is more a limitation of the visualization used but not a bug. It supposes E in C2 doesn’t have a matching data in the left table and similarly that W doesn’t exist in the right table.
Because we are using a LEFT JOIN, the data on the left is kept in the table with no value in C3 while the data from the right table will not be displayed at all.

Just sharing an example from my work as well–we administer employee wellness programs and send program results through mail, combining program results and address information. If address info is NULL, we still want them in the query, so that we have their results. (We individually seal those without addresses and send the batch to HR to ensure delivery.) That’s a LEFT JOIN.
When I compile a list of emails for a program’s communication collateral for one client, I need to join tables with company associations and emails. We won’t be emailing NULL email addresses, so they can be omitted from results. JOIN works there.

thanks for real world example, sir

from my understanding, left join is like vlookup formula in excel, and inner join removes all the N/As.

Thanks for explaining with a real life example.

Thankyou for explaining with a Practical Life Example.

True, that’s like saying if we have two sets A and B, then:

LEFT JOIN is equivalent to A - B
RIGHT JOIN is equivalent to B - A
INNER JOIN is equivalent to A U B


What would the breakdown of this be then, because I have a hard time telling the difference
SELECT *
FROM newspaper
LEFT JOIN online
ON newspaper.id = online.id
WHERE online.id IS NULL;

When you LEFT JOIN online to newspaper, you are selecting those customers who have only a newspaper subscription and also those have both newspaper and online subscriptions, but not the online subscription alone. In the result, the WHERE clause you mentioned at the end selects only those results which have online.id as NULL, that means you will only see users who have subscribed to newspaper and not online. So, in the end, you get a result containing only those users who have subscribed to newspaper AND not subscribed to online.
This image may help you visualize joins as sets:





 zoleft:

e a list of emails for a program’s communication collateral for one client, I need to join tables with company associations and emails. We won’t be emailing NULL email addresses, so they can be omitted from results. JOIN works there.


Thank you for this answer, but one minor addition. INNER JOIN is more like A INTERSECTION B.




 dsonigladiator:

tomers who have only a


This is very good ! Thanks for this
"
3,What are some ways that SQL is used in data science?,"Get Help,Git",,2,"
Question
What are some ways that SQL is used in data science?
Answer
In the field of data science, there is a process, called the Data Science process, which provides a structured approach to performing experiments with data. In this data science process, some important steps include obtaining data, cleaning and organizing data, and exploring the data. Using tools like SQL, scientists are able to perform these important steps.
When obtaining data, scientists can use SQL to store them in tables and databases.
Once they have obtained the data, they can clean and organize the data utilizing built-in functions and clauses, to do things such as grouping them according to some qualities or conditions. They can also separate the data into different tables based on what kind of information they represent.
After these steps, they will be able to explore the data by utilizing many of the built-in SQL functions, which include functions such as AVG() which returns the average value of a column.
With its many built-in functions and ease-of-use, SQL is a very useful tool to have for data science.
","
Thanks you! I just begin with codecademy
"
4,"How do we search for patterns containing the actual characters ""%"" or ""_""?","Get Help,Git",,6,"
Question
When using SQL LIKE operators, how do we search for patterns containing the actual characters “%” or “_”?
Answer
When searching for a pattern containing the specific characters % or _, we can utilize the escape character \, similarly to its use in Python.
If we want to search for these specific characters, we can simply add the escape character immediately before them.
Example
/* 
In this pattern, we use an escape character before '%'.
This will only match ""%"" and not be used like the
wildcard character.

This query will match any titles that end with
' 100%'.
*/

SELECT *
FROM books
WHERE title LIKE '% 100\%';

","
It should be mentioned that the escape character is a backslash. As much as http protocol has reinforced “http, colon, forward-slash, forward-slash,” I still sometimes find myself forgetting which one is forward and which is back.
/ (forward)
\ (back)

Thank you. It’s quite useful

So, if its need to be found phrase “Anna\Hanna” the query needs to be:
SELECT *
FROM books
WHERE title LIKE 'Anna\\Hanna';

?

I would write something like
SELECT *
FROM books
WHERE tittle LIKE ‘%nna’

I think the question here was, if we need to search for a title with “” character in it, how to we do that?
"
5,How can we get the average of unique values of a column?,"Get Help,Git",,5,"
Question
In SQL, how can we get the average of only the unique values of a column?
Answer
To run the AVG() function on a column such that it only averages the unique values in the column, we could use the DISTINCT clause right before the column name.
Example
/* Returns 2.02365 */
SELECT AVG(price)
FROM fake_apps;

/* Returns 4.15833.. */
SELECT AVG(DISTINCT price)
FROM fake_apps;

","
Then, how does the data know what is the distinct value in Price Column? How do they differentiate unique value in that column and label it as a distinct value and then carry forward with the average caculation?

Hello yiwen. I’m not an expert but I hope I can help you.
when you run the following code:
SELECT price
FROM fake_apps;

the return is all the values in the column price. If you apply the AVG on it, you’ll have the total average. Nothing new here.
If you run the following code:
SELECT DISTINCT price
FROM fake_apps;

The return is all the distinct values on the column. Also, nothing new.
and so, the following:
SELECT AVG(DISTINCT price)
FROM fake_apps;

First the distinct will return the distinct ones and then the AVG is calculated based on that return. So the average is not calculated over the rows in price, but over the rows of the new table returned by the distinct.
Hope it helps

Hello, can I calculate the average in price column of distinct values in another column, like name ? Thanks in advance.

This will give you your solution for average in price column of distinct values in Category column:
SELECT Category, AVG(price)
FROM fake_apps
GROUP BY category;
"
6,Does the order of tables in a JOIN matter?,"Get Help,Git",,4,"
Question
When we write a JOIN query, does the order we specify the tables matter?
For example,
FROM table1 JOIN table2
vs
FROM table2 JOIN table1
Answer
Generally, no, the order of the tables in the JOIN will not affect the overall results of the query.
As long as you specify what columns to select, the results should appear essentially the same, just that the rows will be ordered according to the appearance in the first table.
However, if you do not specify specific columns, then the order of columns will be different depending on the order of the tables. Without specifying columns in your SELECT, by using just SELECT *, the result query will order the columns by the first table’s columns followed by the second table’s columns.
For example, say we had two tables:
orders, with the columns order_id, customer_id
and
customers, with the columns customer_id, address.
If we run the following query,
SELECT *
FROM orders
JOIN customers
ON orders.customer_id = customers.customer_id;

the columns in this query’s results will be ordered from left to right as:
order_id, customer_id, customer_id, address
Conversely, if we ran this query,
SELECT *
FROM customers
JOIN orders
ON orders.customer_id = customers.customer_id;

it will return the columns in the following order from left to right:
customer_id, address, order_id, customer_id
If the order of your columns matters in the result query, then it will be important to keep this in mind.
","
Hi, I got a little bit confused in the exercise that comes right after - PRIMARY KEY VS FOREIGN KEY. I am supposed to perform the INNER JOIN in this task. But in this case, it seems like the order actually matters.
If I write the query this way:
SELECT *
FROM students
JOIN classes
ON students.class_id=classes.id;

It is not accepted and I get notification saying “Join classes to students.”
If I write it this way than it is ok:
SELECT *
FROM classes
JOIN students
ON classes.id=students.class_id;

I think I don’t fully understand why the first solution is not accepted.
Could anyone advise me please?

Hello 
Both solutions are correct. Codecademy tests sometimes are too strict. Thanks for bringing this to our attention, I will report this as a bug 
Order in INNER JOIN does not matter, both solutions are correct, this is a problem on our side.

In previous lessons maybe lesson 2, i used ‘AS’ keyword to print the table. My output and the answer was same but it was not accepted as i used ‘AS’ keyword. After removing it, my answer was accepted. Is that also a Bug.
Data Science Path
Lesson 3, Multiple Tables Lesson 5Multiple Tables Lesson 51366×768 152 KB
"
7,Can we use WITH for more than one nested query in SQL?,"Get Help,Git",,9,"
Question
Can we use WITH for more than one nested query in SQL?
Answer
Yes, you can use WITH for more than one nested query. You can do so by listing each query using commas after the WITH.
For example,
WITH
query1 AS (SELECT column1 FROM table1 WHERE condition1),
query2 AS (SELECT column2 FROM table2 WHERE condition2)
…

","
How could I solve this problem?

Which of the rows have a price greater than the average of all prices in the dataset? 
Only one table.


Wouldn’t you just do this by comparing the price vs the average in a where clause?
select *
from table_name
where price_col > avg(price_col);


Hello guys. You can’t use AVG on a where clause. To do that you’ll have to do a subquery.
like:
select *
from table_name
where price_col > ( select avg(price_col) from table_name );

I still don’t understand why the return from avg is not possible on where but the return from a subquery is. Hope it helps anyway.




 jephos249:

Question
Can we use WITH for more than one nested query in SQL?
Answer
Yes, you can use WITH for more than one nested query. You can do so by listing each query using commas after the WITH .
For example,
WITH
query1 AS (SELECT column1 FROM table1 WHERE condition1),
query2 AS (SELECT column2 FROM table2 WHERE condition2)
…



Does anyone know a good example on when you might use a WITH with more than 1 nested query?

Just trying to use that in the exercise where I have to separately calculate total points of all users, then total points of over-performers and divide one by another. Not sure if it’s a correct usage or if there is a better way though.

hey why this query cant be used in this given problem ,. can anyone help here?
SELECT customer_id,count(subscription_id) as ‘subscriptions’ from orders join customers on orders.customer_id= customers.customer_id ;

Thought it would be an interesting exercise to see if this problem can be solved using a join instead.
While the output order comes out slightly different, this query works:
SELECT customers.customer_name,
COUNT(subscription_id) AS ‘subscriptions’
FROM orders JOIN customers ON orders.customer_id = customers.customer_id
GROUP BY customers.customer_name;

I also was interested in altering the code and came to the same result that even seems to be leaner and easier.
So, I wonder why using WITH at all while there are other more appealing options. Are there scenarios that can only be solved by using WITH?
"
8,When should we use each type of JOIN?,"Get Help,Git",,1,"
Question
When should we use each type of JOIN covered in the lesson?
Answer
Depending on how you need to select the data, each type of JOIN may accomplish a specific goal.
JOIN (or INNER JOIN)
Use JOIN, or INNER JOIN, when you want to strictly select rows of data that match some condition, provided by an ON clause. For example, if we had tables of employee information, and require their company information, we could JOIN the tables together so that we only obtain results that match, and provide us all the information we need, excluding results that are missing information.
LEFT JOIN
LEFT JOIN can be used when you want to see all the results from the first table no matter what, but also want to include matches, if any, with the second table. For example, say we had a table for customers and another table for purchase information. If we wanted to obtain all customer information, and any purchase information, then a LEFT JOIN might be useful. If the customers made no purchases, their information will still be returned.
CROSS JOIN
CROSS JOIN can be used when you want to get combinations of rows from a table with other tables. A simplified example of using this would be, say we wanted to get every possible combination of a meal, which consists of an appetizer, main course, and dessert. Using a CROSS JOIN can give us every possible combination.
UNION
Although not necessarily a JOIN, UNION can be used when you wish to combine multiple tables together quickly. One helpful feature of a UNION is that it will only return unique rows, so there will be no duplicates in the combined table.
",
9,Can we alias multiple columns in a single query?,"Get Help,Git",,5,"
Question
Can we alias multiple columns in a single query?
Answer
Yes, you can alias multiple columns at a time in the same query.
It is advisable to always include quotes around the new alias. Quotes are required when the alias contains spaces, punctuation marks, special characters or reserved keywords. It is simply more convenient to always include quotes around the new alias.
Example
SELECT course_id AS ""Course ID"", exercise_id AS ""Exercise ID""
FROM bugs;

","
thanks sharing! !!!

thanks for your sharing!

Is it possible to give two aliases to the same column? I would assume not?

It is possible! This is a completely valid query:
SELECT id, name AS ""name 1"", name AS ""name 2"" FROM employees;

Possible? Yes. Useful? Probably not 
"
10,What happens if tables we perform UNION on have duplicate rows?,"Get Help,Git",,8,"
Question
What happens if the tables we perform the UNION operator on have duplicate rows?
Answer
When you combine tables with UNION, duplicate rows will be excluded.
To explain why this is the case, recall a Venn Diagram, which shows the relations between sets. If we perform UNION on two sets of data (tables), say A and B, then the data returned in the result will essentially be
A + B - (A intersect B)
In the first part,
A + B
will add together all the rows of both tables, including duplicates.
The second part,
- (A intersect B)
will remove every duplicate, which is where A and B intersected.
If, however, you wanted to include duplicates, certain versions of SQL provides the UNION ALL operator.
","
What happen if we use union function in below mentioned tables (table 1 and 2).
Since name in table 2 and table 1 is same , however all other details are not same. So will union function delete the table 2 value?


Union of these two tables:
SELECT * FROM ""Table1""
UNION
SELECT * FROM ""Table2""

will result in:
id		Name	Address
1		A		D
2		B		E
3		C		F
5		A		G


UNION will exclude any duplicated rows. But row with id 5 is unique, no other row has name ""A"" and address ""G"".

Does that mean in order to remove duplicate values , union will only remove completely identical rows. Even if one entry of row is not same as some other row, it will be added on.

Yes 
But it’s important to note that the selected row is not always the same thing as the whole row. For example, let’s say that we want to get only the names. In the example above we got 4 results. This is our new query:
SELECT Name FROM ""Table1""
UNION
SELECT Name FROM ""Table2""

the result is:
Name
A
B
C

Only 3 results, why? Because two rows had an identical value in the column Name - A and because this was the only queried column - those rows were duplicates. It does not matter that those two rows in the database have different values in column id and Address - because these columns were not part of the selection.

What will happen to the primary key(like id ) of both the tables if their primary keys coincide but the values in rest of the columns are different? For example in your example if the id in Table2 was 1 instead of 5 what would have happened?

Primary Keys are unique by definition - they cannot be duplicate  So that column would just be a normal column (like the name column) and not a primary keys column…

Hey @factoradic can you give some insights ?
"
11,"What's the difference between COUNT(1), COUNT(*), and COUNT(column_name)?","Get Help,Git",,10,"
Question
What’s the difference between COUNT(1), COUNT(*), and COUNT(column_name)?
Answer
It’s important to note that depending on the ‘flavor’ of SQL you are using (MySQL, SQLite, SQL Server, etc.), there may be very slight differences in performance between COUNT(1) and COUNT(*), but generally speaking COUNT(1) and COUNT(*) will both return the number of rows that match the condition specified in your query.
As for COUNT(column_name), this statement will return the number of rows that have a non-null value for the specified column.
Let’s say we have the following table called people:

When we run either of these queries:
SELECT COUNT(1) FROM people;
SELECT COUNT(*) FROM people;

we’re going to get a result of 3 because there are three rows in the table. But If we run this query:
SELECT COUNT(favorite_color) FROM people;

we will get a result of 2 because the third row contains a value of NULL for favorite_color, therefore that row does not get counted.
","
I noticed it’s also possible to use count() instead of count(*)
Is there any difference?

It may take some digging, but my guess would be that count(*) does not include null rows.

It may be possible but its not documented anywhere that I`ve been able to find, and I’d guess therefore best avoided as likely to return unpredictable results.

This answer should be part of the main content of SQL curriculum, when COUNT() is introduced here.
I see so many people in this Forum (including myself) get confused about the difference between COUNT(*) and COUNT(column_name).

@factoradic may be able to shed some light on this and prompt the curriculum team to consider your suggestion. Thanks for posting it.




 masakudamatsu:

This answer should be part of the main content of SQL curriculum, when COUNT() is introduced here.


@masakudamatsu I am sorry, I don’t understand the problem. What information is missing in the instructions of this exercise? Or maybe the instructions should be rephrased? This is na honest question, I simply do not see what is missing.
I will be happy to pass this on, but there are a few fields in the bug report that I have to fill, so I need a bit of help 




 jeltehomminga:

I noticed it’s also possible to use count() instead of count(*)
Is there any difference?


Sorry for digging this out, but I was curious and I had to check.
We can precede the statement with the keyword EXPLAIN, this will return information about how the SQL statement would be executed (read more in the linked doc if that sounds interesting!). So I decided to check if there is any difference between count() and count(*):
> EXPLAIN SELECT COUNT(*) FROM artists

addr	opcode		p1	p2	p3	p4	p5	comment
0		Init		0	7	0		00	
1		OpenRead	1	4	0	1	00	
2		Count		1	1	0		00	
3		Close		1	0	0		00	
4		Copy		1	2	0		00	
5		ResultRow	2	1	0		00	
6		Halt		0	0	0		00	
7		Transaction	0	0	34	0	01	
8		Goto		0	1	0		00	

> EXPLAIN SELECT COUNT() FROM artists

addr	opcode		p1	p2	p3	p4	p5	comment
0		Init		0	7	0		00	
1		OpenRead	1	4	0	1	00	
2		Count		1	1	0		00	
3		Close		1	0	0		00	
4		Copy		1	2	0		00	
5		ResultRow	2	1	0		00	
6		Halt		0	0	0		00	
7		Transaction	0	0	34	0	01	
8		Goto		0	1	0		00	

Exactly the same output. This means that these two queries will always give the same results. But as @patrickd314 cleverly pointed out - this is not documented, so it might be changed in the future versions of the SQLite. It is advisable not to use COUNT().

thanks for checking!




 factoradic:

@masakudamatsu I am sorry, I don’t understand the problem. What information is missing in the instructions of this exercise? Or maybe the instructions should be rephrased? This is na honest question, I simply do not see what is missing.


What’s missing is the example of COUNT(column_name). The lesson only gives us an example of COUNT(*).
The lesson in its current form gives us an incorrect impression that COUNT(*) “counts the number of non-empty values in that column” or COUNT(column_name) will “count every row”. I know this is the misunderstanding of what’s written. But for the beginners who have no idea what COUNT() is, the sentence

COUNT()  is a function that takes the name of a column as an argument and counts the number of non-empty values in that column.

makes us expect some code example of this sentence. But the example actually given is a different thing to learn, that is COUNT(*). That surely confuses beginners (and it did to me).
Am I clear enough now?

Thank you very much for this explanation since I did not know the difference between
COUNT(*)
COUNT(COLUMN_NAME)

"
12,Can we apply DISTINCT to a SELECT query with multiple columns?,"Get Help,Git",,6,"
Question
Can we apply DISTINCT to a SELECT query with multiple columns?
Answer
Yes, the DISTINCT clause can be applied to any valid SELECT query. It is important to note that DISTINCT will filter out all rows that are not unique in terms of all selected columns.
Feel free to test this out in the editor to see what happens!
Example
Let’s assume that in the Codecademy database there is a table bugs which stores information about opened bug reports. It might have columns like course_id, exercise_id, reported_by, reported_date, report_url, etc. For the purpose of this example, let’s say that this is our table:
id			course_id	exercise_id	reported_by
1			5			4			Tod
2			5			4			Alex
3			5			3			Roy
4			5			4			Roy
5			7			4			Alex
6			7			8			Tod
7			14			2			Alex
8			14			4			Tod
9			14			6			Tod
10			14			2			Roy

Community Manager would like to know the names of the users who have reported bugs in order to send them a special Thank You note. We can use a SELECT query with DISTINCT keyword to pick unique values from the reported_by column:
> SELECT DISTINCT reported_by FROM bugs;

reported_by
Alex
Tod
Roy

Awesome! Exactly what we were expecting!
Our coworker would like to know in which exercises bugs have been reported. This gets trickier because now we have to query two columns: course_id and exercise_id. Let’s try to use the same approach as before:
> SELECT DISTINCT course_id, exercise_id FROM bugs;

course_id	exercise_id
14			2
5			4
14			4
14			6
5			3
7			4
7			8

Is this the result we were hoping for? Yes. It is true that there are duplicated values in the course_id and exercise_id, but every row is unique (there are no two rows with the same value in course_id and exercise_id).
","
Lukerab is right.   I’m testing in this exercise and here’s what happens.
SELECT DISTINCT year, genre
FROM movies;
I have a 2010 for action and a 2010 for comedy.
I have duplicates of the genre, and duplicates of the year, but only if the combination of genre/year is distinct.
This leads me to wonder how I can get additional columns without having the DISTINCT apply to them.
I tried variations of the following query and can’t get any results:
SELECT name, imdb_rating, DISTINCT genre
FROM movies;
I’m not sure why it’s not working to use DISTINCT in this format.
If do this:
SELECT DISTINCT year, genre, name
FROM movies;
Then I get multiple 2008 Action movies because they have different names.
The combination of all 3 columns is distinct because the name differs.
Does anyone know how to display an additional column, like name, without it being part of the “distinct”?   Like if I want to see all the names of movies that have a distinct combination of year/genre for example?


Does anyone know how to display an additional column, like name, without it being part of the “distinct”? Like if I want to see all the names of movies that have a distinct combination of year/genre for example?

For that, you would just make another query, because you don’t want the data to be distinct.

Hello Myke. I had the same doubt you have. You can’t do what you want to do, because when you use “distinct”, you group the rows, so we can’t know from wich row to take the data, when you try to ungroup it. eg:
you have the following table:
name, year
test name, 2010
other name, 2010
another name, 2011
another, 2012
if you select distinct by year, you’ll have:
2010, 2011, 2012
if you select distinct by name and year, you’ll have all the data, since there are no duplicates.
Now, let’s imagine we can do what you’re trying to. Select distinct only for one column, like year. The return would be something like this:
test name, other name, 2010
another name, 2011
another, 2012
That’s not possible, because you can’t have multiple values for a single field value. You can’t have two names.
I don’t know if you still have this doubt, but I hope it helps someone.

I think for this you need to use GROUP BY statement
like:
SELECT *
FROM movies
GROUP BY YEAR, GENRE
It outputs the same as the distinct except you can include other columns without it having distinct feature.
With this  you can see all other columns, you can even select specific columns like:
SELECT name, imdb_rating
FROM movies
GROUP BY  genre

That’s true.
since DISTINCT find the duplicate value in COLUMN, then by GROUP command we slice it by ROWS.
"
13,Is there a shorter way to insert multiple rows in a table?,"Get Help,Git",,22,"
Question
In the context of this exercise, is there a shorter way to insert multiple rows in a table?
Answer
Yes, instead of inserting each row in a separate INSERT statement, you can actually insert multiple rows in a single statement.
To do this, you can list the values for each row separated by commas, following the VALUES clause of the statement.
Here is how it would look,
INSERT INTO table (col1, col2, col3)
VALUES
(row1_val1, row1_val2, row1_val3),
(row2_val1, row2_val2, row2_val3),
(row3_val1, row3_val2, row3_val3);

","
Can you give a 2x3 or 5x3 example? Using your 3x3 example is really unhelpful because it doesn’t tell me, the SPLite learner, which orientation the matrix is. Generally, it’s best to use rowLengths and colLengths that are different (or better, coprime) so that there is no ambiguity about whether the “rows” or “columns” are the input or output data.
For example, I don’t know which of the follow two programs are correct:
    INSERT INTO table (col1, col2) VALUES
    (3, 2),
    (Emma Stone, Daniel Radcliffe),
    (38, 29);

    INSERT INTO table (col1, col2, col3) VALUES
    (3, Emma Stone, 38),
    (2, Daniel Radcliffe, 29);

thanks
~Greg

I would say the second statement would be the correct one.

Totally the second one. I was a little confused too, mainly because of jephos249’s reference to rows in his example:
(row1_val1, row1_val2, row1_val3),
(row2_val1, row2_val2, row2_val3),
(row3_val1, row3_val2, row3_val3);
But he’s just referencing rows so that we fledgling coders know where the data will be inserted, NOT because any additional commands are necessary to place them in said row(s). SQL is smart enough to know that each string of inserted values will end up in a new row, with the values in that string populated in the corresponding columns within the row.
Your first postulation:
INSERT INTO table (col1, col2) VALUES
would likely result in an error because in the previous step we created a table with 3 columns, where this command has only provisioned for 2. Or if not an error, per se, you would end up with one column missing data.

   INSERT INTO table (col1, col2, col3) VALUES
    (3, Emma Stone, 38),
    (2, Daniel Radcliffe, 29);

is almost good, but you have to change col1, col2, col3 by theirs real names id, name, age, and the name of the table which is here celebs
   INSERT INTO celebs (id, name, age)
   VALUES
    (3, Emma Stone, 38),
    (2, Daniel Radcliffe, 29);


Hello,
What am I writing wrong? Why doesn’t the first row appear?

image.png1918×1023 138 KB


Hello, @aryanwen! Welcome to the forum!
If you look at the Database Schema, you see that the celebs database only has 1 row. The row it has is the first row from your INSERT clause. To add multiple rows, you either need to do this:
INSERT INTO celebs (id, name, age) 
VALUES (1, 'Justin Bieber', 22); 

INSERT INTO celebs (id, name, age) 
VALUES (2, 'Beyonce Knowles', 33); 

INSERT INTO celebs (id, name, age) 
VALUES (3, 'Jeremy Lin', 26); 

INSERT INTO celebs (id, name, age) 
VALUES (4, 'Taylor Swift', 26);

or this:
INSERT INTO celebs (id, name, age)
VALUES 
 (1, 'Justin Bieber', 22),
 (2, 'Beyonce Knowles', 33),
 (3, 'Jeremy Lin', 26),
 (4, 'Taylor Swift', 26);

Try either method, and add:
SELECT * FROM celebs;

as the last line following your INSERT clause(s) to see the contents of celebs.

The punctuation… after each statement is just a (,) at the end really end is when you use the ( ; )
Greetings!

Just a small minor comment to your code example:



 gregjfenn:

INSERT INTO table (col1, col2, col3) VALUES 
(3, Emma Stone, 38), 
(2, Daniel Radcliffe, 29);



Enclose the string with quotation marks. So it should instead be:
INSERT INTO table (col1, col2, col3) VALUES 
(3, 'Emma Stone', 38), 
(2, 'Daniel Radcliffe', 29);


I dunno if that’s right but i think it depends on the start of your code
when you write the data  type(INTEGER,DATE,TEXT).

This saves time and energy typing same query. Thanks.


Capture.PNG1365×656 68.3 KB

Can someone fix it for me???

Hello, @nguynquanghuy4910214.
Welcome to the forum.
If you’ll notice in your query results, you are getting the first value that you inserted. There is something at the end of your first value that is ending your INSERT INTO statement prematurely before the remaining values are inserted. 

The semi colon at the end of the first line after INSERT INTO comment is ending the statement. That is why such a result is there.

How would you load data into a table using an external file?

Hello guys! when I am trying to implement current Query in Microsoft Access, it gives me an error.
Look on screen shot!
Error|690x366

This is a tad vague but I’ll attempt to respond. Assuming you have an SQL dump, are working on a terminal, and know the mySQL user and password credentials, while you are in your project folder inside the development environment where mySQL is installed, run the following command:
mysql -u your_username -p your_database_name < your_file.sql

If the data type is Text, then the value has to be into quotation mark.

And you have to us quotation mark for variables that are Text:
INSERT INTO table (col1, col2, col3) VALUES
    (3, 'Emma Stone', 38),
    (2, 'Daniel Radcliffe', 29);


I am trying to insert multiple rows using single sql statement. please tell me what is wrong in this.?
insert into employee (employee_id, first_name, last_name, gender, position, department_id, salary)
values
(2,‘abc’,‘sharma’,‘f’,‘Analyst’,100,110000),
(3,‘xyz’,‘sharma’,‘f’,‘Analyst’,100,90000),
(4,‘mno’,‘sharma’,‘m’,‘manager’,100,150000);
Error:ORA-00933: SQL command not properly ended
ORA-06512: at “SYS.WWV_DBMS_SQL_APEX_200100”, line 581
ORA-06512: at “SYS.DBMS_SYS_SQL”, line 1658
ORA-06512: at “SYS.WWV_DBMS_SQL_APEX_200100”, line 567
ORA-06512: at “APEX_200100.WWV_FLOW_DYNAMIC_EXEC”, line 2127
"
14,Is the `AND` used in `BETWEEN` the same as the `AND` operator between conditions?,"Get Help,Git",,2,"
Question
Is the AND used in BETWEEN the same as the AND operator used between multiple conditions?
Answer
No, although they may be assumed to be the same thing, the AND used with a BETWEEN, like
BETWEEN 1990 AND 1999
is not quite the same AND used when combining multiple conditions. When used in a BETWEEN statement, we are not combining two separate conditions, but providing a range of values to obtain the values within that range.
However, we can easily rewrite a BETWEEN to one with two conditions, like these queries which would be identical.
SELECT *
FROM movies
WHERE year BETWEEN 1990 AND 1999;

SELECT * 
FROM movies
WHERE year >= 1990
AND year <= 1999;

","
SELECT *
FROM movies
WHERE year IS NOT NULL
   AND year BETWEEN 1985 AND 1989
   AND genre = 'horror';

The first AND is an operator used between multiple conditions, as part of the WHERE clause.
The second AND is a part of the BETWEEN operator, also a part of the WHERE clause.
I understand correctly?
"
15,Can we apply ORDER BY with multiple columns?,"Get Help,Git",,11,"
Question
In SQL, can we apply ORDER BY with multiple columns?
Answer
Yes, following the ORDER BY, you can list more than one column for which to order the data by.
When ordering by more than one column, it will first order the data on the first column, then, keeping the previous column order, it will order on the next column, and so on.
You can also specify ascending or descending order for each listed column.
Example
/* 
This will order on the year, then order the 
names in reverse alphabetical 
order, preserving the order
of the year column.
*/

SELECT year, name
FROM movies
ORDER BY year ASC, name DESC;

","
In the example that you had posted, won’t the resulting data be incorrect? As in, the year won’t be matching the name of the movie?

Hello  Welcome to the forum!
No, this will not happen. A row is treated as a consistent entity. ORDER BY clause sorts whole selected rows by the given columns (year & name).

Take a look at this table named bugs:
id				course_id		exercise_id		reported_by
1				14				2				Alex
2				5				4				Tod
3				14				4				Tod
4				14				6				Tod
5				5				4				Alex
6				5				3				Roy
7				14				2				Roy
8				7				4				Alex
9				5				4				Roy
10				7				8				Tod

Now, let’s run this query: SELECT * FROM bugs ORDER BY reported_by;, this is the result:
id				course_id		exercise_id		reported_by
1				14				2				Alex
5				5				4				Alex
8				7				4				Alex
6				5				3				Roy
7				14				2				Roy
9				5				4				Roy
2				5				4				Tod
3				14				4				Tod
4				14				6				Tod
10				7				8				Tod

Please notice that in both results rows with reported_by = Alex have ids 1, 5 and 8 

Thanks for the reply!
I get what you’re saying, but my question was for multiple columns selected for the ORDER BY clause.
So in the example originally posted, they had ordered by ‘year’ in the ascending order and then ‘name’ in the descending order.
So my question was which order will prevail in the end? Because the result set will be different for both the orderings individually.

Oh, sorry for misunderstanding your question.
Ok, so the same table as before - bugs. This is the result of SELECT * FROM bugs ORDER BY course_id ASC, exercise_id DESC:
id			course_id		exercise_id		reported_by
2			5				4				Tod
5			5				4				Alex
9			5				4				Roy
6			5				3				Roy
10			7				8				Tod
8			7				4				Alex
4			14				6				Tod
3			14				4				Tod
1			14				2				Alex
7			14				2				Roy

The data was first ordered by course_id ascending. And then each group of the rows (course_id = 5, course_id = 7, course_id = 14) was ordered by exercise_id in a descending manner.

Awesome, thank you so much! 

You’re very welcome! 

Thank you for clearing that up, was also wondering the same thing.
Cheers,
Ben

Hi thank you for this discussion.  I conclude that by writing order by in 2 condition is like making group in a group and so on.
I wonder since I see the same names in ‘reported by’ but with different id, is that refer to the same person? If yes, how we could differentiate if in actual condition the person are NOT the same even that they have same name?
Thank you.




 jephos249:

You can also specify ascending or descending order for each listed column.


is this print two different table
or what or give priority to first condition

Hello,
When you say it’s ordered in order of the first column and then the next and so on, is that the order of the columns in the table or the order I ask them to be ordered?
"
16,Can you CROSS JOIN on more than two tables?,"Get Help,Git",,10,"
Question
In the context of this exercise, can we perform CROSS JOIN on more than two tables?
Answer
Yes, you can CROSS JOIN as many tables as you want.
Let’s build upon the example from the exercise, which had the tables shirts and pants, and add a third table for socks.
We can perform the CROSS JOIN for all three tables, like so
SELECT shirts.shirt_color,
pants.pants_color,
socks.sock_color
FROM shirts
CROSS JOIN pants
CROSS JOIN socks;

If the tables had 3 shirts, 2 pants, and 6 socks, then the result of this CROSS JOIN will give
3 x 2 x 6 = 36 combinations, or 36 total rows.
One thing to note is that when you use CROSS JOIN without a WHERE clause, like the example above, we get every single combination of the table rows.
As a result, this can quickly grow larger as you CROSS JOIN more tables because the growth is multiplicative.
","
I’ve got a question on the code in this exercise.  I can’t wrap my head around this.
SELECT month,
   COUNT(*) AS 'subscribers'
FROM newspaper
CROSS JOIN months
WHERE start_month <= month 
   AND end_month >= month
GROUP BY month;

In the above  WHERE statement, I don’t understand
WHERE start_month <=month
AND end_month >=month
After the greater than or less than, why is the argument month?  What is that doing?


WHERE start_month <=month
AND end_month >=month
After the greater than or less than, why is the argument month? What is that doing?

This WHERE clause compares all the values in ‘start_month’ and ‘end_month’ columns from newspaper table with the values in ‘month’ column from months table.
It is used to select only the rows with the months when the person was actually subscribed.
The rows inside the red rectangle will not be selected in this case.


essentially this is doing the same thing as (end_month - start_month) +1?

yes, it is but i dont think we can do math in SQL queries

Actually i think and i stand to be corrected but the CROSS JOIN function should be accompanied by a WHERE clause in order to give a more meaningful result.




 jephos249:

3 x 2 x 6 = 36 combinations, or 36 total rows.


I understand this, but what query would I use if I wanted to determine the total number of items? Meaning, what clause could single out each clothing item in a joint –or cross joint– table in order to get the total amount of distinct rows, as in 3 + 2 + 6 = 11? I’ve tried DISTINCT to not much avail.

NO, it’s qualifying the current month it is querying.
If the current month in the process (month) is
(greater than the start month
AND
lesser than the end month, )
THEN
the current month being compared
is WHILE the subscription is active.

Hi ,
I have tied the same. but the code throwing error.
CROSS JOIN Code was Not working1405×579 22.5 KB
Can Anyone help me on this?

Hi, check for typo on CROSS (your screenshot shows CORSS instead).
"
17,What are some reasons to apply constraints to a table?,"Get Help,Git",,13,"
Question
In the context of this exercise, what are some reasons to apply constraints to a table?
Answer
Applying constraints to a table can be useful, and provide some important benefits such as reliability and consistency of your data. The following are a few reasons you might consider for applying constraints to a table.
One reason for adding constraints is to prevent invalid data in the table. This is very important, because invalid data can cause issues and unexpected results from calculations. We do not have to worry about new data being added that might otherwise violate our constraints and cause bigger issues.
Similar to the previous point, constraints can let us prevent missing data, which is usually filled as NULL within the table. Instead of having missing values set to NULL, we can set constraints so that the missing values are given some default value instead, like 0. This can make some calculations easier to do.
Another important reason to add a constraint is for uniqueness, usually in the form of values like the id, or identifier column. By using a constraint like the PRIMARY KEY, we can ensure that every row has their own unique id value.
","
Do I understand correct that PRIMARY KEY is meant to give identification criteria to the row, whereas UNIQUE works as a clause that helps seperate rows with identical values? For example if we have a column name_of_customers an set it as UNIQUE, and after that we want to group rows by name_of_customer, this UNIQUE clause will not prevent from grouping different customers with identical name from merging?

My understanding is that UNIQUE is used for human readable identifiers. Say, we assign each customer with id as INTEGER PRIMARY KEY. But an integer doesn’t tell us who this customer is. So we want to have another identifier name_of_customers as TEXT UNIQUE. This is useful for us to view the data, if not useful for data manipulation.

But why not to use just TEXT? Because UNIQUE is a separate constraint, we can skip it. And there could be identical names in name_of_customers, so if UNIQUE constrain doesn’t let us hame to same names in the one column, that could be a problem. So i wonder, if UNIQUE doesn’t let us make new row if we had that name before, i would rather use e-mail, because there is no way, that 2 people may have one e-mail. But I also wonder if it works different way and helps to not merge identical names when you set the table view by name_of_customer. Or maybe there is another syntax, that helps to do that.
17 авг. 2019 г., в 8:46, Masayuki Kudamatsu via Codecademy Forums codecademy@discoursemail.com написал(а):

If the data contains multiple persons with the identical name, I would just use  TEXT, as you suggest, if I treat name_of_customers just as a variable to analyze. (Say, I’m interested in the popularity of particular surnames.)
But if I use name_of_customers as a human readable identifier, I would enter the data like ‘John Smith A’, ‘John Smith B’ etc. to make each name unique and impose TEXT UNIQUE, because I want to immediately know which John Smith I’m looking at. For customer datasets, this may not be necessary. But if you’re a political scientist working on the dataset of U.S. politicians, for example, you want to know which George Bush you’re looking at, when you’re browsing the data.
Email address can be used as a unique identifier, but it’s not human readable, because some people use a weird email address like emerald_green1032@gmail…, which doesn’t really tell who it is.
That’s my take on this issue.

Does using constraints overcome SQLite disadvantage of not restricting the user from inputting wrong values?

We don’t have the right to name someone John Smith A and John Smith B in case of real life. The workaround that I see here is to introduce another field such as email or address, which will be unique for two people with two similar full names.

Only one field in a given table can be the primary key, but there are going to be situations where two fields must have unique values. A good example would be a table containing employee information.
In the United States, at least, most companies will assign each employee an “Employee ID”, which will typically function as the primary key, but all employees also have unique Social Security Number (SSN). Because of the sensitivity of a Social Security Number, Employee ID is generally used in as many situations as possible, but it is necessary to collect SSN data for payroll and tax purposes.
As a result, it is imperative that we know that each record in the “employee” table will have both a unique “Employee ID” and a unique “SSN”.
I’m sure that there are many similar situations, but this is the first one that came to mind.

Great answer! I think this summarizes the reasoning perfectly!

amazing explanation thank u so much

By ‘wrong values’, do you mean ‘wrong type of value’?

Good answer.
This is the understanding that I got as well. I think some people in the comments are focused on the fact that, in the first example, ‘UNIQUE’ happens to be constraining the name column and, in life, names aren’t always unique. This assumes that we know the reasoning of the creator of the table and why they made that choice for this particular table, which we don’t. If they had used “username” as the column, I think it would intuitively make more sense.
That brings me to the question that actually brought me here. Other than ‘PRIMARY KEY’ only being able to be used once, does ‘PRIMARY KEY’ have any other features that ‘UNIQUE’ doesn’t give us?

Constraints are also used to prevent SQL injections, a type of exploit hackers use to gain unauthorized access to systems.
"
18,Can we add a column at a specific position to a table?,"Get Help,Git",,9,"
Question
In the context of this exercise, can we add a column at a specific position to a table?
Answer
No, unfortunately, you cannot specify what position to add a column to a table.
By default, a new column will always be added at the end of the table. For most intents and purposes, this should not affect much, since you can always select the columns in any order, for instance, like
SELECT col3, col1, col2

If column order is very important, then an alternative is to create a new table and add the columns in the specific order they should appear.
","
Ok, that was useful!

How would the order/index of columns affect anything?
To me it seems like something better left for the implementation. From the user (don’t want to hard-code index) and theoretical (sets and relations) standpoint this does not seem meaningful.
Besides a view seem like a much better idea than a whole new table (the cost of copy?!)
I more detailed answer would be appreciated, perhaps clarifying

how is the data stored?
how does ALTER work and what is the cost?
link/example/reference to future lesson about making new table/view and the cost of that


I don’t know about SQLite but it is possible in MySQL to add a new column in between the existing column. For example, are given below
Alter table customers
ADD column gender ENUM(‘M’,‘F’) after last_name;
Here in the above command here I use after clause that means the new column will add next to the “last_name” column.

Thanks for your answer! It is very helpful your insight! 

Good to know, thank you!

Good to know, it is very helpful.

So, after i created the column i was wondering…how do i add data and VALUES to it.
can someone give an example

moving to Update statement. you will see.
"
19,Is it possible for a table to have more than one unique identifier column?,"Get Help,Git",,11,"
Question
Is it possible for a table to have more than one unique identifier column, like an id column?
Answer
Yes, it is possible for a table to have more than one column which can uniquely identify a row of data. A column that can uniquely identify a record of data is known as a ""Candidate Key"". Tables can have multiple ""Candidate Key""s, each of which could potentially be the ""Primary Key"", but there must only be one ""Primary Key"" per table. Usually, the column chosen as the ""Primary Key"" follows the naming convention like customer_id or product_id.
For example, say that we had a table of employee records, with the columns employee_id and phone_number. Every employee has a unique employee_id value, and a unique phone_number value. Both of these columns can be unique identifiers for a row, so they are ""Candidate keys"", but the ""Primary Key"" would most likely be set to employee_id.
","
Since column can have many candidate key. Is the choice of primary key essentially depends on us or it has to be fixed?

In case anyone else is also wondering about this:
A table could have many columns that are candidate keys, but only one PRIMARY KEY.
The choice is completely up to us (we create those tables) but as the answer says there is usually one named id that’s more suitable.
Imagine 2 tables: employees and tasks.
employees has as “Candidate Key” the id, and the phone number. We make a JOIN between these two tables.
Now which “Candidate Key” would you put in the tasks table?
Hypotetical row:
|task_id| employee |description|
|  1  |    1    |“make coffee”|    or
|  1  |3929296528 |“make coffee”|   ?
But when the situation is to choose between a serial id(1, 2, 3, …) and a SSN(Social Security Number) id, I’d recommend you to choose the SSN, although using the serial wouldn’t be an error either.
One last thing: if you find that you don’t have any column that could be a PRIMARY KEY, add one, call it table_id.

Select *
from students,classes on students.class_id
where students.class_id = classes.id
;
Other than all columns being displayed, and the students.class_id not ‘overwriting’ the classes.id, what is the difference on this process, other than providing an ability to expand the WHERE?


but the  ""Primary Key""  would most likely be set to  employee_id .

What does it mean by setting “Primary Key”? Is it just a concept rather than a line commanding a designated column as “Primary Key”? Thanks!

Hy to all I got a little bit confused what is difference between primary Key and Candidate key …

Primary Key would be the main unique identifier column within a table.
So if it’s your “employees” table - the primary key will be, say, employee_id.
And within the same table, you can have an extra, secondary, unique identifier which is referred to as Candidate Key. That can be a phone_number column - also unique for each employee, but not the main identifier.

In the lesson, it says only one column can be a Primary key but that is wrong! A Primary key can be made up of more than one column. It’s composite but it’s still a single Primary key for that table. I request the admin to correct this in the lesson, thanks!

if you find that you  don’t  have any column that could be a  PRIMARY KEY , add one, call it  table_id .
(add one, call it  table_id .)which means?

Let’s say you have a table that tracks your shopping list, your table will have a column called stuff and one called quantity, the row will look like: pear, 5.
Now none of stuff or quantity can be considered as a candidate key, what do you do?
You make your own id column, call it id, or whatever, set it to be AUTO_INCREMENT In MySQL (may vary in other DB systems), so your row will become 1, pear, 5.
Ideally you can set the pair (stuff, quantity) as an unique primary key but it can be messy, say you just want to add 5 pears twice. It’s up to you.

Actually, there is a keyword PRIMARY KEY you can use in your CREATE TABLE statement to specify the column that will work as a primary key.
"
20,Are there guidelines to splitting a table as provided in the example?,"Get Help,Git",,6,"
Question
In the context of this exercise, are there any guidelines and reasons for splitting the table as shown in the example?
Answer
Yes, although there might not necessarily be a one-fits-all solution to every possible database structure, there are some guidelines that can help you when you need to split a table into multiple tables.
A concept that most programmers use to refer to restructuring a database in this manner is “Database Normalization”. A very brief explanation of this concept is that it aims to accomplish that databases tables are structured so that they avoid data redundancy and keep the data accurate and consistent. “Data redundancy” is when we have a lot of repeated, or redundant, data.
In the example given in this exercise, it explains how we might split a table into multiple tables, which is essentially doing normalization. Initially, the table has many columns, and as a result, some of the values will most likely be repeated many times, which introduces data redundancy.
Say for example, we added 1 million rows to this table. Some values like customer_address might end up being stored many thousands of times, when we really only need to store it once per customer.
To avoid this issue, we would split the table so that the information is stored more concisely. If we need the customer information, we can obtain it from the customers table, by their customer_id. And, if we need the information for a subscription, all of its information is stored in the subscriptions table. We only need the customer_id and subscription_id in the orders table, and we can obtain their information from their respective tables.
","



 jephos249:

“Database Normalization” . A very brief explanation of this concept is that it aims to accomplish that databases tables are structured so that they avoid data redundancy and keep the data accurate and consistent . “Data redundancy” is when we have a lot of repeated, or redundant, data.


Would you still keep a master table with all the redundancies?

It’s a hard question to answer without specifics but think of a master table with purchase orders. Ideally, any business would want to have repeat customers so while the order numbers are unique, the emails may be redundant. In that case, not keeping the table intact may be an issue later on right?

No, there’s no need. All the information that would be stored in a hypothetical “master table” is already in the database, and you can use queries to join together the data however you like. The data is not made more fragile or less accessible by being divided up into multiple tables. After all, viewing the contents of one table vs multiple tables is the same process: you write a select query.

Just exactly my thought. Also remember that the essence of having a database is in order to query specifics and not to view a large database in one shot. As long as your multiple tables are jointly queryable, then you are good

I am still a bit confused.
What exactly is the issue with redundancies in a table if we ultimately are going to be querying everything anyway?
Is it a storage issue?
"
21,"When using GROUP BY, do we always have to group by a selected column?","Get Help,Git",,6,"
Question
When using the GROUP BY clause, do we always have to group by one of the selected columns listed after SELECT?
Answer
No, you can GROUP BY a column that was not included in the SELECT statement.
For example, this query does not list the price column in the SELECT, but it does group the data by that column.
SELECT name, downloads
FROM fake_apps
GROUP BY price;

However, usually we do include the grouped by column in the SELECT for the sake of clarity, so that it’s easier to see what rows belong to which group.
","
I tire it and it did not work out… in the example project on CAmy it gave me only the SUM.

In your example, what name and download will be then displayed in each line?
The display will start with price = 0.0, but what name and downloads will it display then?
In my experience, it will display the name, downloads of the last item having a price = 0.0
This question is confusing.

I tried running i and it gives out a result. Not sure how is it calculating?
can anyone help?

The above code should not be used. Every non aggregate column used in SELECT statement must be added to GROUP BY clause.

Hi All,
I have tried, That wont work for me,
My Query was given below,
-- 'GROUP BY' Clause
-- It is Clause in SQL that is used with aggregate functions. It is used in collaboration with the SELECT statement to arrange
-- identical data into groups.
-- This 'GROUP BY' Statement comes after any 'WHERE' Statement, but before 'ORDER BY' OR 'LIMIT'

IF EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='GroupClause')
BEGIN
	TRUNCATE TABLE GroupClause
	DROP TABLE GroupClause
END
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='GroupClause')
BEGIN
	CREATE TABLE GroupClause
	( 
		ID INT,
		MovieName VARCHAR(200),
		ReleaseYear VARCHAR(200),
		UserRating FLOAT,
);
	INSERT INTO GroupClause(ID, MovieName,ReleaseYear,UserRating)
				   VALUES (1,'Iron Man','2009',86.2),
					(2,'Win Man','2018',86.1),
					(3,'Heartin Man','2008',25.2),
					(4,'Lucky Man','2009',34.45),
					(5,'Warner Man','2008',25.23),
					(6,'Evil Man','2010',67.1),
					(7,'Spider Man','2010',78.98),
					(8,'Lone Ranger','2015',67.11),
					(9,'Green Lanrern','2011',87.22),
					(10,'Wonder Woman','2012',34.45),
					(11,'X Men','2012',99.12),
					(12,'Fast and Furious','2012',100),
					(13,'Failure Man','2013',86.1),
					(14,'Successful Man','2013',55.35),
					(15,'Pain Man','2014',12.12),
					(16,'Cry Man','2018',24.24),
					(17,'Vanish Man','2015',36.35),
					(18,'Torque Man','2010',06.87),
					(19,'Stupid Man','2018',55.98),
					(20,'Gaint Man','2008',56.76),
					(21,'Faithful Man','2014',57.90);
END

IF EXISTS(SELECT * FROM GroupClause)
BEGIN
	SELECT ROUND(AVG(UserRating),2) AS AvgRating, ReleaseYear FROM GroupClause
	GROUP BY ReleaseYear

	SELECT SUM(ID), MovieName,ReleaseYear FROM GroupClause
	GROUP BY UserRating
	
END

GROUP BY CLAUSE Doubt1567×553 22.3 KB
My SQL Version :
Microsoft SQL Server 2019 (RTM) - 15.0.2000.5
Thanks,
Thiruanvukkarasu G
"
22,"When storing missing data, should I store them as NULL?","Get Help,Git",,9,"
Question
When storing missing data, should I store them as NULL?
Answer
It can depend entirely on how you need the data to be stored and utilized.
Let’s say that you have a table of employee information, which included their address. Say that we wanted to check all rows of this table and find where any addresses are missing. If we stored the addresses as TEXT values, we might choose to store all the missing values as either '' or as NULL.
If we stored the missing address values as an empty string '' then these values are not NULL. Empty strings are seen as a string of length 0. So, if we ran a query using
WHERE address IS NULL
it would not give us the rows with missing address values. We would have to check using
WHERE address = ''
With a table containing many different data types, it may be helpful and more convenient to store any missing values in general as just NULL so that we can utilize the IS NULL and IS NOT NULL operators.
","
Is there a way to conveniently convert empty string values to NULL?

I don’t think it is possible to convert an empty string to NULL during a query. It would have to be set as such when creating a row.

We can use UPDATE for converting an empty string into NULL:
UPDATE movies
SET imdb_rating = NULL
WHERE imdb_rating = '';

I have tested this code on this lesson’s code editor, and it works. (I wasn’t sure whether  = NULL or IS NULL works for SET, and I have learned that = NULL works, but IS NULL doesn’t.)

How to store address in your example as Null instead of ’ ’ empty String
CREATE TABLE employees (
    employee_id INT AUTO_INCREMENT PRIMARY KEY,
    address TEXT NOT NULL
);



It says here that if i insert a row without a value for that column, in this case address, it won’t let me introduce the entire row.Therefore, i think that’s not the way to introduce NULL values in a row.
Correct me if i’ wrong

I have an example:

image1285×545 42.1 KB

As you can see, the row was not inserted.
I think the only way to introduces empty values is typing NULL when inserting rows.

If your constraint for the column “address” is that it has to be not null, then you won’t be able to insert a line where the address is null as it would violate the constraint
If you want to be able to insert lines with no address (living the field as null) then you should not add the constraint when declaring address TEXT NOT NULL

what i Observed was, when you are inserting the first row of the table, that should have all the values of the columns but after that i was able to select only those columns in which i wanted to insert my values, ignoring those in which i didnt want to insert any value.
"
23,Can we see a database's schema without being given a diagram?,"Get Help,Git",,1,"
Question
In the context of this lesson, can we see a database’s schema without being given a diagram?
Answer
Yes, you can!
In SQLite specifically, there is a special table named SQLITE_MASTER, which defines the schema for databases. This special table contains information about certain qualities like the table name and the schema, which provides details about all the column names and their data types.
To view this table, you can run the following statement,
SELECT *
FROM sqlite_master;

Feel free to try this out in some of the exercises to view the table information!
",
24,How does this statement tell us if a user is active or not active?,"Get Help,Git",,10,"
Question
In the context of this exercise, how does this statement tell us if a user is active or not_active?
Answer
This statement tells us if a user is active or not active based on conditions.
First, it will check whether the purchase date of the premium plan is earlier than or equal to the current date. If it is not, then there might have been some error or they are not yet signed up.
premium_users.purchase_date <= months.months
Second, it will check whether either of the following conditions is true:
If the user’s cancel date is the current date or is planned for the future, this means that they are still under the plan until their cancel date arrives,
premium_users.cancel_date >= months.months
Or, if the user has no cancel date yet, this means that they did not cancel nor plan to cancel,
premium_users.cancel_date is NULL.
If the first condition and either of the second conditions is true, this must mean they are still active. Otherwise, they are not_active.
","
Are you Assuming that if he is only active for the “whole month” of January that he is active in January and if not he is not active. This is fallacious reasoning in part cuz if someone is active for even one day during Jan I would consider them active during Jan not inactive.

I agree with board3405145664’s comment!
To rectify i think in the first condition of “premium_users.purchase_date <= months.month”, we could add an or “strftime(“m%”, premium_users.purchase_date) = strftime(”%m"", months.month) to also include situations where some users were active for only part of the month or starting not exactly on the first date of month.

I agree with @board3405145664. I think the most important thing is to define what’s mean active.
If you select months.months for a datum mark. When （premium_users.purchase_date <= months.months, premium_users.cancel_date >= months.months OR premium_users.cancel_date is NULL）it’s true, it means active.
But if not like this. When (premium_users.purchase_date > months.months, premium_users.cancel_date >= months.months OR premium_users.cancel_date is NULL) it’s true, it also means active.

I think the code is valid because months.months is just 1st date of month like Jan. 1st or Feb. 1st

I was under the impression that SQL could only compare INTEGER values as being < or >.
The months values are ‘text’ values.  Is it possible to compare text values if one of the text values for months accidently says ‘january’?

I’m still confused by this. Firstly because the months table only lists 3 months sequentially within a specific 3 month period in 2017 so this solution would only be able to tell us if the user was active at 3 points in that time range. Secondly, is a simpler approach not to filter on whether or not the cancel date A: exists and B: has elapsed on a specific date if we want to find out if the users is currently active?

Can someone help me?
In code challenge 6 of Multiple Tables, why is

FROM premium_users
CROSS JOIN months

put after CASE query?
Naturally I would assume that, two tables first need to CROSS JOIN, then we can filter and group data by CASE. So why not CROSS JOIN before CASE?
Thanks! 

The CASE statement is part of the SELECT statement.  It is evaluating what value to display for that row of data based on the date criteria.

Thanks! I kind get it now!
"
25,When do we use COUNT() or SUM()?,"Get Help,Git",,9,"
Question
When do we use the COUNT() function or the SUM() function?
Answer
Although they might appear to perform a similar task, the COUNT() and SUM() functions have very different uses.
COUNT() is used to take a name of a column, and counts the number of non-empty values in that column. COUNT() does not take into account the actual values stored, and only cares if they have a non-empty value. Each row is essentially counted as 1 towards the total count.
On the other hand, SUM() takes a column name, and returns the sum of all values in the column, meaning that it must take into account the actual values stored.
In general, use COUNT() when you want to count how many rows contain a non-empty value for a specified column. Use SUM() when you want to get the total sum of all values in a column.
","
Hi!
If SUM () takes all the non-empty values from a column, how can you count the number of empty ones?
Thanks!




 d.sanchezgarc:

If SUM () takes all the non-empty values from a column, how can you count the number of empty ones?


They answered that previously. You can use:
SELECT COUNT(column_name)
FROM table
WHERE column_name IS NULL;


COUNT()  is used to take a name of a column, and counts the number of non-empty values in that column.
The above is wrong.
do you mean.
COUNT()  is used to take a name of a ROW, and counts the number of non-empty values in that ROW.

COUNT(*) returns the number of rows that fulfill a specified condition (WHERE x or HAVING y) in a table.
COUNT(column_name) returns the number of rows in a table the value in which the particular named column is not Null.  It is equivalent to
SELECT COUNT(*) FROM table 
WHERE condition 
AND column_name != NULL;


Does SUM() take number data-type only ?

SUM() takes the number and decimal data types. It ignores the string (text) if finds.

So if you want to count everything, you will add both conditions?
or is it better to do it separately?
SELECT COUNT(*) FROM table
WHERE condition
AND column_name != NULL AND column_name = NOT NULL;

You cannot cannot compare NULL with (  =  ,  !=  ) operators . For comparing null there are special operator :  IS NULL  and  IS NOT NULL .
More Details : https://www.codecademy.com/paths/web-development/tracks/sql-for-web-development/modules/webdev-sql-intro/lessons/queries/exercises/is-null
"
26,"When doing an INNER JOIN, are columns matched on NULL values?","Get Help,Git",,5,"
Question
In the context of this exercise, when doing an INNER JOIN, are columns matched on NULL values?
Answer
No, when you have NULL values in a column, these are never matched to other NULL values. This is because NULL signifies the absence of any value, and cannot be compared as they will never equal anything. Doing say NULL = NULL results in False.
Let’s take for example the animation given in the exercise, which shows how INNER JOIN works. Let’s say that an additional row was added to each table, with NULL in the C2 column, such that they become
Left table:
C1, C2
A, B
Q, W
X, Y
T, NULL

Right table:
C2, C3
B, C
E, R
Y, Z
NULL, V

If we inner joined these tables the same way, we would end up with the same result, because NULL values are not matched.
C1, C2, C3
A, B, C
X, Y, Z

","
There is no difference between the JOIN and INNER JOIN commands, is there?

Hey, correct. There is no different.

Is it necessary to use ON command whenever we are joining two tables?
And why is the subscription_id column showing twice in the resulsts? Can we do something to make it appear only once, while also joining the two tables ON subscription_id ?

The reason why subscription_id is showing twice is that a SELECT * was done, and as subscription_id column exists in both table, one of the columns is for the first table (orders) and the other column is for the 2nd table (subscriptions).
To prevent from having both columns show up, one would have to specify which columns to show.  For example:   SELECT orders.subscription_id, subscriptions.description FROM orders JOIN ON etc  This will only return two columns.
"
27,How is ALTER different from UPDATE?,"Get Help,Git",,6,"
Question
In the context of this exercise, how is ALTER different from UPDATE?
Answer
Although similar in the sense that both statements will modify a table, these statements are quite different.
The ALTER statement is used to modify columns. With ALTER, you can add columns, remove them, or even modify them.
The UPDATE statement is used to modify rows. However, UPDATE can only update a row, and cannot remove or add rows.
","
Alter can change data inside columns and rows as wel as remove items.
In addition to that it can subtract add or subtract columns which update can not.
UPDATE ONLY CHANGES THE CURRENT INDIVIDUAL RECORDS INSIDE THE TABLES.

Please give example how ALTER can change data inside column AND rows ?

It isn’t so direct with rows but if the data inside a specific column has changed, then the data for a row has changed as well. I hope that makes sense. So it’s more of a overview standpoint.

ALTER statement  adds a new column to the table
UPDATE statement edits an existing row, irrespective if the row contains a value or not

I think a simple way of putting it is:
ALTER modifies the structure of the table (by adding, removing or renaming columns)
UPDATE modifies the information contained in the table
"
28,Where can we access other free datasets?,"Get Help,Git",,2,"
Question
In the context of this lesson, where can we access other free datasets?
Answer
There are many resources available online that provide free datasets, and a few of these resources are as follows.
Kaggle is a resource that provide many different types of datasets, ranging from wine reviews to trending YouTube video statistics.
data. gov is a resource of open data provided by the U.S. government, with many different topics including agriculture, climate, education, finance, and health data.
census. gov is a resource for census data about the United States people and economy, provided by the U.S. census bureau.
There are also many other resources available, which you can find with a quick search online.
","
A couple of other free resources:


https://www.google.com/publicdata/directory
This directory will lead to many datasets.


https://data.fivethirtyeight.com/
Has some fun datasets like 2019-20 NBA Predictions.


"
29,Do SQL clauses always have to be entirely capitalized?,"Get Help,Git",,7,"
Question
When writing SQL queries, do the commands, like SELECT and FROM have to be all capital letters?
Answer
No, SQLite, which Codecademy uses, is case-insensitive when it comes to clauses like SELECT and FROM which can be cased in any way. This is different from other programming languages such as Python where casing is quite important.
Example
/* Both of the following queries will return the same result. */
SELECT * FROM table;

select * from table;

","
Is capitalizing the common practice though?
Why do codecademy exercises have the commands capitalized?
Also, how about data types such as INTEGER, REAL, DATE, etc

For those who liked my question (I assume u guys are interested in the answer)
after looking here and there, including stack-overflow:  it does not matter
capitalization is suggested for better reading but not necessary especially with the IDEs that people work with today, in which the keywords are automatically highlighted in different color
Pretty much, it depends on who you are working with and what standards you guys plan to set;
on your own, feel free to do whatsoever (capitalize it or not) ;o

In my previous job we capitilized just to make it easier to read.

I heard that Oracle DB automatically uppercases all commands, whereas PostgreSQL lowercases all of them. However, I never understood the point of that - if both are actually case-insensitive…?

I also thinks it help to make the command more readable in my opinion 

It’s looks more easily readable and decent if capitalised though its cosmetic.
"
30,Do SQL clauses always have to be entirely capitalized?,"Get Help,Git",,7,"
Question
When writing SQL queries, do the commands, like SELECT and FROM have to be all capital letters?
Answer
No, SQLite, which Codecademy uses, is case-insensitive when it comes to clauses like SELECT and FROM which can be cased in any way. This is different from other programming languages such as Python where casing is quite important.
Example
/* Both of the following queries will return the same result. */
SELECT * FROM table;

select * from table;

","
Is capitalizing the common practice though?
Why do codecademy exercises have the commands capitalized?
Also, how about data types such as INTEGER, REAL, DATE, etc

For those who liked my question (I assume u guys are interested in the answer)
after looking here and there, including stack-overflow:  it does not matter
capitalization is suggested for better reading but not necessary especially with the IDEs that people work with today, in which the keywords are automatically highlighted in different color
Pretty much, it depends on who you are working with and what standards you guys plan to set;
on your own, feel free to do whatsoever (capitalize it or not) ;o

In my previous job we capitilized just to make it easier to read.

I heard that Oracle DB automatically uppercases all commands, whereas PostgreSQL lowercases all of them. However, I never understood the point of that - if both are actually case-insensitive…?

I also thinks it help to make the command more readable in my opinion 

It’s looks more easily readable and decent if capitalised though its cosmetic.
"
31,What happens if we try to create a table with an existing name?,"Get Help,Git",,8,"
Question
In the context of this exercise, what happens if we try to create a table with an existing name?
Answer
When you try to create a table with an already existing table name, you will receive an error message, and no table will be modified or created.
Because SQLite (used in the exercises) is case insensitive for most syntax including names, this will apply to any casing of the table name. For instance, given the celebs table from this exercise, if you tried to run the following, it will throw an error, because the table name already exists.
CREATE TABLE Celebs (
   id INTEGER, 
   name TEXT, 
   age INTEGER
);

","
Hello,
Thank you for your answer.
In the second paragraph, I was wondering if the sentence should be ‘Because SQLite is not case sensitive’ instead of ‘is case sensitive’. If SQLite is case sensitive, it would create a new table for different cases for the same word.
Thank you.
Regards,

Hello, i think you misread it.
It sais case insensitive no case sensitive.
So you are right, SQLite is not case sensitive.

I neve think about it of insensitive

Yes it is not case sensitive.

You could get an error showing you that the table already exists!

thank you very very very much…

You stated that SQLite is case insensitive. Are other relational databases like Mysql, Oracle DB are also case  sensitive?
"
32,Can we apply the LIKE operator to values other than TEXT?,"Get Help,Git",,6,"
Question
Can we apply the LIKE operator to values other than TEXT?
Answer
Yes, you can apply the LIKE operator to numerical values as well.
Whenever you use LIKE however, you must always wrap the pattern within a pair of quotations, whether for matching a number or a string.
Example
/* 
This will select movies where the id number
starts with 2 and is followed by any two numbers.
*/
SELECT * 
FROM movies
WHERE id LIKE '2__';

","
entonces WHERE puntuación LIKE '2__ ';
seria parecido a hacer WHERE puntuación >=200 AND puntuación < 300;
???

Si, creo que tienes razon!

How do we match values that have the _ (or %) literals in them?





How do we search for patterns containing the actual characters ""%"" or ""_""? SQL FAQ


    Question
When using SQL LIKE operators, how do we search for patterns containing the actual characters “%” or “_”? 
Answer
When searching for a pattern containing the specific characters % or _, we can utilize the escape character \, similarly to its use in Python. 
If we want to search for these specific characters, we can simply add the escape character immediately before them. 
Example
/* 
In this pattern, we use an escape character before '%'.
This will only match ""%"" and not be used like th…
  


Buenos Días @betajumper03322!
Sí, es correcto!
Gracías por tu pregunta muy interesante.
"
33,Where can we access other free datasets?,"Get Help,Git",,2,"
Question
In the context of this lesson, where can we access other free datasets?
Answer
There are many resources available online that provide free datasets, and a few of these resources are as follows.
Kaggle is a resource that provide many different types of datasets, ranging from wine reviews to trending YouTube video statistics.
data. gov is a resource of open data provided by the U.S. government, with many different topics including agriculture, climate, education, finance, and health data.
census. gov is a resource for census data about the United States people and economy, provided by the U.S. census bureau.
There are also many other resources available, which you can find with a quick search online.
","
A couple of other free resources:


https://www.google.com/publicdata/directory
This directory will lead to many datasets.


https://data.fivethirtyeight.com/
Has some fun datasets like 2019-20 NBA Predictions.


"
34,Can we match for a specific casing of text?,"Get Help,Git",,1,"
Question
In the context of this code challenge, can we match for a specific casing of text?
Answer
Yes, this is possible.
By default, text matching using LIKE is case-insensitive, however we can utilize a special type of statement in SQLite, known as a PRAGMA statement. PRAGMA statements are a specific type of statement in SQLite, and can be used to modify certain behaviors of the available functionality.
The following is an example of how it can be applied.
/* Run this statement to allow case-sensitive
matching on the LIKE operator */
PRAGMA case_sensitive_like = true;

/* This statement will now only match text that 
contains the exact casing of ""Code"" */
SELECT *
FROM table
WHERE column LIKE '%Code%';

",
35,What if we only want to delete a specific number of rows?,"Get Help,Git",,22,"
Question
In the context of this exercise, what if we only want to delete a specific number of rows?
Answer
To delete only a specific number of rows, you can utilize the LIMIT statement. The value provided for LIMIT will be how many rows to affect.
For example, this statement will only delete the first 5 rows that match the condition,
DELETE FROM table
WHERE condition
LIMIT 5;

","
What if we only want to delete specific rows from a particular column. Without affecting the rest?

what do you mean with: from a particular column? If some columns have a specific value?

Taking this example, the LIMIT 5 command needs to supersede the WHERE condition, otherwise it will not work.
Hence, it should be:
DELETE FROM table
LIMIT 5;
WHERE condition;

This isn’t right. You can’t have 2 separate clauses like that. The WHERE clause is orphaned in this example.

Yeah! it works 

SELECT arrival_airport, aircraft_code, flight_id FROM flights ORDER BY actual_departure DESC LIMIT 3;




 jephos249:

this statement will only delete the first 5 rows that match the condition


The phrasing made me curious, is there also a way to select the last rows for example?

ids are incremental, so we could order by (from high to low) you could delete the last few rows

You can add condition like this. Deleting rows 1 and 3 with twitter_handle is null.
DELETE FROM celebs
WHERE id in (1,3) and twitter_handle IS NULL;


What will happen if the table does not contain ‘ID’ column, giving that I want to delete 1st row and 3rd row in records matching the given condition?

no identifier used? The better solution would be to actually use identifiers.
Most databases retrieve the rows in the order they where inserted in (unless order by is used), so deleting the first row is simple, just use LIMIT 1, for the third row, i suppose you need LIMIT combined with OFFSET.
but honestly, its not the correct solution, its exactly the reason we use identifiers (some unique column).

Doesn’t work for me in SQL 

ERROR 21286×557 31.3 KB


what tool are you using here? And what is the error message? I can’t read the language in the screenshot

Error of syntaxis, ( operator is missing ) in request “…”
You can try to do it by your own. Thank you for the help!
Many thanks ,
Dan




 danvaksman2044011206:

You can try to do it by your own.


you are using a windows specific tool, so that would be a lot of trouble.
What if you put the query on a single line? I have no experience with the tool you use

Yeah…It works all right, Thanks   …I think there are more ways to delete rows as in string slicing…like the start position and end position … Aren’t they ?

Why do we have to use IS, why cant we use the equal sign (=)
for example
delete from celebs
where twitter_handle = null;

because null is a special value. null represents the absence of the value. I am sure there are more extensive articles you can find on the internet if you want a more in-depth understanding

I had the same question. I think this has to do with the type of value that NULL represents. NULL is a str isn’t it? Then is more accurate to search for IS than =. But in the bottom of this question lies the idea of the SQL founder I think.

null is not a string. Null is literally there what is says, there is nothing/no value. Which is why we can’t use = (which check for equality).
"
36,Does COUNT() include duplicate values of a column?,"Get Help,Git",,10,"
Question
When using the SQL COUNT() function for a column, does it include duplicate values?
Answer
Yes, when using the COUNT() function on a column in SQL, it will include duplicate values by default. It essentially counts all rows for which there is a value in the column.
If you wanted to count only the unique values in a column, then you can utilize the DISTINCT clause within the COUNT() function.
Example
/* This will return 22, the number of distinct category values. */
SELECT COUNT(DISTINCT category)
FROM fake_apps;

","
if the cell have an undifined  value it won t be counted ?

That is correct. The COUNT function will only count non-NULL values when a specific column is selected. To count all rows you need to used the wildcard ‘*’ value in the COUNT.

I have been struggling really hard to understand the below querry
SELECT account_id, aacount_name, orders, COUNT(*)
FROM ..........
JOIN.............
ON .............
GROUP BY account_id, account_name, orders
HAVING.........;

My major challenge is the application of COUNT() on the columns proceeding it. Please what exactly does the COUNT() aggregate function count in this case?

It should return the total number of rows for that combination of account_id, account_name and orders.
For example, if we had the following data:
Account_Id  Account_Name Orders 
----------  ------------ ------
5510        Jill         12
5510        Jill         12
6610        Joseph       13
6610        Joseph       50
6610        Joseph       20
2220        Ally          5
2220        Ally          6

We should get:
Account_Id  Account_Name Orders Count(*)
----------  ------------ ------ --------
5510        Jill         12     2
6610        Joseph       13     1
6610        Joseph       50     2
2220        Ally          5     1 
2220        Ally          6     1



Instead of selecting a specific column and using * for the entire column the statement doesn’t return any result :
/* This will not return anything */
 SELECT COUNT(DISTINCT *)
 FROM fake_apps;


Using DISTINCT * means the whole row needs to be unique.

Yes I agree, But my question is why doesn’t it return any value ? If you can elaborate more it will be helpful.

Anyways Thank You @coffeencake
I found the answer on StackOverflow.
Anyone intrested can look into : https://stackoverflow.com/questions/5010470/why-doesnt-countdistinct-work#

Thanks for sharing a more detailed explanation.
"
37,Can we write conditions using both AND and OR?,"Get Help,Git",,17,"
Question
In a SQL query, can we write conditions that utilize both AND and OR?
Answer
Yes, queries can combine multiple conditions using AND and OR without a real limit to how many conditions you can combine. However, the more conditions you combine, the more specific the results will be and the more complex it can get.
Example
/* 
This will select movies with id values 
from 10 to 20 inclusive, OR with id 
values from 50 to 60 inclusive.
*/
SELECT *
FROM movies
WHERE
(id > 10 AND id < 20)
OR
(id > 50 AND id < 60);

","
Why are the conditions in ()?

‘()’ used to show the order of operation. It tells sql to execute the items in the brackets first, then out.
Hope that helps.

If we use more and more logical operators, how much slowly will it take to return result?

The logical operators can actually shorten the processing time.
If you are querying a table with thousands of rows, it can take a few seconds to retrieve all the data. Adding the logical operators diminishes the number of rows that will populate in the result, shortening the time to execute the function.

I think the code might be little incorrect. As we say that the numbers 10,20 and 50,60 should be inclusive, shouldnt the code say:
SELECT * FROM movies WHERE (id>=10 AND id<=20) OR (id>=50 AND id<=60);

If you are a human more restrictions would make you think longer.

Would the code still work though under your format?

That’s only correct if you want the numbers to include 10, 20, 50, and 60. In the example, they’re only wanting to gather the numbers between, but excluding, 10 and 20, or 50 and 60.

SELECT *
FROM movies
WHERE genre AND imdb_rating IS NOT NULL
   AND year > 2014
   OR genre = 'action';

I’m trying to see only rows without NULL in genre/imdb_rating,
With year higher than 2014,
Or action genre.
Why am I still getting imdb_rating rows with NULL as a value?

image1264×639 75.1 KB


Because of the line 'OR genre = ‘action’.  It will retrieve all the values that have action genre. You can check by using this:
SELECT *
FROM movies
WHERE genre =‘action’;
This will create the same table when you run:
SELECT*
FROM movies
WHERE genre AND imdb_rating IS NOT NULL
AND year > 2014
OR genre = ‘action’;

Appreciate your help 

yes you can . also dont forget  first and condition will be read and after that only or will be read no matter where you place and in your condition

That is incorrect.  When choice is restricted, you eliminate what is not being considered and simplify the thought process.  The true restriction then, is the human fear of making the wrong choice.

Is there an order of precedence between AND and OR conditions like in python?

Yes, there is an order of precedence.  AND would be higher than OR
Much more detail can be found https://sqlite.org/lang_expr.html

Thankyou @coffeencake
"
38,Does every SQL statement follow this structure?,"Get Help,Git",,4,"
Question
In the context of this exercise, does every SQL statement follow this structure?
Answer
In general, SQL statements will usually follow a similar structure as the given example SQL statement, but depending on what you are trying to do, they can also look very different.
The following are some examples of different kinds of SQL statements you might use, which will be covered throughout this lesson.
This statement selects all rows from a table.
SELECT * FROM table;

This statement will create a new table.
CREATE TABLE students (
  column_1 data_type,
  column_2 data_type
);

This statement will update a row in a table.
UPDATE table
SET column_1 = new_value
WHERE id = 3;

","
Is there any reliable source for the assertion "" Statements always end in a semicolon  ;."" ? I’ve been programming in (My)SQL for about 20 years now and NEVER put “;” unless I have to, in order to separate multiple commands.

W3schools.org’s tutorial on SQL says:

Semicolon after SQL Statements?
Some database systems require a semicolon at the end of each SQL statement.
Semicolon is the standard way to separate each SQL statement in database systems that allow more than one SQL statement to be executed in the same call to the server.


Your answer does not really answer the question  (but indirectly confirms my doubt and “bug report” of an incorrect statement). Indeed,
“to separate” is NOT AT ALL the same as “to end”.
Yes: “;” is standard to SEPARATE commands, but it is NOT necessary to “always end statements” as is claimed incorrectly.
I am 100% affirmative that it is not needed to end a statement in any version of MySQL, and I think it is the same in most if not all other SQL.
You just REPEAT the doubtful statement: “Some database systems require…”. Repeating something does not make it true.
I asked: “Is there any reliable reference for this?”
Can you name the “database systems” (sic) that do require it?
"
39,What order are rows selected from a table?,"Get Help,Git",,1,"
Question
In the context of this exercise, what order are rows selected from a table?
Answer
In most SQL databases, by default, the rows will be selected in the order that they appear in the table, from top to bottom. For instance, if you have a statement like
SELECT * FROM table this will select all rows from the table from the first row that appears down to the bottom row.
Later on in the other SQL lessons, you will also learn about clauses such as ORDER BY, which allow you to set a certain order for how the rows will be returned in the result set.
",
40,Are all databases relational?,"Get Help,Git",,4,"
Question
In the context of this exercise, are all databases relational?
Answer
No, not all databases are relational databases. Databases can be non-relational, and this type of database is referred to as NoSQL databases.
NoSQL databases are structured differently from the relational database structure. With relational, we structure tables by the type of relations, but NoSQL keeps all the information in one place, in the form of key-values or documents.
For example, consider a database of people and their subscriptions to a newsletter.
Using a relational database structure, we might separate the information for each person, having their id, name, and email, in one table named customers, and then another table for the subscriptions, having the newsletter name, and other information associated with the subscriptions.
With a NoSQL database, instead of separating information in this way, we might just have a single document with the person’s information, as well as the subscription information, all in one document. As you might tell, this type of structuring might have some benefits and some cons compared to relational databases.
","
Is a relational database defined by what data you are comparing for a given query and not actually the structure of the database itself?
For example, by this definition, would the customers table on its own be considered a NoSQL database combining name, address, and id if you wanted to specifically compare name and address?
Then a relational SQL database of the same information would require 3 single-column tables for “customer-name,” “customer-id,” and “customer-address”?

In this context, the customers table on its own is meaningless. This table will be helpful if it is used in relation to another activities by the customers. Hence, creating a relation between customers and activities. On the other hand, NoSQL will store all this data together in one place so you end up with one table instead of multiple tables with relations.

I feel like this kind of all in one pile document by specific keys may derive in faster performance for some applications due to the fact it wouldnt have to join so many tables between them and make connections like in a relational database. Also I believe there are different types of non relational databases like Hadoop or NoSQL types, which can be with no structure or semi structured. I just would like to understand in  a more tangible way which applications could these be.
"
41,Are we limited to only one aggregate function per query?,"Get Help,Git",,2,"
Question
In SQL, are we limited to only one aggregate function per query?
Answer
No, you can list more than one aggregate function after a SELECT, and there is no strict limit to this. For example,
SELECT COUNT(*), SUM(col) FROM table;
However, as you apply more aggregate functions within a query, it can start to become more complex, and the results might not be easy to read with all the information. So, it is possible to do this, but it may not be the best choice to combine so many aggregate functions in a single query.
Typically, for most of the exercises throughout the course, we utilize one aggregate function per query, and sometimes might use more than one.
","
Was wondering that. Thankyou for clearing my Doubt @jephos249
"
42,Do the tables have to have the same number of columns when combining them?,"Get Help,Git",,8,"
Question
In the context of this exercise, do tables have to have the same number of columns when combining them?
Answer
Yes, when combining two tables using a UNION, they must have the same number of columns. The columns do not need to have the same name, because they are combined based on column positions rather than the column names. However, they should have similar data types.
","
I just managed to get in to this stage of the course.
Regarding the answer to this question as tables must have the same amount of columns, I tired WITH statement to create temporary tables with the columns I want to select. Then I just used UNION to merge them both.
Basically, if tables do not have the same amount of columns and you want to use UNION you can first create temporary tables with WITH statement to select the amount of columns you want. I hope this helps!.
WITH songs_test AS (
SELECT id, title, year
FROM songs
),
bonus_songs_test AS (
SELECT id, title, year
FROM bonus_songs
)
SELECT *
FROM songs_test
UNION
SELECT *
FROM bonus_songs_test
LIMIT 10;

What do I do if I want to limit table1 (songs table in this case) and display all of the rows of table2 (bonus_songs table in this case)?
I am asking this because when I use LIMIT after doing the UNION, I do not know if the  bonus_songs rows have been added. I don’t want to display the entire table and scroll all the way down to see if the UNION has taken place.

That’s really Nice. Thankyou @khanster321 for sharing such Great Information.

@khanster321 This is Brilliant !

@coffeencake Can you please give some insights to this ?

@theskygupta @nayanreddy3217184308
Good questions.  If you want to limit table1 and display all the rows of table2, you can do this:
WITH new_table AS (
  select * from table1
  limit 10
)
select * from table2
union
select * from new_table;

It is always good practice to validate your query somehow.  In the example exercise, I checked the total records in the table first and then tested my union expecting 14 rows but only received 10 rows.
--
-- Check the total number of records in the table first.
--
select count(*) from bonus_songs        -- 4 rows

select count(*) from songs              -- 2229 rows

-- This query will only return a max of 10 rows for the two tables combined
select * from bonus_songs
union
select * from songs
limit 10;

-- Create a temporary table with the subset of date from songs.
WITH new_songs AS (
  select * from songs
  limit 10
)

I tried to breakdown my thought process - I hope that helps.

Thank You @coffeencake 
"
43,What does a CROSS JOIN do?,"Get Help,Git",,3,"
Question
In the context of this exercise, what does a CROSS JOIN do?
Answer
The CROSS JOIN function returns a Cartesian product of all the rows from the first table, with all rows of the second table. As a result, if there are M rows in the first table, and N rows in the second table, then there will be a total of M x N rows in the result. Each row from the first table will be combined with each row from the second table.
For example, if the tables were as follows,
table 1
x1
x2
x3

table 2
y1
y2
y3

Then the result of applying CROSS JOIN to these would be
x1 y1
x1 y2
x1 y3
x2 y1
x2 y2
x2 y3
x3 y1
x3 y2
x3 y3

","
In code challenge 6 of working with multiple tables, I am unable to understand why CROSS JOIN is used to cross join premium_users and months table. Can someone please explain?
Thanks

You might have figured it out after moving on to the next challenge but I figure I would mention this just in case.
The cross join creates a duplicate record of the specific user_id, purchase_date, cancel_date for each month.  So if there are 4 months in the ‘months’ table then you would have 4 records with the same user_id and purchase/cancel dates while having a unique ‘month’ value.
In the next challenge they use this data to then compare those months to the purchase/cancel dates to determine if the user was ‘active’ during each month.
"
44,FAQ: Why Data Science? - Exploring Data with SQL,"Get Help,Git",,12,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Exploring Data with SQL” exercise from the lesson “Why Data Science?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Data Science
FAQs on the exercise Exploring Data with SQL


What do we use to work with databases?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
In the very first lesson:
When I copy/paste the code and run the code I get :
     ### Database Schema

                page_visits                                     600 rows

index                                           INTEGER
first_name                                 TEXT
last_name                                 TEXT
gender                                       TEXT
age                                             REAL
visit_date                                  TEXT
website_goal                           TEXT
Error: near line 1: no such table: browse
Ive sent a bug report and I am not getting any responses

Hi whimjim,
I’m facing the same problem.  Hopefully something will be done about it, soon!

l am facing the same problem,it said that ther is no table named browse

I’m having the same problem… how can this still be an issue at the beginning of a topic???

I take it back… it doesn’t like IE browser, works fine in Chrome.

Doesn’t work on Chrome or IE for me.

To all people trying the first exercise, the table has been renamed to ‘page_visits’ so the code you paste should actually be:
SELECT *
FROM page_visits
LIMIT 10;

the problem I have is I cannot even paste in the column.  Is not an active field and I can’t move pass that screen.

Hello Everybody, I just joined to codecademy and stock at the first lecture, just cannot write anything to the screen    I’m just wandering how may I solve this issue, please help

Same problem here…
The middle plane is not working for me (chrome), seems like its not connected to code editor.
No Solutions???

I’m having the same problem. I can’t copy and paste the code into the middle pane. Did you figure it out?
"
45,Is there a limit to the number of columns a table can have?,"Get Help,Git",,1,"
Question
Is there a limit to the number of columns a table can have?
Answer
Yes, there is a limit to the number of columns a table can have.
In SQLite in particular, the upper bound for this number of columns is stored in a parameter called SQLITE_MAX_COLUMN, and by default, it is set to 2000 columns.
This value can be changed during compile time and can be set up to a maximum value of 32767. However, realistically, your tables will probably never need these many columns, but, it is available as an option if ever needed.
",
46,"Does making a ""mini"" dataset actually create a new table?","Get Help,Git",,2,"
Question
In this exercise, we can make a “mini” dataset like so,
SELECT '2017-01-01' AS 'month'
UNION
SELECT '2017-02-01' AS 'month'

Does this actually create a new table in the database?
Answer
No, this method of making a “mini” dataset will not actually create a new table. Instead, it’s a way to easily create a temporary table, that will disappear after the program runs, without having to actually create one.
In order to create a table, you would need to use the CREATE TABLE statement.
","
Is there a way to use UNION in WITH clauses to create a data super-set comprised of multiple queries?
Edit:
Managed to answer my own question – this works:
WITH some_dates AS
(
SELECT ‘2017-01-01’ as month
UNION
SELECT ‘2017-02-01’ as month
UNION
SELECT ‘2017-03-01’ as month
)
select * from some_dates;
"
47,Does the ROUND() function round up?,"Get Help,Git",,24,"
Question
Does the ROUND() function round up?
Answer
When using the ROUND() function, you can provide a second argument, which is the precision, or number of decimal places to round the number on.
In SQLite, rounding is done by rounding up if the next decimal value is 5, and rounds down if the value is less than 5.
For example,
/* This will result in 4.0 */
SELECT ROUND(3.5, 0);

/* This will result in 6.4 */
SELECT ROUND(6.42, 1);

/* This will result in 6.0 */
SELECT ROUND(6.42, 0);

","
porqué esta sintaxis es correcta? ROUND(avg(downloads)), no necesitaría el segundo valor correspondiente a redondeo?

Si el segundo argumento de la función ROUND es omitido, se asume como 0, es decir, ROUND(AVG(downloads)) es equivalente a ROUND(AVG(downloads), 0)

why entering the following results in 2.03?
select avg (round (price, 0))
from fake_apps
;

You are using round function for values from the rows and then using AVG function. If you want to round the result of AVG function then use it more like ROUND(AVG()).


SELECT ROUND(price, 2) FROM fake_apps
WHERE price = (SELECT AVG(price) FROM fake_apps);

Does this is right? Why it no results return?

You need to put average price in the ROUND brackets, instead of regular price, like you did in the first line.
If you do only the first line of your code you will get a column with rows of rounded prices of all the apps on the list.
When you add the second line, it will return you a result only if the price will have the average value, what will never happen.
Can you see the mistake ?

You’re right. Thank you bro.

Why doesn’t it work even if I modify it to SELECT ROUND(SELECT AVG(price) FROM fake_apps,2) as round_value;?

I’m only as far as you in this course, but I believe you only use SELECT once in a query. Removing the second SELECT makes your query shorter, and also makes it correct! No need for the extra SELECT.
SELECT is to pick out rows from a table, so in my understanding, we only pick out rows once per command, although we can stack criteria and functions to affect that selection.

I am interested to just averaging the apps which prices are not zero.
Tried using
SELECT AVG (SELECT price FROM fake_apps WHERE price != 0;)
FROM fake_apps;
But no results. Can anybody help?

Why would you use a nested/sub query? In a generic expression, simply using WHERE:
SELECT fields FROM table WHERE condition

only results in the rows which meet the where constrain.

How can we round to the nearest ten or hundred ?
(For exemple “downloads” column).

then second argument of the round() function specifies the number of decimals.

Ok, I see, is there any way to round to the nearest hundred (for ex.)?

Can you give en example? Do you mean like so:
345.555566 => 345.556

or:
345.555566 => 300

?

Yes right like in the second exemple :  345.555566 => 300 !

You would need to do something more complicated like mod:
https://stackoverflow.com/questions/8839868/mysql-query-to-get-floor-or-round-to-next-lowest-100-unit-hundred-block-n
seems what you want to do, is not a common use case. Or at least not at database level.

Ok, I was just curious because when we work with large numbers, it might be useful.
And  on the same logic, I taught that if you write   round(number; negative integer)    would round up to ten, hundred etc. But it didn’t work so easily.
Thank you for your answers 

no, round() is really designed for working with decimal numbers.
"
48,Is there another way that determining play counts of a song might have been implemented?,"Get Help,Git",,8,"
Question
In the context of this exercise, is there another way that determining the play counts for a song might have been implemented?
Answer
Yes, schemas can always be different depending on who implemented them, so there are always different ways that you can implement things. For determining the number of times a song has been played, the method used in this exercise works as needed, but we could do something different.
One other way to do this would be to store the number of plays in the songs table, where for each song, we have a value keeping track of how many times it has been played.
To do this, assume that this new column called play_count stores an integer value, that starts from 0 and increments by 1 each time the song has been played. To implement the increment, we could do something like the following, say if we wanted to update the play count for a song with id 15.
UPDATE songs
SET play_count = play_count + 1
WHERE id = 15;

","
If you wanted to update the play count in this manner for every song could this be accomplished using a GROUP BY statement and eliminating the id=15?

What to do if we need to select all columns except 1 or 2 ?
For example if we have say 10 columns and we want 8 columns in our query.
DO we have to write
Select column 1, column 2… column 8 from table
OR
is there any other shortcut?




 prateekjain015133619:

is there any other shortcut?


Not really. If the table has many columns and you know that to make some sort of analysis you only need a selection of those columns then you could:

Create a copy of the table;


Drop these one or two columns that you don’t need.



This way you will have a temporary table with all the data that you need, and you will still get an original table intact.

Another way is to create a view consisting of all the columns that interest you. This way you will have to write Select column 1, column 2… column 8 from table only one time and then you will be able to perform queries on the view.

Is using the “WITH” clause, and working with it, the same as working with subqueries?

Is there a reason why the challenge 9 code suggests an inner join instead of a LEFT JOIN?
From the sample:
WITH play_count AS (
   SELECT song_id,
      COUNT(*) AS 'times_played'
   FROM plays
   GROUP BY song_id)
SELECT songs.title,
  songs.artist,
  play_count.times_played
FROM play_count
JOIN songs
  ON play_count.song_id = songs.id;

Theoretically, couldn’t there be songs that have never been played? So we would want to do a left join to see those songs which have NULL values from the play_count table?
e.g.
WITH play_count AS (SELECT song_id,
   COUNT(*) AS 'times_played'
FROM plays
GROUP BY song_id)

SELECT songs.title, songs.artist, play_count.times_played
from songs
left join play_count
on songs.id = play_count.song_id;

or am i missing something? Thanks!




 jephos249:

play_coun


Thanks for showcasing alternate way.
I wonder, how do we initialize the play_count variable to 0 in SQL. I’m curious to learn what you have done and seems to be useful operation (something like ‘for’ loop).
Thanks.

On the given database, there is no song that has never been played. So the INNER JOIN or LEFT JOIN would produce the same results here.
On the other hand this is a matter of your expected result. I could imagine that you would like to put your advertisement on the most popular songs and ignore all those who have never been played before.
Best regards
"
49,"When using a CASE statement, do the values for THEN have to be a single type?","Get Help,Git",,10,"
Question
For a CASE statement, do all values provided by THEN have to match a single data type?
Answer
No, for CASE statements, the THEN values do not have to return only a single type of value. In fact, you can have each THEN in a single CASE statement return different value types such as TEXT, REAL, and INTEGER.
Example
SELECT 
  CASE
    WHEN condition1 THEN ""text""
    WHEN condition2 THEN 100
    WHEN condition3 THEN 3.14
  END AS 'example'
FROM table;

","
Hello!
I am getting a little bit confused. Here we have a CASE statement or a CASE expression?
I think it is an expression because it evaluates to a value and it is used in a query.
https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html

Hi I have a question. Does the CASE statement ALWAYS result in creating a new column ( in the example, ‘Mood)’? Or can be used to modify the values of an existing column?
Does someone know? - Thank you

Hi ephos249
are you able to help with my question above? Thank you

I have another question regarding the exercise 11 on for the project ‘New York Resturants’
Use a  CASE  statement to change the rating system to:


review > 4.5  is Extraordinary

review > 4  is Excellent

review > 3  is Good

review > 2  is Fair
Everything else is Poor

How does SQL order operate? as in, if the review is 4.1 it will be higher 2 and 3 … so it is true for Fair, Good and Excellent… instead I would have written the code
when review > 2 and review <3  then ‘Fair’
when review > 3 and review <4 then ‘Good’
when review > 4 and review <4.5 then ‘Excellent’
when review > 4.5 then ‘Extraordinary’
else ‘Poor’
can someone tell me how sql execute the code?
Thank you for your help
Semhar

Hi,
I’m just a beginner but I think I know the answer to this.
SQL executes the command by the order it is written by.
In your example, it first checks all movies that meet (review > 4.5), for the movies the don’t, it goes and checks the other command.
If you try to list your commands in reverse (starting with > 2), you will see that all movies will be Fair, because it checked with all of them. (Except the unknown ratings)

thank you that clears out the doubt I had

Hello Semhar.
I don’t know the exact answer yo your question, but I made a test that might interest you. I have the following code:
select name,
  case
    when genre = 'romance'
    or genre = 'comedy' then 'Chill'
  else genre
  end as 'Mood'
from movies;

Notice the else. It just returns the value each row has on the column genre. So I belive you can manipulate the data you want and just return the data that’s alredy ok. You still need to name the column again though.
Hope it helps

Hi,
The case statement doesnt create a new column in your database it just output a column formated as you want by your case statement (formating an output for a column or for multiple columns).

Not only  THEN provides different values, but WHEN condition allows using different columns.
I don’t know what for it could be used but it works.
For example, I’ve tried this code:
SELECT name,
  CASE
    WHEN genre = 'romance' THEN 'Chill'
    WHEN year < 1980 THEN 'Old'
    WHEN imdb_rating > 8 THEN 'Fantastic!'
    ELSE ""I don't care""
  END AS 'Case'
FROM movies;

"
50,"When creating an alias, what's the difference between 'column AS aliasName' and 'column aliasName'?","Get Help,Git",,3,"
Question
When creating an alias, what’s the difference between ‘column AS aliasName’ and ‘column aliasName’?
Answer
There is no difference between those two statements, having the AS keyword is totally optional. Using AS is just a more explicit way of mentioning an alias.
","
It worked without the single quotation marks -  as duration instead of as ‘duration’ - will this work in the real world? Only one way to find uh

Yes, it will. The problem is if you use symbols other than letters and numbers (e.g. space) than you need the quotation marks.
"
51,Should we always abbreviate column values like for the category column?,"Get Help,Git",,4,"
Question
In this code challenge, the category column values are abbreviated as ‘b’ for ‘Business’ and ‘t’ for ‘Technology’. Should we always abbreviate column values like the category column?
Answer
This can be entirely dependent on how you choose to implement the table, and there is no right or wrong answer.
To decide whether to use abbreviations for values, you might consider a few of the following factors.
One important factor is understandability of the information. What if it was not apparent immediately that 'b' stood for ‘Business’, and 't' for 'Technology? To account for this, you may need to store the abbreviation meanings somewhere easily accessible, like another table in the database with abbreviations mapped to their full meanings. Also, what if there were multiple values that started with b, like Books? You might need to choose some way to represent any possible values as abbreviations.
Another factor you might consider is memory. Using abbreviations can have the benefit of saving memory used. For instance, the column data type can be set to some smaller data type like CHAR, which can take less memory than the TEXT data type. When you have millions, or even billions, of entries, these values start to really add up.
Everything has a tradeoff, so whichever method you choose can have some pros and cons that might be more appropriate to your needs.
","
 SELECT *
 FROM news
 WHERE category = 'b'
 ORDER BY timestamp DESC
 LIMIT 20;


Why didn’t we add category = ‘b’ AND ‘t’ on the third line?

I have the same question. Hope someone can answer it.

Because the question is asking for “Business” articles only.
"
52,What are some other useful things that SQL lets us do?,"Get Help,Git",,7,"
Question
In the context of this exercise, what are some other useful things that SQL lets us do?
Answer
SQL provides us with a lot of useful functionality for interacting with databases.
When retrieving data from a database, we can use SQL to select specific rows based on some condition. For example, this will retrieve just the rows that satisfy the condition following the WHERE clause, which is when the value under the col column is greater than 50.
SELECT col FROM table
WHERE col > 50;

SQL also lets us aggregate data, which means to summarize observations for groups of data. For example, SQL provides aggregate functions to get the sum or the average of all values of a column, returning a single value, or summary.
In addition, we can even combine multiple tables using the JOIN clause. We can combine tables by essentially stacking all the rows of one table on top of the other, or we can combine them based on some conditions or on matching values of some columns only.
These are only a few of the many useful features that SQL provides. Feel free to check out some SQL documentation or the Codecademy SQL courses for more useful things that SQL lets us do!
","
With this same logic I tried to select only females in the database but I couldn’t figure out how. I tried:
SELECT gender FROM table
WHERE gender += female;
and
SELECT gender FROM users
WHERE gender += female;
and
SELECT female FROM users;
No luck  How would i go about selecting specific users based on their info?

To select only females, you would write:
SELECT * FROM users
WHERE gender = ‘Female’;
This will first return all (*) columns from the ‘users’ table,
then it will only return rows where the gender column has a value of ‘Female’ (make sure to wrap Female in quotes (’’), as Female is of the string data type

How would i select only users with emails containing ‘facebook.com’ ?

You can use something like
WHERE “email” LIKE ‘%facebook.com’
I am quite new to this, but the ‘%’ is what you want to use in this situation.

How do you do multiple data selection criteria, example I want to do this:
SELECT * FROM users
WHERE membership_id <= ‘2000’;
WHERE gender = ‘Male’;

use AND or OR, depending if you want both or one of the conditions to be met
"
53,What if we set a LIMIT value that is greater than the total number of rows?,"Get Help,Git",,3,"
Question
In SQL, what happens if we set a LIMIT value that is greater than the total number of rows?
Answer
If the number set in the LIMIT clause surpasses the number of rows available to select, then it will just exclude the remaining amount of rows in the result set.
You might think of LIMIT as an upper bound for the number of rows to return, but not as a strict number of rows that must be returned.
Example
/* 
Say the table `name` has only 90 rows. 
Then, since 100 is greater than the number of rows, 
it will just return what rows are there. 
*/

SELECT *
FROM names
LIMIT 100;

","
What happens if there are multiple cells beyond the limit that share the same value?  In the sample exercise for instance, if there were 3 movies with 8.8 rating.  How would it decide which to show?

I’m not 100% certain, but I believe that in your situation without any other sorts or restrictions it would select the first three entries in the table that met your criteria based on the order they were originally entered into the table.
"
54,Does the order we select the columns affect anything?,"Get Help,Git",,6,"
Question
In the context of this exercise, does the order we select the columns affect anything?
Answer
No, the order that columns are selected does not affect anything other than what order the columns are shown in the result set.
So, whether you selected the columns as
SELECT col1, col2
or
SELECT col2, col1,
if the rest of the SQL statement is the same, then the only difference is the column order.
Usually, columns are selected based on a logical and meaningful order. For instance, when selecting user information, the first column is usually some identifier, like user_id, or name, followed by the rest of the information.
","
Just trying to clarify my understanding of FROM and the relationship with JOIN clauses.
SELECT chooses the columns from the table(s?) identified by FROM… But in the context of this exercise, we only list one table in the FROM clause… does that mean that  JOIN, LEFT JOIN, CROSS JOIN, & UNION effectively extend the FROM clause when we are working with multiple tables?
I’m just trying to visualize what’s going one. Thanks.

That’s what I’ve also observed and seems to be pretty much what happens every time it’s used: SELECT queries the combined or resulting tables after a FROM and JOIN clause. To my understanding, it doest not necessarily mean the SELECT function is being extended but that the two tables result in one new table on which the clause applies the query.

Good evening. As I am improving my understanding a question arises regarding joining tables;
what is the difference from selecting data from multiple tables (i.e. select table.column, table2.column) and using that as my query rather than using joins? I understand joins, but not really clear when or how?
Please elaborate or help. Please and thank you.
/v/r
Lazlo P.

SELECT premium_users.user_id,
plans.description
FROM premium_users
JOIN plans
ON plans.id = premium_users.membership_plan_id;
I don’t understand JOIN from the question asked in the problem. Am I selecting all the things from the table to put into the query, and then JOINing them to the next part. If possible, a thorough explanation would be highly appreciated

Essentially yes in this case.  You are identifying the columns you want selected and then specifying the tables the data is located in.  The JOIN connects the plans table which contains the plan description.
SELECT premium_users.user_id             -- User
,             plans.description          -- Plan description
FROM  premium_users                      -- table of premium_users
JOIN     plans                           -- table of plans
ON       plans.id = 
         premium_users.membership_plan_id;  -- use to connect the tables together

I hope that helps.
"
55,What's the difference between GROUP BY and ORDER BY?,"Get Help,Git",,1,"
Question
What’s the difference between GROUP BY and ORDER BY?
Answer
The GROUP BY statement is used when we want to group the results of a query by one or more columns. It’s often used in conjunction with aggregate functions like COUNT, SUM, and AVG.
The ORDER BY statement is used when we want to sort the results of a query in either ascending or descending order.
Let’s take a look at an example to help us solidify our understanding. Suppose we have the following table called people:

Say we wanted to find out how many people have the same age for every age listed in the table. We can use the GROUP BY statement along with the aggregate function COUNT to do this:
SELECT age, COUNT(id) FROM people GROUP BY age;

Here’s what we get when we run that query:

As you can see, we get all of the ages in the table, and we get a count of how many people are that age. If we then wanted to sort this table by oldest to youngest, we would use the ORDER BY statement:
SELECT age, COUNT(id) FROM people GROUP BY age ORDER BY age DESC;

Here’s the final result:

",
56,"Are 0 and """" empty values?","Get Help,Git",,1,"
Question
In the context of this exercise, are 0 and """" empty values?
Answer
No, although logically, we may think that 0 represents some empty number or count, or that """" represents an empty text, which is not wrong, this does not mean they are empty values. In SQL tables, they are still considered to be values.
Instead, empty values in SQL would be represented with NULL, which means the absence of any value.
",
57,How are database tables separated?,"Get Help,Git",,1,"
Question
In the context of this exercise, how are database tables separated?
Answer
Database tables are typically separated based on what information they store and focus on a single idea.
For instance, for the Songify database, the data has been separated into tables based on the information, such as for users, plans and songs. Each table is mostly independent of each other and contains data relevant to itself. The users table stores just information about each user, the songs table stores information for just the songs, and so on.
",
58,"If multiple rows have the minimum or maximum value, which one is returned when using MAX/MIN?","Get Help,Git",,9,"
Question
If multiple rows have the minimum or maximum value, which one is returned when using MAX/MIN?
Answer
Typically, when you have more than one row that contains the minimum or maximum value in a column, the topmost row containing that value will be returned in the result.
For example, if the table contained multiple rows with the minimum price of 0.0, then the result of a query with MIN(price) will choose the topmost row from the table that had this price value.
Example
/* 
This should return the siliconphase app, because
it was the topmost row that had the minimum price 
value of the column. 
*/
SELECT id, name, MIN(price)
FROM fake_apps;

","
How can you make the output show all rows that contain the maximum price, instead of just top one?

You would need to use subqueries to do this. For example:
SELECT name,price FROM fake_apps
WHERE price = (SELECT max(price) FROM fake_apps);

So rather than SELECT-ing rows from the table where the price is exactly some number we specify, we compare price to the result of another query, in this case a MAX query.




 vasundharagautam4935:

SELECT name,price FROM fake_apps WHERE price = (SELECT max(price) FROM fake_apps);


This is so useful, thank you!

with out using max and min
select * from fake_apps order by price desc limit 1;

Why if I use SELECT MIN(price), MAX(price), name FROM fake_apps; It only returns the name of the last function? Is there a rule or something similar in SQL for functions? Thanks

It will appear with two headers, but I just listed each statement one after the next:
SELECT id, name, category, downloads, max(price)
FROM fake_apps;
SELECT id, name, category, downloads, min(price)
FROM fake_apps;
Other than that, I’m not sure how to do it and would rely on someone else to answer this question.

The aggregate functions take multiple values/rows from the database and return a single value.  It would find the row that had the maximum price and return the name for it.  If the functions were flipped around, you would get the name for the min(price) value.  I hope that makes some sense.

The answer you have is very close.  You could use this:
SELECT MIN(price), name 
FROM fake_apps
union
SELECT MAX(price), name 
FROM fake_apps;

"
59,What is a function?,"Get Help,Git",,2,"
Question
In general, what is a function?
Answer
A very general description of a function would be: A set of tasks or procedures that can take in a value, and return another value based on that input.
Functions in programming are similar to ones that you may have seen in math. For example,
f(x, y) = x^2 + y^2
If we use this function with two input values, it would return the sum of the squares of both values.
Similarly, in SQL, aggregate functions can take in a column name of a table, and will return some numerical value based on the column values. For example,
SELECT COUNT(col) FROM table;
This will return a single number, which is the number of rows that have non-empty values in the column col.
Some functions we will learn about later can even take values directly, instead of just column names, like
ROUND(10.4, 0)
and will return a value based on the input. The above would result in 10.0.
","

Thankyou for explaining that 

"
60,What does strftime() do?,"Get Help,Git",,4,"
Question
In the context of this exercise, what does the strftime() function do?
Answer
The strftime() function is used to format date type values, and allows us to do useful things such as extract individual values like the month, year, or day from the date value.
For example, we can obtain these values like so, from some date.
/* Returns the day of month */
strftime(""%d"", date)

/* Returns the month */
strftime(""%m"", date)

/* Returns the year */
strftime(""%Y"", date)

","
SQLite comes with a  strftime()  function - a very powerful function that allows you to return a formatted date.
It takes two arguments:

strftime(format, column)


For  strftime(__, timestamp) :

* `%Y`  returns the year (YYYY)
* `%m`  returns the month (01-12)
* `%d`  returns the day of the month (1-31)
* `%H`  returns 24-hour clock (00-23)
* `%M`  returns the minute (00-59)
* `%S`  returns the seconds (00-59)

if  `timestamp`  format is  `YYYY-MM-DD HH:MM:SS` .

SQLite Documentation
All this information was in How to Hack Hacker News Project 
Codecademy is the Best… 

Hi cloud
could you explain how Codecademy came up with this answer given that nothing in this solution has a table?
SELECT january.user_id
FROM january
LEFT JOIN february
ON january.user_id = february.user_id
WHERE february.user_id IS NULL;
The initial question is: Use a left join to combine  january  and  february  on  user_id  and select  user_id  from  january .
Add the following  WHERE  statement to find which users played songs in January, but not February:
WHERE february.user_id IS NULL

WITH january AS (
  SELECT *
  FROM plays
  WHERE strftime(""%m"", play_date) = '01'
),
february AS (
  SELECT *
  FROM plays
  WHERE strftime(""%m"", play_date) = '02'
)

There were two temporary tables created called january and february.
"
61,Does the order of conditions matter if we have more than one in a query?,"Get Help,Git",,3,"
Question
Does the order of conditions matter if we have more than one in a SQL query?
Answer
No, the order of conditions within a query should not matter, and will not affect the result set.
If you use the same conditions following the WHERE clause and combined using AND in any order, then the query will always return the intersection of all the conditions.
For example, the following queries will return the same results,
SELECT *
FROM table
WHERE condition_1
AND condition_2;

SELECT *
FROM table
WHERE condition_2
AND condition_1;

","
What about performance?

Yes, the order of conditions in a where clause can impact the performance if you are working with very large tables.  There are numerous factors that come into play.  Some basic factors would be the number of rows, the indexes and the number of tables.
"
62,FAQ: Aggregate Functions - Having,"Get Help,Git",,15,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Having” exercise from the lesson “Aggregate Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Having


Can a WHERE clause be applied with a HAVING statement in the same query?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi,
How come we use * with clause COUNT to count number of apps at each price point. I thought we need to use COUNT(id ) or COUNT(name)? Don’t we use * to include everything? Thank you

I had a similar questions. I am not understanding why HAVING COUNT(*) > 10… Infact I used HAVING COUNT(price) > 10 and the task was checked off as if done correctly. It was not until I looked at the hint that I realized I had done the query ‘wrong’ (even though the task was ‘completed’ when I used HAVING COUNT(price) > 10)

Same here. Would still love an answer if anyone has it?
Thanks.

The difference between the COUNT (*) function and COUNT (column name | expression) is that the second one (like the other aggregate functions) does not take into account NULL values ​​in the calculation.




 michaelnizovskiygmai:

How come we use * with clause COUNT to count number of apps at each price point. I thought we need to use COUNT(id ) or COUNT(name)? Don’t we use * to include everything? Thank you


I had this same question, after coming here and not finding an answer I played around with the code a bit and it helped me understand more.
Anyone else having this same issue I’d recommend running the code with just
SELECT price, ROUND(AVG(downloads)), COUNT (*)
FROM fake_apps;

and seeing what the “count” function is doing.
So when you run
SELECT price, 
   ROUND(AVG(downloads)),
   COUNT(*)
FROM fake_apps
GROUP BY price
HAVING COUNT(*) > 10;

Basically you’re saying, select these rows and count them, then group them by price, for the ones that have more than 10 rows in their group.
Sorry I can’t put it more succinctly lol but that’s what helped me!

Why can’t we use where clause instead of having? in the example given, we can clearly get the condition by usnig where count(*) > 10;




 wiki-bot:

Aggregate


Having is specifically for aggregate functions. Where, WHERE is for data points in just a regular old query

Why can’t I do column number in HAVING? Is it only in GROUP BY and ORDER BY?
SELECT price,
ROUND(AVG(downloads)),
COUNT(*)
FROM fake_apps
Then I do
HAVING 3 > 3?

It’s answered here: What's the difference between COUNT(1), COUNT(*), and COUNT(column_name)?

Would also like to know…

Hi, what is average downloads in this case? We have exact number of downloads for every specific price value and instance. Average of this number is this number. This doesn’t seem to make sense.
Thank you
 Select price, 
 
   Round(Avg(downloads)),
 
   COUNT(*)
 
 From fake_apps
 
 Group by price
 
Having count(price)>10;


Is there any restrictions on column references in HAVING?
For example, instead of-

SELECT price,
ROUND(AVG(downloads)),
COUNT(*)
FROM fake_apps
GROUP BY price
HAVING COUNT(*) > 10;

why cant I use-

SELECT price,
ROUND(AVG(downloads)),
COUNT(*)
FROM fake_apps
GROUP BY price
HAVING 3 > 10;


Hi
so this is the right code
select price, round (avg(downloads)), count (*)
from fake_apps
group by price
having count(*) > 10;
however, since the question was Add a  HAVING  clause to restrict the query to price points that have more than 10 apps.
I was wondering, why cant the last statement be
having downloads > 10; but when i ran that the table showed a value = '9’ under the count()* column
can someone explain why?

Hi. I was actually making the same mistake. We’re confusing the number of downloads with the number of apps.
When using HAVING downloads > 10 and we get that row with the ‘9’ value, it means there are 9 apps which have more than 10 downloads each. It might be helpful to take a look at the entire fake_apps table where you’ll see EVERY app has more than 10 downloads.
"
63,What's the difference between HAVING and WHERE?,"Get Help,Git",,5,"
Question
What’s the difference between HAVING and WHERE, don’t they do the same thing?
Answer
While it’s true that both the HAVING and WHERE clauses are used to filter the results of a query, it’s important to know the difference in how they are used.
The WHERE clause is used when we want to filter the results of a query and extract only the records that fulfill a specified condition. For example, in the query: SELECT name, age FROM people WHERE age > 25; we are using the WHERE clause to select only the records of people who are older than 25 years of age.
The HAVING clause is used when we want to filter the results of a query that uses aggregate functions and a GROUP BY statement. Instead of checking the condition specified on each original row in the table, it checks the condition against the results after grouping the data . Here’s an example: SELECT employee_id, SUM(sale_amount) FROM transactions WHERE month = 'June' GROUP BY employee_id HAVING SUM(sale_amount) > 1000; In this query, we are getting the total sales of each employee during the month of June, and then we are using the HAVING clause to filter those results again to return only the employees who have more than $1000 in sales.
","
I just tried using a column reference number after HAVING but no go - column reference should be allowed for HAVING as well

I also tried this. Column reference doesn’t work in HAVING clause.

If there are some cases, HAVING and WHERE can be substituted with each other?

Thank you for this. Great explanation.
"
64,Can a row be inserted from one table to another?,"Get Help,Git",,1,"
Question
Can a row be inserted from one table to another?
Answer
Yes, it is possible, we could instead of using VALUES we SELECT from another table  and pass what we get as values, for example:
INSERT INTO jokes [( title,  text_bit, author)]
SELECT title, text_bit, author FROM famous_jokes
WHERE author = 'Jim Carrey' OR author = 'Trevor Noah';

Usually, an insertion like this is uncommon, usually, we will be better of making a join query to get a result, but if necessary it is not impossible as we can see.
",
65,Is DROP TABLE a common action before CREATE TABLE?,"Get Help,Git",,1,"
Question
Is DROP TABLE a common action before CREATE TABLE?
Answer
The use of DROP TABLE is not recommended to be kept outside of the development process of an app, so we would not commonly find it as part of a deployed application, as a matter of fact, neither would be a CREATE TABLE action. There is a good reason for this, for example,  once our application behaves and works as we want it to and we decide to deploy it, usually the same service we use to store our app, will have a database storage as well where we can migrate our local db, or start one connected to our 'live'code (code that is accessible already through the browser). At this point, we would run a CREATE TABLE once, because databases are meant to preserve data as much as possible, it is usually cumbersome when there is the need to restructure your schema (for example).
In that example, imagining that we created FaceBook using an SQL database, by now there are millions of rows, dropping a table could be a catastrophic thing, yet if we really needed to, there is also the practice of creating back up databases.
Let’s back up now, while we develop our application, because we keep on making changes to its behavior and how it uses the database, sometimes we need to change the schema which as we may remember is the structure of what a row has in the table, if we need to change the schema, it means that forcefully we need to create a new table, and since we will not use our old version of that table, the best practice there would be to drop it.
Something I will like to mention here is that if we just DROP TABLE IF EXISTS, since SQL is index-based, even though we get rid of the table, the id or index of each row will usually stay, so if we had ten rows and deleted the table, the first entry on the new table with the same name will start at the index 11, to prevent this there is an action like IF EXISTS called CASCADE, it propagates the delete operation on the parent key to each dependent child key, in this case the rows, cleaning up their indexing so when we create a new table, the first item to be inserted will be at the index of 1 (remembering that SQL indexing starts at 1 and not 0). That way, when necessary, as we work on our projects and we need to DROP a TABLE because of schema changes or any need, we could safely run:
DROP TABLE IF EXISTS table_name CASCADE;

and now when we create our new table:
CREATE TABLE IF NOT EXISTS table_name(
 propname TYPE,
 propname TYPE,
 propname TYPE);

Then confidently we will know that the first entry we make will start at the index of 1:
INSERT INTO table_name VALUES(valueOne, valueTwo, valueThree);

",
66,"With SQL functions, if a parameter is optional, should you still provide a value for it?","Get Help,Git",,1,"
Question
With SQL functions like ROUND, if a parameter is optional, should you still provide a value for it?
Answer
Before I can give an answer to this question, it’s important to note that the documentation for functions like ROUND can slightly differ depending on the flavor of SQL you are using. In the SQLite documentation, we can see that the second parameter for the ROUND function is optional, whereas the SQL Server documentation shows that same parameter as required. Always make sure you’re checking the proper documentation!
As for the original question, it’s really up to you as the programmer to decide, you just have to be consistent with your decision. If you provide a value for an optional parameter, you should be doing that everywhere else in your code. The only real benefit to including a default value for an optional parameter is that it’s more explicitly clear as to what’s going on. Imagine someone reading your code who isn’t all that familiar with SQL, they might be able to get a better idea of what’s going on if you do provide values for the optional parameters.
",
67,What types of data can SQLite databases store?,"Get Help,Git",,5,"
Question
What types of data can SQLite databases store?
Answer
SQLite databases can store several different types of data. Some of the most common data types, which we will encounter in this course, are INTEGER, TEXT and REAL.
The INTEGER type is for a signed whole number, such as -25, 0, 100, …
The TEXT type is similar to strings in other programming languages, and stores a sequence of characters like ‘123 parkway street’.
The REAL type includes floating point values, like 1.5, 3.141, 103.3333, …
It is worth noting that the values of each data type can take the state of NULL (covered in exercise 8) which denotes a lack of value.
","
Is DATE a separate data type or this is just a form of TEXT?

DATE is not a separate data type in SQLite. Dates can be stored as TEXT, REAL or INTEGER values. Please refer to the corresponding article in SQLite3 documentation. Relevant quote:

SQLite does not have a storage class set aside for storing dates and/or times. Instead, the built-in Date And Time Functions of SQLite are capable of storing dates and times as TEXT, REAL, or INTEGER values:


TEXT  as ISO8601 strings (“YYYY-MM-DD HH:MM:SS.SSS”).

REAL  as Julian day numbers, the number of days since noon in Greenwich on November 24, 4714 B.C. according to the proleptic Gregorian calendar.

INTEGER  as Unix Time, the number of seconds since 1970-01-01 00:00:00 UTC.

Applications can chose to store dates and times in any of these formats and freely convert between formats using the built-in date and time functions.


It is a data  type recognized by SQL, but can be stored as text, integer or real values in SQLite.

image839×573 81.8 KB


Thank you for the insight!
To remind: Integer, text and real!
"
68,What if we are trying to match on a specific text length?,"Get Help,Git",,4,"
Question
In the context of this code challenge, what if we are trying to match on a specific text length?
Answer
If you are searching for a match on some specific text length, then instead of utilizing the % wildcard, which will match 0 or more characters, consider utilizing the _ wildcard for single character matches.
For example, say that you only remember that some restaurant name had 6 or 7 letters, and started with the letters ""Del"". What you can do is utilize the _ wildcard to match for a specific number of characters, up to a length of 6 or 7.
SELECT name
FROM restaurants
WHERE name LIKE 'Del___' /* matches ""Del"" followed by any 3 characters */
OR name LIKE 'Del____';  /* matches ""Del"" followed by any 4 characters */

","
That would work in cases where you want to match a pattern that you know is at the beginning or end of a string. Is there a way to do this if you know that the string is 7 characters long and contains the characters “Del” somewhere (but not necessarily at the start or end)?

I figured it out. You can use the AND operator along with LENGTH() which will return length of a string.
Example:

SELECT * FROM nomnom WHERE name LIKE ‘%bao%’ AND LENGTH(name) = 7;

When you run the above command in this exercise it will only return one result, however if you remove the condition after the AND, it will return two results.

SELECT * FROM nomnom WHERE name LIKE ‘%bao%’;

The above query will return two results.
In your case, your query would be:

SELECT * FROM nomnom WHERE name LIKE ‘%Del%’ AND LENGTH(name) = 7;

It’s important to note that LENGTH() is a function and not an operator, hence it returns an Integer which is the length of the string passed as an argument.

Great, that makes perfect sense. Thanks for the explanation!
"
69,Does casing matter when selecting the names?,"Get Help,Git",,5,"
Question
In the context of this code challenge, does casing matter when selecting the names?
Answer
No, casing does not matter for the names. This is because SQL is case-insensitive for text values.
For example, the following queries should return the same results,
SELECT *
FROM babies
WHERE name = ""ALICE"";

SELECT * 
FROM babies
WHERE name = ""Alice"";

","
In your exercises the casing does matter for some reason; https://www.codecademy.com/paths/data-science/tracks/sql-basics/modules/dspath-sql-queries/lessons/sql-queries-code-challenge/exercises/headlines-iii
This query returns 20 results;
SELECT *
FROM news
WHERE category  = 'b'
ORDER BY TIMESTAMP DESC
LIMIT 20 ;

This query does not return any results
SELECT *
FROM news
WHERE category  = 'B'
ORDER BY TIMESTAMP DESC
LIMIT 20 ;

Using Like returns results either way - this isn’t standard SQL behaviour?

I tried this way. When I put in ‘ALICE’, no result show. When I put in ‘Alice’, two records show: 

I am also confused, please see the comments .

@betapro38245 @mufengrick I am so sorry to read that this article caused confusion.
@jephos249 is clearly wrong here. Casing matters when we use = or == operator. We can change this behaviour by using COLLATE NOCASE:
SELECT * FROM bugs WHERE reported_by = 'Alex' COLLATE NOCASE;


I can only assume that maybe @jephos249 wanted to write that all the identifiers (table names, column names etc.) are case insensitive. This is true.

Sorry for the confusion.
"
70,Do column references have to follow the order the columns are listed in the SELECT?,"Get Help,Git",,4,"
Question
Do column references have to follow the order the columns are listed in the SELECT?
Answer
No, once you list the columns after the SELECT, they can be referenced by the order they appeared, starting from 1 for the first listed column.
You are not limited to referencing them in the exact order they were listed, like
GROUP BY 1, 2, 3
You can freely use the references in any order, like you would normally without using references.
GROUP BY 3, 1, 2
However, when using references, it is important to always keep in mind what numbers referenced which column, as it can become confusing as you list more columns in the SELECT. It is a convenient shortcut, but not necessarily always the best choice.
","
in the example:
SELECT ROUND(imdb_rating),
COUNT(name)
FROM movies
GROUP BY 1
ORDER BY 1;
Why we are using GROUP BY 1 twice?

1 represents the column you are querying…i.e. imdb_rating
GROUP BY 1 means GROUP BY imdb_rating and
ORDER BY 1 means ORDER BY imdb_rating
Assuming you have more than one column in your query, then the preceding columns will be
numbered as well i.e. imdb_rating = 1, downloads = 2, price = 3, id =4
Another example below
SELECT imdb_rating, downloads, price, id
COUNT(name)
FROM movies
GROUP BY 2
ORDER BY 3;
Note that
GROUP BY 2 means GROUP BY downloads
ORDER BY 3 means ORDER BY price

Thanks for your explanation is very clear.
I understood the concept.
"
71,"Given a value that is not a unique identifier, can we determine a unique identifier?","Get Help,Git",,1,"
Question
In the context of this exercise, given a value that is not a unique identifier, can we determine a unique identifier?
A non-unique identifier value would be any column other than order_id, customer_id and subscription_id.
Answer
No, if you are given a value other than a unique identifier column, like order_id, subscription_id, or customer_id, we cannot determine a unique identifier for the value.
What this means is, say we’re given a customer name of “John Smith”. There is no guarantee that there is only one “John Smith” within the customers table. There could one, or even a dozen entries with this name.
Given a customer_id, we can always determine their customer_name. But, the other way would not apply, because if we were given a customer_name, we could not determine their customer_id. Given the name “John Smith”, there might be 10 customer_id's with that name.
As a result, it is either very difficult and usually not possible to determine id values given a non-unique column value, which are columns other than the id columns.
",
72,Can we compare values of two columns in a WHERE clause?,"Get Help,Git",,5,"
Question
Can we compare values of two columns in a WHERE clause?
Answer
Yes, within a WHERE clause you can compare the values of two columns.
When comparing two columns in a WHERE clause, for each row in the database, it will check the value of each column and compare them.
Example
/* 
This will return all rows where the value in the 
x column is greater than the y column value. 
*/

SELECT x, y
FROM coordinates
WHERE x > y;

","
Can you have two constraints? F
Example
SELECT *
FROM movies
WHERE 4 < imdb_rating < 5;
or
SELECT *
FROM movies
WHERE imdb_rating < 5
WHERE year > 2014;
Thanks

we can use and if both conditions needs to be met, otherwise there is or if one of the conditions has to be met:
where condition1 and condition2
where condition1 or condition2


Thank you for your reply! When running multiple regression analysis, it is common to use more than one constraint…as each regressor has some condition!

You can also use NOT keyword
for examples we may want all student that aren’t 18
SELECT *
FROM student
WHERE NOT age >  18;

or simply you do
SELECT *
FROM student
WHERE age < 18;

"
73,What is a function?,"Get Help,Git",,2,"
Question
In general, what is a function?
Answer
A very general description of a function would be: A set of tasks or procedures that can take in a value, and return another value based on that input.
Functions in programming are similar to ones that you may have seen in math. For example,
f(x, y) = x^2 + y^2
If we use this function with two input values, it would return the sum of the squares of both values.
Similarly, in SQL, aggregate functions can take in a column name of a table, and will return some numerical value based on the column values. For example,
SELECT COUNT(col) FROM table;
This will return a single number, which is the number of rows that have non-empty values in the column col.
Some functions we will learn about later can even take values directly, instead of just column names, like
ROUND(10.4, 0)
and will return a value based on the input. The above would result in 10.0.
","

Thankyou for explaining that 

"
74,FAQ: Usage Funnels - Build a Funnel from Multiple Tables 3,"Get Help,Git",,15,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Build a Funnel from Multiple Tables 3” exercise from the lesson “Usage Funnels”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Build a Funnel from Multiple Tables 3


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why is the 1.0 needed in the percentage expressions (as it looks like it’s just multiplying by 1?
Thanks

I had the same question too =/
Apparently it’s an implicit numeric conversion to save on a lot of coding, that produces a floating point result that is accurate (no integer division).
Source: https://codereview.stackexchange.com/questions/58369/sql-percentage-calculation

Ah yes, I remember the point about divisions being odd depending on the number of decimal places, makes more sense. Thanks!

why SUM and COUNT both are used in calulating percentage?
1.0 * SUM(is_checkout) / COUNT(user_id) AS 'browse_to_checkout',
1.0 * SUM(is_purchase) / SUM(is_checkout)
AS 'checkout_to_purchase'
FROM funnels;


User_id is not a numeric value type, so you have to use count.  Since we converted the is_checkout to 1’s and 0’s, you would use SUM in this instance, since count would count the 0’s as well.

Exercise 7 within usage funnels implies we are getting all relevant data together by performing left joins on the 3 tables and building a querying on  table to collect a) distinct browser dates b)  user_ids for those dates c) count of checkouts associated with user ids and d) count of purchases associated with user ids - Query below:
SELECT DISTINCT b.browse_date, b.user_id, c.user_id IS NOT NULL AS 'is_checkout', p.user_id IS NOT NULL AS 'is_purchase' FROM
browse AS b
LEFT JOIN checkout AS c
ON b.user_id = c.user_id
LEFT JOIN p
ON p.user_id = c.user_id
However, some users may browse more than once on certain dates, and the same users may go to the checkout page or purchase. Wouldn’t the selecting DISTINCT browser dates filter out all of these records which are relevant?

Why can’t we use num_browse / num_checkout as the percentage?
for example : SELECT COUNT(user_id) AS ‘num_browse’,
SUM(is_checkout) AS ‘num_checkout’,
SUM(is_purchase)  AS ‘num_purchase’,
1.0 * num_browse / num_checkout AS ‘percent_checkout’,
1.0 * num_checkout / num_purchase AS ‘percent_purchse’
FROM funnels;

I wondered about the 1.0 for different reasons, super useful to have found this out on the way!   
My much more petty concern was that the columns I’d labelled as percentages were expressed as decimal percentages, where I felt it would be more useful to show them as the more familiar whole numbers, and round them to 2 decimal places, like so:
ROUND(100.0 * SUM(is_checkout) / COUNT(user_id),2)
AS ‘%_checkout’,
ROUND(100.0 * SUM(is_purchase) / SUM(is_checkout),2)
AS ‘%_purchase’
I noticed that when multiplying by 100 without the .0 I lost the decimal places I was trying to round, but looking here fixed that, so thanks again!
My reason for posting is to ask - am I right, or are the actual percentages as calculated in the sample and just very small?
Thanks in advance! 

Also had this question. Thought it might be something like this. Thanks for asking.

In 7/10, we use AS to alias several tables.
FROM browse as ‘b’
LEFT JOIN checkout as ‘c’
ON c.user_id = b.user_id
LEFT JOIN purchase as ‘p’
ON p.user_id = c.user_id
This makes sense that from when we alias checkout as c that we can say c.user_id , drawing the user_id column from a table we have nicknamed c.
But in the Warby Parker project, the Hint shows just using the first letter of the column and it seems to work without being aliased.
SELECT DISTINCT q.user_id,
h.user_id IS NOT NULL AS ‘is_home_try_on’,
h.number_of_pairs,
p.user_id IS NOT NULL AS ‘is_purchase’
Am I missing something here? How does SQL know which table I’m referring to when we simply say q.user_id?

I was thinking the same, haven’t found an answer yet

I was wondering the exact same thing. Does anyone know the answer to this?

PS! I just checked the funnels table with and without “DISTINCT”.  I noticed that without the distinct the identical user ids for a given date all showed the same results for “is_checkout” and “is_purchase”. I am not sure what the reason for this is, but it seems like the system registers a checkout/buy for all the times the browser_id went to the website, even though it only checked out/bought something the last time. Not sure if this is correct or why this would be the case, but it would explain the need to use “DISTINCT”.
Does anyone else have any thoughts on this?

I have the same question. It did not work.
Also, if the 1.0 is after the mathematical equation it returns “0.0”. In other words, it does not work.
"
75,FAQ: Multiple Tables - Review,"Get Help,Git",,7,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review” exercise from the lesson “Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Review


Can I have another “real-world” project to practice and apply the SQL skills I’ve gained so far?
I want even more real-world SQL practice, is there another “extra credit” project for me?
 When should we use each type of JOIN covered in the lesson?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I’ve build up some tables and I’m happy with my result and I want to share it! I’m just a beginner of programming and thx for the courses I really learnt a lot!!
-- Table 1
WITH report_1 AS(
WITH report AS(
SELECT customer_id, subscription_id, COUNT(subscription_id) AS 'quantity'
FROM orders
GROUP BY 1,2)
SELECT report.customer_id, subscriptions.description, report.quantity
FROM subscriptions
JOIN report
ON subscriptions.subscription_id = report.subscription_id)
SELECT customers.customer_id AS 'ID', customers.customer_name AS 'Customer Name', report_1.description AS 'Magazine', report_1.quantity AS 'Quantity'
FROM customers
JOIN report_1
ON report_1.customer_id = customers.customer_id
ORDER BY 1;

-- Table 2 (Short Form)
WITH report_1 AS(
WITH report AS(
SELECT customer_id, subscription_id, COUNT(subscription_id) AS 'quantity'
FROM orders
GROUP BY 1,2)
SELECT report.customer_id, subscriptions.description, report.quantity
FROM subscriptions
JOIN report
ON subscriptions.subscription_id = report.subscription_id)
SELECT customers.customer_id AS 'ID', 
CASE
WHEN report_1.description LIKE '%Politics%' THEN 'P'
WHEN report_1.description LIKE '%Sports%' THEN 'S'
WHEN report_1.description LIKE '%Fashion%' THEN 'F'
ELSE NULL
END AS 'Magazine', 
report_1.quantity AS 'Quantity'
FROM customers
JOIN report_1
ON report_1.customer_id = customers.customer_id
ORDER BY 1;

-- Table 3 (for purchasing easy reference)
SELECT Magazine, COUNT(*)
FROM(
WITH report_1 AS(
WITH report AS(
SELECT customer_id, subscription_id, COUNT(subscription_id) AS 'quantity'
FROM orders
GROUP BY 1,2)
SELECT report.customer_id, subscriptions.description, report.quantity
FROM subscriptions
JOIN report
ON subscriptions.subscription_id = report.subscription_id)
SELECT customers.customer_id AS 'ID', 
CASE
WHEN report_1.description LIKE '%Politics%' THEN 'P'
WHEN report_1.description LIKE '%Sports%' THEN 'S'
WHEN report_1.description LIKE '%Fashion%' THEN 'F'
ELSE NULL
END AS 'Magazine', 
report_1.quantity AS 'Quantity'
FROM customers
JOIN report_1
ON report_1.customer_id = customers.customer_id
ORDER BY 1)
GROUP BY Magazine
ORDER BY 2;



I tried all three of your queries but not one of them worked!?
I didn’t get any errors but I didn’t get any results either… very strange! Could you post a screen grab of your results?
Thanks for posting and tweaking my interest!
Dennis

Reward your top 5 buyers!
WITH previous_query AS (
SELECT customer_id,
   COUNT(subscription_id) AS 'subscriptions'
FROM orders
GROUP BY customer_id
)
SELECT customers.customer_name,
   previous_query.subscriptions
FROM previous_query
JOIN customers
  ON previous_query.customer_id = customers.customer_id
  --sort the results!
  ORDER BY previous_query.subscriptions DESC
  LIMIT 5;


Hi Dennis! Thx for your reply :]
I think it was the copy and paste issue since I was working this on evernote therefore some formatted text is pasted here. I’ve edited my post and I think the code can work now.
And nice idea for your table too! 

hi guys,
Can “ORDER BY and LIMIT” commands be used when using “JOIN”?

Hi, I tried to create a view that would tell how many magazines where purchased by month, since all appear to have been purchased on january, I changed it to classify them as first half of jan (1 to 15) and second half (16 to 31). Just the first magazine works with this classification, but the rest just set them to second half, anyone see my error?
/* for each subscription how many purchases had in the first half of the month vs the second*/

select subscriptions.subscription_id, subscriptions.description, orders.order_id, orders.purchase_date,
/* this sums the total amount of sold magazines per subscription id*/
sum(case
  when orders.purchase_date is null then 0
  else 1
end) as 'total_sold',
/*this groups them by first half and second hafl of the month january*/
case 
  when orders.purchase_date is null then null
  when orders.purchase_date <= '01-15-2017' then 'First half' 
  when orders.purchase_date >= '01-16-2017' then 'Second half' 
end as 'period'

from subscriptions
left join orders
  on subscriptions.subscription_id = orders.subscription_id
group by subscriptions.subscription_id, period
order by subscriptions.subscription_id, period;

/* test if subscription id n really have only x orders*/

select subscriptions.subscription_id, subscriptions.description, count(subscriptions.subscription_id) as 'purchases'
from subscriptions
left join orders
  on subscriptions.subscription_id = orders.subscription_id
group by subscriptions.subscription_id;


select *,
case 
  when orders.purchase_date is null then null
  when orders.purchase_date <= '01-15-2017' then 'First half' 
  when orders.purchase_date >= '01-16-2017' then 'Second half' 
end as 'period'
from orders
order by subscription_id;

"
76,FAQ: Queries - Case,"Get Help,Git",,21,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Case” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Case


 For a CASE statement, do all values provided by THEN have to match a single data type?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
How or where do I input ORDER BY, as I’d like to see Chill first then Intense?

Insert the line after FROM movies and end that line with the semi-colon, not this one.

Thanks but it’s  not  working. Can’t get all the ""Chills’ together. This seems to always sort by genre:
SELECT name,

 CASE
  WHEN genre = 'romance' THEN 'Chill'
  WHEN genre = 'comedy'  THEN 'Chill'
  ELSE 'Intense'
 END AS 'Mood'

FROM movies
WHERE genre IS NOT NULL 
ORDER BY 'Mood';

If it is using the genre to order rows, how can I bring up ‘comedy’ then ‘romance’ then the rest in that order?




 paeon:

ORDER BY ‘Mood’;


Column headings are not strings.
ORDER BY Mood;




 paeon:

If it is using the genre to order rows


It is not in this instance. The two columns are name and Mood.
If we wanted the names to be sorted as well as the mood,
ORDER BY Mood, name;




 paeon:

If it is using the genre to order rows, how can I bring up ‘comedy’ then ‘romance’ then the rest in that order?


First, examine the Schema
Database Schema
movies 230 rows
id	INTEGER
name	TEXT
genre	TEXT
year	INTEGER
imdb_rating	REAL

If we wish to sort by genre, then we need to include that column in the selection.
SELECT name, genre,

and in the sort line,
ORDER BY Mood, genre, name;


Hi,
I wonder why there has to be a comma after ‘SELECT name’ from the code below.
And also curious about why ‘FROM movie’ has to be at the end.
SELECT name,
CASE
WHEN imdb_rating > 8 THEN ‘Fantastic’
WHEN imdb_rating > 6 THEN ‘Poorly Received’
ELSE ‘Avoid at All Costs’
END AS ‘Review’
FROM movies;
Thanks,
Sihyeon




 sihyunist:

why there has to be a comma after ‘SELECT name’


Because it separates the name from the CASE clause, which is also a parameter of the SELECT clause. Everything before FROM is part of SELECT.

Aha! Thank you soooo much!

In this example, is it not possible to use OR along with the CASE statement. Something like below.
SELECT name,
CASE
WHEN genre = ‘romance’ OR genre = ‘comedy’ THEN ‘Chill’
ELSE ‘Intense’
END AS ‘Mood’
FROM movies;

Hi, I’m very curious, why this code:
SELECT name,
CASE
WHEN imdb_rating > 8 THEN ‘Fantastic’
WHEN imdb_rating > 6 THEN ‘Poorly Received’
ELSE ‘Avoid at All Costs’
END
FROM movies;
print a column with “CASE  WHEN imdb_rating > 8 THEN 'Fantastic’  WHEN imdb_rating > 6 THEN ‘Poorly Received’ ELSE 'Avoid at All Costs’ END AS ‘Review’ “ as column name?

You need to add the AS statement after END.

HELLO,
Why do we write 2 when conditions and not just one with a OR condition? :
WHEN genre = ‘romance’ THEN ‘Chill’
WHEN genre = ‘comedy’ THEN ‘Chill’
WHEN genre = ‘romance’ OR  'comedy;  THEN ‘Chill’

@mtf may you explain more on how the syntax ‘,’ the commas, need to be used by giving few more examples?


https://www.dofactory.com/sql/select


seems to work for me. Did you try it yourself?

No reason. Both is possible. Just please replace that semicolon with a single quote (’) in your code !

I am getting an Error when I wish to Limit the records using LIMIT query for the following SQL code:-
SELECT name,
CASE
WHEN imdb_rating > 8 THEN ‘Fantastic’
WHEN imdb_rating > 6 THEN ‘Poorly Received’
ELSE ‘Avoid at All Costs’
END
FROM movies;
Whenever I use LIMIT 10; it gives an error.



If the rating is above 8, then it is Fantastic.
If the rating is above 6, then it is Poorly Received.
Else, Avoid at All Costs.

A rating of 9 is both above 6 and 8. Shouldn’t the conditions be x>8, 6<x<=8? Or does the order of coding matter?
Thanks

It’s either greater than eight or it’s not. Failing that it’s either greater than six, or it’s not. Everything falls through naturally without any between tests.

SELECT name,
Why do i need to put the comma after the name ? I tried by SELECT id,name -it still required a comma after the last column name. Why is that so ?
"
77,FAQ: Multiple Tables - Introduction,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction” exercise from the lesson “Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Introduction


In this exercise, are there any guidelines and reasons for splitting the table as shown in the example?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Is there a way to group the select statement rather than simply typing out select * from … 3 times? Something along the lines of select * from (table1, table2, table3) limit 5;?
I tried it but the checkbox doesn’t like it and I don’t know if it’s because my syntax is off (but still got results) or whether it is validating only against the statement it wants you to simply copy paste.
"
78,How can I select data lying within a certain span of time?,"Get Help,Git",,2,"
Question
In the context of this code challenge, how can I select data lying within a certain span of time?
Answer
In this exercise, you need to select data lying within the full span of time. This is somewhat of a trick question, as you do not actually need to add some WHERE condition to do this because without specifying a certain time span it will select all of them regardless of the value.
If you did want to select some specific time range, between specific years or dates, you can use the WHERE clause with BETWEEN. For example, to obtain the data lying within a span of years, you can do the following,
WHERE year BETWEEN 1880 AND 1900

And, if you wish to obtain data within a span of dates, you can do the following for example,
WHERE date BETWEEN `1880-01-01` AND `1900-12-31`

","
Can someone tell me how to use count with multiple columns?
"
79,What do the numbers refer to in a statement like 'GROUP BY 1' or 'ORDER BY 2'?,"Get Help,Git",,7,"
Question
What do the numbers refer to in a statement like ‘GROUP BY 1’ or ‘ORDER BY 2’?
Answer
When you see numbers after a GROUP BY or ORDER BY statement, they are referring to the columns that were selected in the query. These are called column reference numbers. The 1 signifies the first column selected, the 2 signifies the second column selected, and so on. Here’s an example:
SELECT alpha, bravo, charlie FROM table GROUP BY 1 ORDER BY 2;

In this query, 1 is referring to alpha and 2 is referring to bravo.
The main reason we use column reference numbers is because sometimes it can be a pain to type out a really long or complex column name. As you can imagine, it’s a whole lot easier typing a number than something like customer_order_number.
","
Thanks! for your explanation. But, this two query yield different results
SELECT ROUND(watch_duration_in_minutes) AS ‘duration’, COUNT(*) AS ‘count’
FROM watch_history
GROUP BY 1
ORDER BY 1;
SELECT ROUND(watch_duration_in_minutes) AS ‘duration’, COUNT(*) AS ‘count’
FROM watch_history
GROUP BY watch_duration_in_minutes
ORDER BY watch_duration_in_minutes;
So, I’m thinking that exists a reason more stronger than simply avoid complex column name. It’s related to aggregate functions, but I dont know how to get a definition.
Sorry, for my poor english 

The result will be the same.

SELECT ROUND(watch_duration_in_minutes) AS ‘duration’, COUNT(*) AS ‘count’
FROM watch_history
GROUP BY ROUND(watch_duration_in_minutes)
ORDER BY ROUND(watch_duration_in_minutes);
This is the difference, you forgot ROUND in the group and order by.

Referring to the columns by number doesn’t work for me with HAVING. Is there way around it?

To me this is the wrong excercise as it is asking you
to find codeflix in the payments table or have i missed something as you will never find codeflix in the payments as it is not there or is it me thanks Ian.

i think this is the wrong excercise as it is asking you to find codeflix in payments but this impossible or am i missing something thanks
Ian
"
80,FAQ: Multiple Tables - Cross Join,"Get Help,Git",,24,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Cross Join” exercise from the lesson “Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Cross Join


In the context of this exercise, can we perform CROSS JOIN on more than two tables?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi everyone!
So, about the CROSS JOIN almost everything is clear, only I don’t get totally where will I need to use it. But it’s like a sub-question, give answer on it with the main question if you can.
The main question is about instruction #3. Here we need to create a cross join query with a where statemant with two conditions:
start_month <= month AND end_month >= month;
(please look at the excersice to get wider understanding of what I’m talking about)
At the end of the instruction it says: “This will select all months where a user was subscribed.” The query I wrote, by this instruction, works perfectly, just I can’t undesrtand the logic behind it. Please, kindly explain how does it select’s all months where a user was subscribed?

Hi Norlandius,
I wanted to answer your main question. I’m guessing your SQL query looks something like this:
SELECT month,
COUNT(*)
FROM newspaper
CROSS JOIN months
WHERE start_month <= month
AND end_month >= month
GROUP BY month;
Line 1 is basically saying pull the column called month
Line 2 is saying, reference the [cross joined newspaper table +months table] to pull the month and count the number of rows for each month value (this value ranges from 1-12)
Line 3 adds a condition, so that the query can work for every value that’s listed in the month column from Line 1 (where the values range from 1-12) imagine this simpler query listed below is being run 12 times in the background once for each month. That’s why the above query is important and powerful.
SELECT COUNT(*)
FROM newspaper
WHERE start_month= 1
AND end_month = 1;
This exercise is useful because you can now analyze your subscription trend…is it growing, declining, at what rate etc.
Hope that helps!

Just adding to muqaddasibrahim’s answer.
What CROSS JOIN does is the following:
–> For each line of newspaper it will add all the lines from months.
–> This way, line 1 from table newspaper will appear 12 times now, 1 per each month. The same applies to all the other lines
–> the logic of the WHERE condition will filter out lines whose months are outside the range
start_month< month < end_month
This way you can count how many lines there are. If grouped by months, it will show how many lines there are for that specific month, which is the number of subscriptions.

Hi there!
I didn’t quite understand, why we use  start_month <= 3
end_month >= 3 conditions instead of just ‘start month = 3’ in instruction #1.  Can someone explain it to me please? Appreciate it

This gets explained in the Hint…

“During March” means that the customer’s starting month was in or before March and final month was in or after March:


Using start_month = 3 will only include subscriptions starting on March but not the ones that started before and end on March or later.
To be subscribed during March the subscription must begin in March (or before) and end on March (or after). So, the condition requires start_month <= 3 AND end_month >= 3 (where 3 is March). The following subscriptions includes March.

From 1 to 3 start_month = 1 AND end_month = 3
From 1 to 5 start_month = 1 AND end_month = 5
From 3 to 5 start_month = 3 AND end_month = 3

The following subscriptions doesn’t include March

From 1 to 2 (because end_month >= 3 is false)
From 4 to 5 (because start_month <= 3 is false)

So, both conditions established in the hint must be true at the same time and that requires the use of the AND clause.

I also struggled with this. I understand how the WHERE works and how the cross join brings up all the possibilities and then you filter out those that did not fit.
It is a very elegant method, but it is the first one where I have wondered how I would ever find another context for it and remember how to do it. Maybe that will come with later projects. I trust the trainers and I am really enjoying the course.

Can someone help me? I’m either really missing something or the site isn’t working for me. I copied the exact cross join they had in Lesson 3 (see image). And yet the code isn’t working for me. Can someone help me out or tell me if I’m missing the obvious?

image.png1885×673 196 KB


SELECT month,
   COUNT(*)
FROM newspaper
CROSS JOIN months
WHERE start_month <= month 
   AND end_month >= month
GROUP BY month;

I get the code on lines 5 onward. But why do I select month, but then COUNT(*)? Why not COUNT(month)? Why is it FROM newspaper? newspaper doesn’t have a month column, so surely it would be FROM month? And so, I CROSS JOIN newspaper?

same issue here. I don’t know why the website keep asking me “did you aggregate by month” even though I copy exactly the same code from Hint. This pull me back for weeks andI can’t move on to next step, burning my money and time.

By reading the Cross-Join exercise and the examples , I was wondering , why in example 3 & 4, we do not simply use INNER JOIN instead of CROSS JOIN? In the Inner Join exercise it was written “When we perform a simple/inner join , the result only includes rows that match on our condition”.
By following that definition, It seems to me that INNER JOIN can be applied at the above examples since we restrict the query by writing  start_month <= month & end_month >= month. which helps us make a condition match.
I actually used the INNER JOIN for example No. 3 and I wrote the code as it follows :
SELECT *
FROM newspaper
INNER JOIN months
ON start_month <= month
AND end_month >= month;
& for example No.4:
SELECT month,
COUNT(*)
FROM newspaper
INNER JOIN months
ON start_month <= month
AND end_month >= month
GROUP BY month;
There was not any error message about the code. The solutions were correct and exactly the same as those of codeacademy’s instructions which used the CROSS JOIN!
I would appreciate if someone helped me with my confusion with INNER & CROSS JOIN concepts. Thanks.

Looks to me that you’re missing a query. There should be four separate queries to complete this challenge.

It seems like CodeAcademy’s check is too rigorous. I had set limit’s for a couple of these queries because I wanted to save scrolling time, when I check my queries, but as a result it would not let me finish the lesson until I removed them.
Dumb.

So I get the idea of SQL CROSS JOIN, but there’s something I noticed.
All the examples we’ve treated so far have a single column in the second table.
How do CROSS JOIN’s work when you are working with tables that have multiple columns. Do we need to include an ON statement to determine the column we want to use for the cross join. (This is just my thought, considering we’ve not had to use the ON statement with CROSS JOIN’s so far).
Thanks!

“Suppose we wanted to know how many users were subscribed during each month of the year.”
So, for newspaper I can use the following query:
SELECT start_month, COUNT(id)
FROM newspaper
GROUP BY 1
ORDER BY 1 ASC;

Is there any real-world use in applying the months table logic, or it’s just for understanding the cross join part?

It’s was very hard to understand if you aren’t english speaker.
Because for russian man ‘during’ sounds here like it was started from 1 to 31 march.
I spend a bit time to got idea this mean ‘was on subscribe during march’

Guys, I’ve read through the list of questions, but have been unable to figure out where my code is incorrect. Can someone just give me the correct answer so I can get past this exercise?
here is my code:
SELECT month, COUNT (*)
FROM newspaper
CROSS JOIN months
WHERE start_month <= 3 AND end_month >= 3
GROUP BY month;

You’re still hard-coding “3” as the month to check. Generalize this since you’re Grouping By month. Does that help?

Yes, very much. Thank you.
"
81,How does the average function work?,"Get Help,Git",,3,"
Question
How does the average function work?
Answer
When using the AVG() function, the computer will take all of the non-NULL values from a numeric column that’s provided, add them together, and divide the sum of those values by the total number of rows that had a non-NULL value. The resulting value will then be displayed in the result-set.
","
When you use the ROUND function with the AVG function, does it round on the AVG, or does it round on each selected row?

AVG(ROUND(column_name)) will first round the column values that are not null and then take the average of those rounded values.
On the other hand, ROUND(AVG(column_name)) will do this same process in reverse order, in other words, it will begin by taking the average of the column values that are not null and then round that calculated average.
When nesting functions (calling functions inside other functions), remember that the innermost function gets called first, and its result is the argument for the function that surrounds it. So, go inside-out, just as the movie 
"
82,Do all table names have to have capital letters?,"Get Help,Git",,7,"
Question
Do all table names have to have capital letters?
Answer
Many developers capitalize a table name for the sake of differentiating it from the column names, although the most common convention is to have table and column names in all lowercase to have a more legible contrast on a written query but then again it is also possible to do the contrary and have table and column names all uppercase and keywords in lower case,  let’s see their comparison:
SELECT * FROM table WHERE table_name = 'My table';

/*it can be with capitalized table name*/

SELECT * FROM Table WHERE table_name = 'My table';

/*or it can have all uppercase and keywords lowercase*/

select * from TABLE where TABLE_NAME = 'My table';


As we may see, it is much to preference and also sometimes the tools used, SQLite does not have restrictions that I am aware of on this subject, yet MySQL does have some. The main thing to keep in mind on our decision is to make sure that once created we do not try to go back an forth on how we write our queries, simply because SQL is case sensitive, so if we created a table called My_First_Table, and we try to SELECT * FROM my_first_table; we will find that table does not exist. It is the SQL-92 standard that specifies all identifiers and keywords are case-insensitive.
So if we have the chance to decide, let’s stick to it, otherwise, most commonly we will work with code already created by others, so we will need to respect their preference on how it is written.
","



 axelkaban:

SQL is case sensitive, so if we created a table called My_First_Table , and we try to SELECT * FROM my_first_table; we will find that table does not exist. It is the SQL-92 standard that specifies all identifiers and keywords are case-insensitive.


I’m a bit confused about whether SQL is case-sensitive or case-insensitive. Am I correct to say that SQL keywords are case-insensitive, but table names and column names are case-sensitive?

Considering that these queries both work and produce the same output:
sElEct id, name, category, t_or_f 
froM fake_apps
wheRE t_or_f = 4 > 200
ordeR bY name;

sElEct id, name, category, t_or_f 
froM FakE_AppS
wheRE t_or_f = 4 > 200
ordeR bY name;

The actual table name is fake_apps, so it doesn’t appear that the table name is case sensitive.
Perhaps someone with far more experience than me like @factoradic could weigh in?
P.S.
This works as well:
sElEct Id, nAme, caTegory, t_Or_f 
froM FakE_AppS
wheRE t_or_f = 4 > 200
ordeR bY name;

So, the column names don’t appear to be case-sensitive either.

Thanks, @midlindner for such a welcoming invitation 

It’s quite difficult to answer this question. SQL is a standardized language, but each DBMS vendor can freely interpret the standard, extend it or simply ignore some pieces of the standard. That is why there are so many differences between SQLite and MySQL, between MySQL and MS SQL, etc.
I would like to focus on the SQLite - this is what codecademy uses in this course. In SQLite, all identifiers are case insensitive. And this is proven, to some extent, by the brilliant detective work by Tod.
I would quote the latest SQL standard, but unfortunately, I don’t have access to it. But usually, all the identifiers (table names, column names etc.) are case insensitive when they are not quoted and case sensitive when they are. But in SQLite quotation marks do not impact case sensitiveness:
CREATE TABLE test_table (id INTEGER);		-- ok
CREATE TABLE Test_Table (id INTEGER);		-- fail
CREATE TABLE ""Test_Table"" (id INTEGER);		-- fail
CREATE TABLE ""test_table"" (id INTEGER);		-- fail
ALTER TABLE test_table ADD ""ID"" INTEGER;	-- fail
ALTER TABLE test_table ADD ""iD"" INTEGER;	-- fail

Also, the operating system itself might make a difference when it comes to case sensitivity. Some versions of MySQL act differently when they are deployed on Linux and on Windows 




 axelkaban:

It is the SQL-92 standard that specifies all identifiers and keywords are case-insensitive.


92 stands for 1992. I wasn’t even born then… Please remember that if someone will try to substantiate some statements by quoting standards from 20 years ago it is best to simply avoid this person in your professional career. SQL is a living language, with a changing standard. SQL standard was revised numerous times since '92.

As a developer, you will work with many different databases. It does not make sense to rely on the case sensitivity. Trust me, it never does make sense to create columns id and ID in the same table, even when the database allows it.

Thanks for the explanation!

Thank you (again!) for your response! It’s very helpful.



 factoradic:

It does not make sense to rely on the case sensitivity. Trust me, it never does make sense to create columns id and ID in the same table, even when the database allows it.


I fully agree with you. But I also wanted to know whether SQLite is case-sensitive or not, for the sake of error-handling. If it’s not case-sensitive, then one possible source of error (i.e. a wrong case) is ruled out.

You’re very welcome (again!) I really appreciate your questions, if this will save some other users from confusion - that’s the time well spent.



 masakudamatsu:

But I also wanted to know whether SQLite is case-sensitive or not, for the sake of error-handling.


Makes sense! 
"
83,Can there be multiple conditions in a query?,"Get Help,Git",,1,"
Question
Can there be multiple conditions in a query?
Answer
Yes, it is possible to implement multiple conditions on one query if necessary, the most commonly used ones would be AND and OR so if we were to check for an article’s title on a magazine table to narrow down on author, subject, date, and characters length, we could say:
SELECT title FROM Magazine 
WHERE author = 'Axel Kaban'
AND subject = 'SQL' 
AND date = '12/3/18'
OR date = '12/1/18'
AND char_length > 3000;


",
84,FAQ: Subqueries - Non-Correlated Subqueries III,"Get Help,Git",,10,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Non-Correlated Subqueries III” exercise from the lesson “Subqueries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Non-Correlated Subqueries III


Why do we need to use the alias “a”?
Why do I need a nested query at all?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
11 posts were split to a new topic: Why do we need to use the alias “a”?

4 posts were split to a new topic: Why do I need a nested query at all?

3 posts were split to a new topic: Getting off track in SQL lesson

codecademy example:
     SELECT a.dep_month,
           a.dep_day_of_week,
           AVG(a.flight_count) AS average_flights
      FROM (
            SELECT dep_month,
                  dep_day_of_week,
                   dep_date,
                   COUNT(*) AS flight_count
              FROM flights
             GROUP BY 1,2,3
           ) a
     GROUP BY 1,2
     ORDER BY 1,2;

     The inner query provides the count of flights by day, and the outer query uses the inner query’s result set to compute the average by day of week of a given month.

instructions:
Using a subquery, find the average total distance flown by day of week and month.
Be sure to alias the outer query as average_distance and the inner query as flight_distance.
solution:
    SELECT a.dep_month,
           a.dep_day_of_week,
           AVG(a.flight_distance) AS average_distance
      FROM (
            SELECT dep_month,
                  dep_day_of_week,
                   dep_date,
                   sum(distance) AS flight_distance
              FROM flights
             GROUP BY 1,2,3
           ) a
     GROUP BY 1,2
     ORDER BY 1,2;

my question:    In the inner query, why do I need to use
SUM(distance) AS flight_distance
instead of
COUNT() AS flight_distance
like what was used in the example?
I thought I had it done right, but turns out I needed to change the COUNT() to SUM() and not sure why?
Why would count work for the number of flights but not the number of miles/distance?
Not sure if I’m having trouble understanding the code or the math …

The COUNT function is counting the instances of a record and the SUM function is actually adding values from a column.
In the example code the COUNT function is like a tally board counting up all the instances of flights per day.
In the solution code the SUM function is reading the values of the distance field in the flights table and adding them together.

I don’t get why dep_date is needed. I see it won’t let me run the query without it, but I don’t understand why. Anyone?

From the code the lesson provides, we are looking for average flights on day of week, like Monday, Tuesday, Wednesday,…etc. However, for example, it may not has same amount of flights on every Monday. Therefore, we count the flights on every day basis, like 2010-01-01, 2010-01-09, 2010-01-10,…etc, in the inner query. You can actually run only the inner query to see that. Then group them up by day of week and calculate the average at outer query. The final result is Monday, Tuesday,…, Sunday in each month in average, and you can see some of them are not integer because of the amount of flights is not the same.
Now, in the practice, we are looking for average distance. We need to sum up the distance of flights on each day instead of counting how many flights we have. Therefore, we simply use Sum(distance) at inner query. Then group them up by day of week and calculate the average at outer query. The structure and concept are basically the same.

How does SQL recognize “a” as a table when the only tables in the schema are “flights” and “airports”. A WITH_AS statement was never created.

2/23/2000 shows two flights on Wednesday, 1 flight on Tuesday.  Ha, wat?
This exercise was confusing at first because the flight_count was so low.  Why is there an average of only 1 flight per day?? I wasn’t sure I understood what the data meant at first.
"
85,Why isn't there a field for whether a user is premium in the users table?,"Get Help,Git",,1,"
Question
In the context of this exercise, why isn’t there a field for whether a user is a premium user in the users table?
Answer
There can be a number of reasons why this information is not stored in that table. When developing a schema, there are always tradeoffs, and most of the time, there is no “perfect” solution.
It might work to add another field in the users table, such as an is_premium column, that tells whether or not they are a premium user. This can probably store a bit value, where 0 means they are not a premium user, and 1 means that they are a premium user. This may speed up some queries because we only would need to check the premium_users table if the value is 1.
However, this field would require more memory stored in the table, as well as make the users table less independent from the premium_users table. With databases, we want to normalize the data as much as possible. Also, a lookup of whether the user_id is in the premium_users table may not take too long, so the time tradeoff can be reasonable to save memory.
",
86,Are identifiers always numerical values?,"Get Help,Git",,1,"
Question
In the context of this lesson, are identifiers, like the id column, always numerical values?
Answer
No, identifiers of a table do not always have to be numerical values. It is most common to use numerical values because the values are easy to keep track of, and for each new row, we simply increment the number by 1, but it is not absolutely necessary.
Instead of numerical values, you can use non-numerical values, such as text values or even dates, as long as they are unique for each row. You can even use multiple columns, in combination, to determine an identifier for each row.
For an example of a non-numerical identifier, consider a table of employees, with a column for emails, which can be used as the id column because each employee has a unique email. Another example is a table of transactions, where dates are specified to milliseconds that they were applied. Transactions cannot happen at the same time, so these dates might be used as the identifier.
",
87,FAQ: Manipulation - Relational Databases,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Relational Databases” exercise from the lesson “Manipulation”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Relational Databases


Are all databases relational?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
88,Do we have to select the column which we are ordering by in a SQL statement?,"Get Help,Git",,1,"
Question
In the context of this code challenge, do we have to select the column which we are ordering by in a SQL statement?
Answer
No, you do not have to select the column, or columns, that you are applying the ORDER BY clause on. For example, if you were applying the clause like so,
ORDER BY column_1
you do not have to select column_1 in your statement.
Most of the time, for the sake of clarity of how the data is being ordered, it might make sense to include that column in your SELECT statement, but it is not absolutely necessary. The following would be valid,
SELECT column_1, column_2
FROM table
ORDER BY column_3;

",
89,Are there any other commonly used SQL commands?,"Get Help,Git",,7,"
Question
In the context of this lesson, are there any other commonly used SQL commands?
Answer
The SQL commands covered in this lesson are probably the most common ones you will encounter or need to use when working with tables. Other available commands are more situational and not as commonly used.
One such command is DROP TABLE, which you can use to permanently remove a table from a database. Deleting tables is generally not a frequent occurrence, so you might only use this once in a while. Other commands, such as ANALYZE, which is used to obtain statistics about a table, are also not as common and you might only use them in certain situations.
For a full list of all the commands provided by SQLite, which is used in the Codecademy courses, you can check out the official documentation.
","
On which websiite i can check ofifcial documentation of SQlite?

https://www.sqlite.org/docs.html
but you should be able to find that using google? projects like sqlite have there own website (which should be easy to find), from there there is often a link to the documentation

Yes, but keeping the documentation within the faqs is the whole point of faqs. You probably could google the answer to this question as well…

DROP TABLE may be quite frequently used if we create a new table in JavaScript, as exemplified in this lesson on Node-SQLite.

Here are various commonly used SQL commands: https://hackr.io/blog/sql-commands
And this is a very exhaustive SQL cheatsheet: https://hackr.io/blog/sql-cheat-sheet

Link to the list of SQL Commands is attached here which is an article of Codecademy:
https://www.codecademy.com/articles/sql-commands
"
90,FAQ: Subqueries - Non-Correlated Subqueries III,"Get Help,Git",,10,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Non-Correlated Subqueries III” exercise from the lesson “Subqueries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Non-Correlated Subqueries III


Why do we need to use the alias “a”?
Why do I need a nested query at all?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
11 posts were split to a new topic: Why do we need to use the alias “a”?

4 posts were split to a new topic: Why do I need a nested query at all?

3 posts were split to a new topic: Getting off track in SQL lesson

codecademy example:
     SELECT a.dep_month,
           a.dep_day_of_week,
           AVG(a.flight_count) AS average_flights
      FROM (
            SELECT dep_month,
                  dep_day_of_week,
                   dep_date,
                   COUNT(*) AS flight_count
              FROM flights
             GROUP BY 1,2,3
           ) a
     GROUP BY 1,2
     ORDER BY 1,2;

     The inner query provides the count of flights by day, and the outer query uses the inner query’s result set to compute the average by day of week of a given month.

instructions:
Using a subquery, find the average total distance flown by day of week and month.
Be sure to alias the outer query as average_distance and the inner query as flight_distance.
solution:
    SELECT a.dep_month,
           a.dep_day_of_week,
           AVG(a.flight_distance) AS average_distance
      FROM (
            SELECT dep_month,
                  dep_day_of_week,
                   dep_date,
                   sum(distance) AS flight_distance
              FROM flights
             GROUP BY 1,2,3
           ) a
     GROUP BY 1,2
     ORDER BY 1,2;

my question:    In the inner query, why do I need to use
SUM(distance) AS flight_distance
instead of
COUNT() AS flight_distance
like what was used in the example?
I thought I had it done right, but turns out I needed to change the COUNT() to SUM() and not sure why?
Why would count work for the number of flights but not the number of miles/distance?
Not sure if I’m having trouble understanding the code or the math …

The COUNT function is counting the instances of a record and the SUM function is actually adding values from a column.
In the example code the COUNT function is like a tally board counting up all the instances of flights per day.
In the solution code the SUM function is reading the values of the distance field in the flights table and adding them together.

I don’t get why dep_date is needed. I see it won’t let me run the query without it, but I don’t understand why. Anyone?

From the code the lesson provides, we are looking for average flights on day of week, like Monday, Tuesday, Wednesday,…etc. However, for example, it may not has same amount of flights on every Monday. Therefore, we count the flights on every day basis, like 2010-01-01, 2010-01-09, 2010-01-10,…etc, in the inner query. You can actually run only the inner query to see that. Then group them up by day of week and calculate the average at outer query. The final result is Monday, Tuesday,…, Sunday in each month in average, and you can see some of them are not integer because of the amount of flights is not the same.
Now, in the practice, we are looking for average distance. We need to sum up the distance of flights on each day instead of counting how many flights we have. Therefore, we simply use Sum(distance) at inner query. Then group them up by day of week and calculate the average at outer query. The structure and concept are basically the same.

How does SQL recognize “a” as a table when the only tables in the schema are “flights” and “airports”. A WITH_AS statement was never created.

2/23/2000 shows two flights on Wednesday, 1 flight on Tuesday.  Ha, wat?
This exercise was confusing at first because the flight_count was so low.  Why is there an average of only 1 flight per day?? I wasn’t sure I understood what the data meant at first.
"
91,FAQ: Manipulation - Relational Databases,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Relational Databases” exercise from the lesson “Manipulation”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Relational Databases


Are all databases relational?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
92,Do we have to select the column which we are ordering by in a SQL statement?,"Get Help,Git",,1,"
Question
In the context of this code challenge, do we have to select the column which we are ordering by in a SQL statement?
Answer
No, you do not have to select the column, or columns, that you are applying the ORDER BY clause on. For example, if you were applying the clause like so,
ORDER BY column_1
you do not have to select column_1 in your statement.
Most of the time, for the sake of clarity of how the data is being ordered, it might make sense to include that column in your SELECT statement, but it is not absolutely necessary. The following would be valid,
SELECT column_1, column_2
FROM table
ORDER BY column_3;

",
93,Is it good practice to include an id column in every table?,"Get Help,Git",,3,"
Question
In SQL, is it good practice to always include an id column in every table?
Answer
Most of the time, including a column to store unique id values, typically INTEGER values, for each row can be a good idea.
A unique id allows for more convenience, and one of the only real downsides is the extra memory required to store the additional values.
One benefit to having such a column is when joining multiple tables. When you are joining tables, as you will do later in the course, it is much quicker and easier to JOIN on a column of INTEGER values than on other value types like TEXT. When working with large amounts of data, the time saved can be much more evident and important.
In addition, another benefit to include an id is that its value is independent from the data in the row. This means that even if we update the values in other columns of a row, the id stays unchanged.
Furthermore, having unique id values prevents rows of data from being mixed up, especially for duplicate records. Without a unique identifier of the rows, it can get troublesome figuring out which row we want to use.
Most tables allow for an auto-incrementing identity value for each row added to the table, which you can specify when creating the table, or some will automatically include one.
","
i didn t understand the last one
Most tables allow for an auto-incrementing identity value for each row added to the table, which you can specify when creating the table, or some will automatically include one?
i didn t understand what we mean by this phrase ?

It means that when you add a new row to the table, you will not have to set the value in the id column for the added row since most tables can do that for you.
"
94,Are there any other commonly used SQL commands?,"Get Help,Git",,7,"
Question
In the context of this lesson, are there any other commonly used SQL commands?
Answer
The SQL commands covered in this lesson are probably the most common ones you will encounter or need to use when working with tables. Other available commands are more situational and not as commonly used.
One such command is DROP TABLE, which you can use to permanently remove a table from a database. Deleting tables is generally not a frequent occurrence, so you might only use this once in a while. Other commands, such as ANALYZE, which is used to obtain statistics about a table, are also not as common and you might only use them in certain situations.
For a full list of all the commands provided by SQLite, which is used in the Codecademy courses, you can check out the official documentation.
","
On which websiite i can check ofifcial documentation of SQlite?

https://www.sqlite.org/docs.html
but you should be able to find that using google? projects like sqlite have there own website (which should be easy to find), from there there is often a link to the documentation

Yes, but keeping the documentation within the faqs is the whole point of faqs. You probably could google the answer to this question as well…

DROP TABLE may be quite frequently used if we create a new table in JavaScript, as exemplified in this lesson on Node-SQLite.

Here are various commonly used SQL commands: https://hackr.io/blog/sql-commands
And this is a very exhaustive SQL cheatsheet: https://hackr.io/blog/sql-cheat-sheet

Link to the list of SQL Commands is attached here which is an article of Codecademy:
https://www.codecademy.com/articles/sql-commands
"
95,FAQ: Why Learn SQL? - Analyzing User Churn,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Analyzing User Churn” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Analyze Data with SQL
FAQs on the exercise Analyzing User Churn


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
For lesson 4, Analyzing User Churn.


When getting “churn_rate”, why can’t we simplified the syntax by using the existing strings that we just named early like below? Instead of typing out the whole thing?
ROUND(100.0 * ‘march_cancellations’ / ‘enrollments’) AS churn_rate


Some lessons say we should use ’ after AS to tag the names. but the example didn’t. Should we use ’ or not?



How do we learn how to answer this question? What recommendations would you make to Codecademy based on Catherine’s analysis?   The churn rate was 25% but I do not know what recommendation to make to help codecademy from the analysis.
"
96,FAQ: First- and Last-Touch Attribution - First versus Last,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “First versus Last” exercise from the lesson “First- and Last-Touch Attribution”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise First versus Last


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
97,FAQ: Queries - Distinct,"Get Help,Git",,8,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Distinct” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Distinct


 Can we apply DISTINCT to a SELECT query with multiple columns?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
You should explain which “Nails” of the three is showed after doing this query “SELECT DISTINCT tools
FROM inventory;”. I think it’s the first.

3 posts were split to a new topic: After selecting distinct values how do you sort the result, largest to smallest, alphabetically, etc?

How can I order the results of the DISTINCT command whether ASC or DESC?

In the “Distinct” exercise, sometimes we see some NULL values in the output. How could that be explained? Isn’t the DISTINCT argument supposed to display only the already existing values that are unique?

Great question! Quote from the SQLite documentation:

SQLite was modified to work the same as Oracle, PostgreSQL, and DB2. This involved making NULLs indistinct for the purposes of the SELECT DISTINCT statement and for the UNION operator in a SELECT. NULLs are still distinct in a UNIQUE column. This seems somewhat arbitrary, but the desire to be compatible with other engines outweighed that objection.

This means that SELECT DISTINCT treats NULL like any other value - it is allowed, but duplicates will be removed.
To learn more about how the SQLite handles NULL values please refer to -> NULL Handling in SQLite Versus Other Database Engines.

Using ORDER BY clause 




 fjcn97:

You should explain which “Nails” of the three is showed after doing this query SELECT DISTINCT tools FROM inventory;


The whole idea of DISTINCT is that it does not matter. These are duplicated values.
"
98,"FAQ: Date, Number, and String Functions - Strings","Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Strings” exercise from the lesson “Date, Number, and String Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Strings


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
How do you type that vertical line symbol?
I had to resort to copying and pasting it from the exercise.
"
99,FAQ: Usage Funnels - What is a Funnel?,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “What is a Funnel?” exercise from the lesson “Usage Funnels”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise What is a Funnel?


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
100,FAQ: Subqueries - Table Transformation,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Table Transformation” exercise from the lesson “Subqueries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Table Transformation


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
101,FAQ: Common Metrics - ARPU 2,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “ARPU 2” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise ARPU 2


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
102,FAQ: Queries - Introduction,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Introduction


What types of data can SQLite databases store?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
let say I have array like this [‘myname’, ‘hobby’, 23] and I want to use that to on VALUES ( …) to fill some database , is that possible ? and not change the 23 to be string , and must be number
but how about If we have many kinds of values and keys are diffirent ?? I do love to know if that possible or no to make that array to put on values without change the typeof that value and must be same like DATA TYPE of columns we create
"
103,FAQ: Usage Funnels - A/B Tests Results,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “A/B Tests Results” exercise from the lesson “Usage Funnels”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise A/B Tests Results


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
104,FAQ: Queries - Order By,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Order By” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Order By


 In SQL, can we apply ORDER BY with multiple columns?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
In what case do we need to specify ASC explicitly? If it’s the default, we never need it, do we?

You wouldn’t need to, I don’t believe, in a standard SQL query, but I suppose one might use it if the query were written in function in a language like Python or JavaScript where the ORDER BY direction [ASC or DESC] might be dependent on some condition.
"
105,FAQ: Conditional Aggregates - SUM(CASE WHEN ),"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “SUM(CASE WHEN )” exercise from the lesson “Conditional Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise SUM(CASE WHEN )


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I would like to have a row printed out only when the distance of the airline being worked with is not zero.  I’ve tried:
FROM flights  where sum>0
FROM flights where total_united_flight_distance>0
FROM flights where sum(CASE WHEN carrier = ‘UA’ THEN distance ELSE 0 END)>0
nothing is working.
any ideas?
"
106,FAQ: Set Operations - Except,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Except” exercise from the lesson “Set Operations”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Except


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
107,FAQ: Conditional Aggregates - Generalizations,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Generalizations” exercise from the lesson “Conditional Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Generalizations


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
108,FAQ: Set Operations - Generalizations,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Generalizations” exercise from the lesson “Set Operations”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Generalizations


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
109,FAQ: Set Operations - Union,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Union” exercise from the lesson “Set Operations”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Union


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
It might be helpful to add a column to each of the tables so you can see where each brand came from, either the legacy table or the new table

SELECT brand, ‘l’ as ‘table_source’ FROM legacy_products
UNION
SELECT brand, ‘n’ as ‘table_source’ FROM new_products;

this gets the data
Query Results





brand
table_source





l



n


!it Jeans
n


12XLShop Inc.
l


1826
n





"
110,FAQ: Why Learn SQL? - Exploring Data with SQL,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Exploring Data with SQL” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Analyze Data with SQL
FAQs on the exercise Exploring Data with SQL


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
111,FAQ: Set Operations - Intersect,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Intersect” exercise from the lesson “Set Operations”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Intersect


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I typed in the exact answer to this lesson and yet it still came up being incorrect.

Hmm, you can also do this as an inner join (I know intersect is cleaner, but still):
SELECT DISTINCT new_products.category FROM new_products
JOIN legacy_products
ON new_products.category = legacy_products.category
ORDER BY new_products.category;

"
112,FAQ: Queries - And,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “And” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise And


 Is the AND used in BETWEEN the same as the AND operator used between multiple conditions?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
While doing this exercise I was able to use…
AND genre IS ‘horror’;
instead of
AND genre = ‘horror’;
Are those interchangable?
"
113,FAQ: Languages for Web Development - What is SQL?,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “What is SQL?” exercise from the lesson “Languages for Web Development”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Code Foundations
FAQs on the exercise What is SQL?


What are some other useful things that SQL lets us do?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi this might be a stupid question, but I was wondering why now the SQL code is all written in capital letters?
Why this: SELECT * FROM users;
And not this: select * from users;
I tried both in the online text editor and they both work but will this also work in the real world?
"
114,"FAQ: Date, Number, and String Functions - Numbers II","Get Help,Git",,7,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Numbers II” exercise from the lesson “Date, Number, and String Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Numbers II


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
https://www.codecademy.com/courses/sql-table-transformation/lessons/date-number-string-functions/exercises/numbers-ii?action=resume_content_item
For this problem, is the MAX or MIN times a combination of the cook_time and cool-down_time, or is it whichever one is highest or lowest? How come the MAX function gives a number of 5 for id 2, and for MIN function gives a number of 33 for id 2? What is this actually telling us here?
I got the answer correct, but do not understand what the result is actually telling us. Thanks

How can we find out MAX value from 2 tables added by UNION?
this doesn’t work:
SELECT MAX(SELECT cook_time FROM baked_goods
UNION
SELECT cool_down_time FROM baked_goods)
FROM baked_goods;



What you point out is correct. MAX should just give the highest value of the two and MIN the lowest. This is not the case when id=2 as you notice; also for  id = 13 or id = 20 as we see at the results. I really cannot explain it, is seems so illogical!

I noticed something odd when looking again at the database scema in particular the structure of the baked_goods table.
The values of cook_time and cool_down_time are defined to take “text” format instead of “integer” as I would expect since we are dealing with numbers.
Maybe that is why the results we are commenting are unusual, because the code calculates MIN & MAX comparing not numbers but words/letters (strings).
So, I remembered  from Python lessons , the concept of “lexicographical order”. I suppose this is related to all the above I mention.
I hope, someone more expert , would confirm that or give us his/her own explanation for the unusual results.

I finally had to just look at the solution because I was getting fed up with what should be an easy section.  The official solution is not correct because the time fields for bake_time and cool_down_time are text and not integers and are being compared by lexicographic order.
This entire section feels very poorly designed and tested compared to most of the rest of the SQL content.  This is a big reason why I’m on the fence about a paid codecademy subscription, I don’t really want to subscribe if the content quality varies this widely.

Hi,
Using this code, we can find the MAX or MIN of the two input columns:
SELECT id, MAX(cook_time, cool_down_time)
FROM baked_goods
GROUP BY 1
ORDER BY 1
LIMIT 10;

Essentially it checks if SELECT cook_time or SELECT cool_down_time is higher. Is there a way to actually stipulate whether or not something is cook_time or cool_down_time? The code that the exercise uses essentially shoves it all into a same column without noting from which column the value originally comes. I would say that that is the most vital information when making such a comparison.
Thanks,
-T
"
115,FAQ: Why Learn SQL? - Creating Usage Funnels,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Creating Usage Funnels” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Creating Usage Funnels


How can we find out the percentage of users who went from browse to purchase?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why isn’t the full table name typed out? In the example code just the single letter ‘c’ is used for the ‘checkout’ table. If I have multiple tables that start with the letter ‘c’ will I have a problem?
SELECT ROUND(
100.0 * COUNT(DISTINCT c.user_id) /
COUNT(DISTINCT b.user_id)
) AS browse_to_checkout_percent,
ROUND(
100.0 * COUNT(DISTINCT p.user_id) /
COUNT(DISTINCT c.user_id)
) AS checkout_to_purchase_percent
FROM browse b
LEFT JOIN checkout c
ON b.user_id = c.user_id
LEFT JOIN purchase p
ON c.user_id = p.user_id;
"
116,FAQ: Advanced Aggregates - Daily Count 2,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Daily Count 2” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Daily Count 2


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Is count(1) the same as count(*)?

@fjcn97 it seems to accept my code when I use ‘*’ in place of ‘1,’ so yeah I assume they are equivalent here. Anyone else want to weigh in?

Bit late but I found this explanations on stackoverflow (note that these are not from SQLite):


stackoverflow.com






What is the difference between count(0), count(1).. and count(*) in mySQL/SQL?


mysql, sql


  asked by
  
  
    Dhruv
  
  on 04:33PM - 17 Aug 13 UTC








mssqltips.com



SQL Server COUNT() Function Performance Comparison
This tip will explain the differences between the following COUNT function varieties: COUNT(*) vs. COUNT(1) vs. COUNT(column_name) to determine if there is a performance difference.







stackoverflow.com






Count(*) vs Count(1) - SQL Server


sql, sql-server, performance


  
  answered by
  
    gbn
  
  on 10:36AM - 03 Aug 09 UTC






They seem to return the same results, however most of the discussion as to the difference is in how SQL handles the query and how this impacts performance (could be legacy stuff as well as the language is around for decades): COUNT(0/1/‘whatever’) retrieves 0/1/‘whatever’ per record and then counts those, which does essentially the same as COUNT(*) does.
Bottom line seems to prefer COUNT(*) unless you’re explicitly excluding NULL values from row counts, i.e. COUNT(column_name).
-T
"
117,FAQ: Advanced Aggregates - Product Sum 2,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Product Sum 2” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Product Sum 2


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
hello to everybody,
i need heipl. can someone tell  me, why in the second values in select we don’t need to specify the name. How do we get this percentage grouped by name?
the select quere uses only (sum(amount_paid)/(select sum(amount_paid) from order_items)*100.
for me it semms like every answer sould be 100.
sorry i can’t get it
many thanks in advice
zoia

Zoia,
I am just getting to this exercise, but the way I understand it only the numerator is affected by the GROUP BY.
In that way the numerator is the sum by item (name) and the denominator is the grand total, which includes all the items.

In the main query we calculate the revenue per name. This is then divided by the subquery, which simply sums up the total revenue across the rows. This is then multiplied by 100.0 to get a percentage.
You’re essentially combining these two tables:
SELECT name, SUM(amount_paid)
FROM order_items
GROUP BY 1
ORDER BY 2 DESC;
--> revenue per food item


SELECT SUM(amount_paid)
FROM order_items;
--> total revenue across food items (178311.5)

By combining them in one query:
SELECT name, ROUND(SUM(amount_paid)/(SELECT sum(amount_paid) FROM order_items)*100, 2)
FROM order_items
GROUP BY 1
ORDER BY 2 DESC;

The first query SELECT name, SUM(amount_paid) becomes the numerator, and SELECT sum(amount_paid) FROM order_items becomes the denominator. Within the ROUND() function, this division is multiplied by 100 to get a percentage, and then limited to two decimals. Swapping out the subquery for the value it calculates, 178311.5, would return the same table.
In regards to your questions 'Every answer should be 100 ': this would be the case if the denominator has the same value, however using the subquery makes sure that the denominator is the total revenue. Using the full query SELECT name, ROUND(SUM(amount_paid)/SUM(amount_paid)*100, 2) would accomplish that, however it wouldn’t be very useful in this context.
-T
"
118,FAQ: Queries - Like II,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Like II” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Like II


 When using SQL LIKE operators, how do we search for patterns containing the actual characters “%” or “_”?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Is there a way to search for patterns with a specific case. For example, “The” as opposed of “the”.
In RegEx we can use (?i).
Is it possible with SQL?
"
119,FAQ: Common Metrics - 1 Day Retention,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “1 Day Retention” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise 1 Day Retention


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
120,FAQ: Conditional Aggregates - Combining aggregates II,"Get Help,Git",,11,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Combining aggregates II” exercise from the lesson “Conditional Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Combining aggregates II


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why does adding a couple of extra brackets here make a difference to how to query runs? Does SQL not follow BODMAS?
SELECT state,
100.0*
(
SUM(CASE WHEN elevation >= 2000
THEN 1 ELSE 0
END)/COUNT(*)
)
AS percentage_high_elevation_airports
FROM airports
GROUP BY state
;

What is the 'Then 1"" mean in the case when logic?
SELECT state, 100.0 * sum(CASE WHEN elevation >= 2000 THEN 1 ELSE 0 END) /
count(*)  as percentage_high_elevation_airports
FROM airports
GROUP BY state;

What we want to calculate is the ratio of airports with the elevation above 2000 to all the airports in each state. So once there is an airport with the elevation above 2000, we mark it as “1”, and the sum of “1” is the No. of airports with the elevation above 2000. COUNT(*) can help us calculate the No. of all airport in each state, so after dividing these two numbers, we can get the percentage we want.

I had a similar problem as the OP, aidlo.
If I put all the conditional aggregate in parenthesis next to the multiplier like so:
100.0* ( SUM(CASE …) / COUNT(*) )
…it doesn’t calculate correctly.
However, if I put parenthesis around the multiplier and the first aggregate like so:
( 100.0 * sum(CASE…) ) / count(*)
…then this works correctly.
This doesn’t make sense to me. The math should be the same, but the results are completely different. Is this a Codecademy issue or a formatting thing with SQL as a whole?
Or have I completely forgotten the order of mathematical operations? I feel confident that the first example should work because I’m dividing the two numbers to get a decimal and then multiplying everything by 100 to convert it to percentage.

This is a bs exercise… Indeed, no matters what you have typed, if you didn’t remove the unnecessary paranthesses, no result would come…

The issue here is as so:
if we run this:
SELECT 100.03/7, 100.0(3/7);
we can see that with no brackets we get 42.85, and with brackets, we get 0.
This happens when dividing integer values with some programming languages (and probably why they use 100.0 here and not 100).
The difference is in the calculation of 3/7, which includes only integer values, and returns just the 0 (when it should be 0.42) and the remainder is disregarded.
That’s why we are getting zeros where there should be other values (for AK for example).

Can someone help me on why the following does not work?
SELECT state, (100.0 * count(CASE WHEN elevation >= 2000 THEN 1 ELSE IS NULL END) / count(*))  as percentage_high_elevation_airports FROM airports GROUP BY state;
Thank you!

Your format looked right to me, so I was a bit stumped by this at first, but I did some experimentation. it looks like you want “ELSE NULL” not “ELSE IS NULL.” You’re also missing a parenthesis before “COUNT” compared to the “right” answer I found (using the SUM function instead) for this problem, but it seems to run fine even without that parenthesis. So I think the issue just was using “IS NULL” instead of just “NULL.”

Why doesn’t the below code work? I used COUNT instead of SUM as it was shown in the previous example to count 1’s.
SELECT state,100.0*(
COUNT(case when elevation>=2000 then 1 else 0)/
COUNT(*)) as percentage_high_elevation_airports from airports
group by state;

So why do we use (100(SUM(CASE)/COUNT(*) AS*
instead of
(100(SUM(CASE)/SUM(ELEVATION) AS*
"
121,FAQ: Queries - Like I,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Like I” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Like I


 Can we apply the LIKE operator to values other than TEXT ?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
does the result different between using capital letters and small letters?
how can i get different results?

If I want to search for names in a table that don’t start with a certain letter (i.e B), than how should i use the LIKE operator?
I tried this:
select * from table
where name like != ‘B%’ ;
Doesn’t work!

I think you can try WHERE name NOT LIKE ‘B%’;
"
122,FAQ: Advanced Aggregates - Meal Sums,"Get Help,Git",,2,"

This community-built FAQ covers the “Meal Sums” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Meal Sums


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Assuming I would like to calcute the share of kale purchases to total purchases for each day - is there a way to simplify my code below? I was stuck getting a second column for the conditional sum for the kale smoothies purchased - is there a way to display these 3 (or 4 if we want the share too) colums: date, sum total, sum kale smoothie without having to create a temporary table? Thanks in advance!!
WITH total AS(
SELECT date (ordered_at) AS ‘date_total’, SUM(amount_paid) AS ‘paid_total’
FROM orders
LEFT JOIN order_items
ON orders.id =order_items.order_id
GROUP BY 1
),
kale AS (
SElECT date(ordered_at) AS ‘date_kale’, SUM(amount_paid) AS ‘paid_kale’
FROM orders
LEFT JOIN order_items
ON orders.id =order_items.order_id
WHERE name = ‘kale-smoothie’
GROUP BY 1
)
SELECT date_total, paid_total, paid_kale, paid_kale/paid_total AS ‘ratio’
FROM total
LEFT JOIN kale
ON total.date_total = kale.date_kale;
"
123,FAQ: Learn Node SQLite - Opening A Database,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Opening A Database” exercise from the lesson “Learn Node SQLite”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
Learn Node-SQLite
FAQs on the exercise Opening A Database


If we have a db.sqlite file already in the directory, do we need to create a new database file?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
124,FAQ: Code Challenge: Multiple Tables - Code Challenge 2,"Get Help,Git",,3,"

This community-built FAQ covers the “Code Challenge 2” exercise from the lesson “Code Challenge: Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Code Challenge 2


Does the result change if we JOIN tables in a different order?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I have been using the following query to join “select … from plays, songs where plays.song_id=songs.id”. How is this any different from the query provided in hint which is “select … from plays join songs on plays.song_id=songs.id”? And if it is not, why can’t I move forward?

Hello,
I have the same question as the reply above me, but it hadn’t been answered, and it’s been awhile so I thought I would ask again with some formatted code.
 SELECT plays.user_id AS 'user',
  plays.play_date AS 'date', 
  songs.title AS 'song name'
FROM plays
JOIN songs
  ON plays.song_id = songs.id
;

and
 SELECT plays.user_id AS 'user',
  plays.play_date AS 'date', 
  songs.title AS 'song name'
FROM plays
JOIN songs
  WHERE plays.song_id = songs.id
;

Both seem to get the correct answer.
"
125,FAQ: Calculating Churn - Calculating Churn Review,"Get Help,Git",,7,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Calculating Churn Review” exercise from the lesson “Calculating Churn”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Calculating Churn Review


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi,
I was wondering how to create an is_active status by department(segment).  I was able to make the is_active, is canceled columns but cant figure out how to do it by department without making the whole thing crash.
Thanks!

I noticed at the end of this lesson that I got slightly different churn rates for each month than what the final solution has. The reason turned out to be that we defined is_active differently.
The solution suggests
case
  when subscription_start < first_day
    and (subscription_end > first_day
     or subscription_end is null)
    then 1
    else 0
  end as is_active

while I used
case
  when subscription_start < first_day
    and (subscription_end >= first_day
     or subscription_end is null)
    then 1
    else 0
  end as is_active

Should we not include subscription_end = first_day to count as active at the start of the month? Considering is_cancelled is defined by
case
  when subscription_end between first_day and last_day
    then 1
    else 0
  end as is_cancelled

Would this not mean that a person cancelling their subscription on the first day of the month will be registered as a cancellation in the month (is_cancelled = 1), but not active (is_active = 0)? That makes very little logical sense to me., but perhaps I am missing something?

Why does at the top of the code you use a WITH statement, but then creating additional temporary tables you don’t use it?

It seems that SQL only requires you use the WITH statement once if you’re creating a series of ‘temporary tables’ separated by commas - maybe it’s for convenience or simplicity sake? It would be slightly cumbersome to type 'WITH table1 AS (…), WITH table2 AS (…), WITH table3 AS (…), etc. rather than just going WITH table1 AS (…), table 2 AS (…)

I’ve calculated the churn rate as 1.0* canceled/ 1.0* active, the answer is the same as the one given by the system, however it is not valid, why?

Hi team,
Just have a small question about the churn rate formula itself.
In the beginning of the lecture, the churn rate is basically the number of subscribers that cancelled divided by the total  number of subscriber in a period.
But, towards the end of the project, the monthly churn rate is calculated by ‘cancel divided by active’. As per my understanding, active subscribers do not represent the total subscribers in that period. Instead, it represents some portion of the total subscribers.
Is this logic correct? if no, why not?
Regards,
Jim
"
126,FAQ: Usage Funnels - Build a Funnel From a Single Table,"Get Help,Git",,11,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Build a Funnel From a Single Table” exercise from the lesson “Usage Funnels”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Build a Funnel From a Single Table


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why doesn’t this code work?
I don’t see a typo, and the only difference is the order of my selections:
 SELECT COUNT(DISTINCT user_id), question_text
 FROM survey_responses
 GROUP BY 2;

This actually returns the identical result, it just doesn’t receive credit.  The interface returned an error message saying to enter the appropriate code and didn’t give me the [Next] box.

In this exercise, why is it necessary to count DISTINCT user?

Maybe one user answered questions twice?

I don’t understand why are we grouping and ordering by 1.

For this exercise,
Instead of using suggestion below;
SELECT question_text,
   COUNT(DISTINCT user_id)
FROM survey_responses
GROUP BY 1;

Can I write query like this instead?
SELECT DISTINCT user_id,count(*),question_text

 FROM survey_responses

 GROUP BY question_text;


I must admit I had a peek at the solution before asking this question. Why does the query show entries in the question_text column entered in a random order? Also, how is it that the result shows the question_text column in a descending order despite not using the ORDER BY clause?

well totally the same. I check the code again and again just doesnt work.
actually i have same problems many times, even you get the same code it just gives you an X.

It’s been a while since I’ve done the lesson.  Can you post a link to it?

In my code i used … COUNT(user_id) but the hint/answer code used COUNT(DISTINCT user_id), what is the point of DISTINCT in an aggregate query?  (both codes give the same answer)

Both approaches return the same information in this instance.  This may not always be the case, particularly if user_id isn’t the index (PRIMARY KEY) for the database.
"
127,FAQ: Conditional Aggregates - COUNT(CASE WHEN ),"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “COUNT(CASE WHEN )” exercise from the lesson “Conditional Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise COUNT(CASE WHEN )


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I think that this exercise can also be done using subqueries as in the first lesson:
SELECT state,
   (SELECT COUNT(*)
   FROM airports AS a
   WHERE a.elevation < 1000
   AND a.state = airports.state) AS count_low_elevation_airports
FROM airports
GROUP BY state;

Is there any reason to prefer using COUNT(CASE WHEN) over this?

Your code doesn’t count blank states

Could anyone explain me the logic of the query ?  how does “state” and counted elevations connect if we don’t use ‘where’ statement ?
"
128,FAQ: Code Challenge: Multiple Tables - Code Challenge 3,"Get Help,Git",,8,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Code Challenge 3” exercise from the lesson “Code Challenge: Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Code Challenge 3


Why isn’t there a field for whether a user is premium in the users table?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Since all the users in the premium users table are premium users, shouldn’t there be a special “join” we can use to only show these? so we wouldn’t need the “where” condition? like an inner join for example?
I just tried it and it worked, as in has the same count of user ids as the initial answer: 100.
this is my code:
SELECT COUNT(id)
from users
INNER JOIN premium_users
ON users.id = premium_users.user_id;
haha, nevermind, I thought we only wanted premium users but instead we want the free users 
but if we only wanted premium users we could do an inner join…

Hi all
How does the
SELECT users.id,
users.first_name
FROM users
LEFT JOIN premium_users
ON users.id = premium_users.user_id
WHERE premium_users.user_id IS NULL
finds NULL users when:
SELECT *
FROM users
;
SELECT *
FROM premium_users
;
does not show any NULL rows in user_id from the table/data.
?!

Kind of feel this code challenge is too hand-holding, would be more challenging (and would cement previously taught topics) if there was less guides on how to bring up prompted question. What I mean by hand holding:
"" Use a LEFT JOIN to combine users and premium_users and select id from users .
The column id in users should match the column user_id in premium_users .
Use a WHERE clause to limit the results to users where premium_users.user_id IS NULL . This will remove premium users and leave you with only free users.""
Less of this would be better in my opinion.

There’s too much information in the instructions, It’s just too easy to just write what the instructions say.
“Which users  aren’t  premium users?” and ""select  id  from  users"" is enough information. The rest could be provided as a hint.

I would also love a clarification on how the solution code matches IS NULL.
Solution Code:
SELECT users.id
FROM users
LEFT JOIN premium_users
	ON users.id = premium_users.user_id
WHERE premium_users.user_id IS NULL;

Thanks in advance!
P.S. Just like other learners mention in this particular thread, there is to much information in the instructions. A more realistic scenario would be that we get a visual representation of what is expected, then we should try to produce it.

I believe after left join is performed it will create empty cells in the query result (premium_users.user_id) .
You could use this code to visualize this.
SELECT *
FROM users
LEFT JOIN premium_users
ON users.id = premium_users.user_id
LIMIT 10;
The main problem i find with the way join concepts are taught here is lack of explanation of exact logic behind different kind of joints. I always have to google  for more visual examples to grasp these concepts.

Agreed, the first line should have sufficed. The rest should have been hints.
"
129,FAQ: First- and Last-Touch Attribution - Introduction,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction” exercise from the lesson “First- and Last-Touch Attribution”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Introduction


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
why do you use commas in sql sometimes and sometimes we don’t need them,  what i am basically asking if when do you need commas and when do you not need them thanks for all the feedback in advance.

where is utm medium in the sequel table row thanks for all the feedback in advance.
"
130,FAQ: Aggregate Functions - Introduction,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction” exercise from the lesson “Aggregate Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Introduction


In general, what is a function?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why are both the database schema for the fake_apps table and the startups table displayed in the side pane, when I did a select statement only from fake_apps?

Got more useful data out of SELECT SCHEMA();
That query returns what was asked, Table Columns, and very little else.
The supposed “correct” answer billboards the output pane leaving the schema many many scrolls down.
Sure, sure, one can pull the column names from the first line of output, but why all the excess data?
My method returns what we are looking for and nothing else.
Or are we not supposed to know about built-in functions yet? I’ve done little more than dabble in SQL for awhile now, still, that’s the first command I use whenever I come in possession of a new database. How is it structured. Look at the schema. You get the columns and the data type for each.
"
131,FAQ: Queries - Select,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Select” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Select


 When writing SQL queries, do the commands, like SELECT and FROM have to be all capital letters?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why is my mention of year  in my code in blue? is year a key word/function in SQL? Or  is it a bug?
My code was exactly as described in the "" Hint"" section, but is given incorrect.
"
132,FAQ: Why Learn SQL? - Begin Your Journey,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Begin Your Journey” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Analyze Data with SQL
FAQs on the exercise Begin Your Journey


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Can anyone tell me why part of the pages table is cut off. I attempted all sizes, i tried refreshing the webpage, and i tried using the sliders to change the size of the tutorial text/the code widow/and the output window, it shows more of the output text window of the code, as i decrease the size of the code.
However, even making the print size like 50-75%, and the code size of the window shrunk to maybe 1/6 of the page width, the output table still gets cut off? I am operating on windows 10 at 1080p resolution.
Thanks

Hi @design6692609664! You should report a bug to the CC team so they will know
"
133,FAQ: Multiple Tables - Inner Joins,"Get Help,Git",,9,"

This community-built FAQ covers the “Inner Joins” exercise from the lesson “Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Inner Joins


 When we write a JOIN query, does the order we specify the tables matter?
For example,
FROM table1 JOIN table2
vs
FROM table2 JOIN table1

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Um hello, So each time i ‘join’ 2 tables with or without an ON statement, after compilation, i get to find out that the 2 tables will literary get glued together(as in one before the other all at once) which doesn’t seem right to me.
Could i be wrong? I would  a reply.

In this exercise, I was told to combine 2 tables.
There are 2 tables in total, one is “newspaper” one is “online” if when I combine them and I use the COUNT function and I get 50 people in total. Does that mean that there are 50 people that their subscription includes newspaper and articles online?
(This is my code):
SELECT COUNT(*) 
FROM newspaper 
JOIN online 
	ON newspaper.id = 
  online.id;


Yes, it only joins the rows that have identical value in the id column, which means that the people in the result are the people that use online and printed subscription.
I also looked at all three tables and compared them to see this better, using this code:
SELECT *
FROM newspaper
JOIN online
ON newspaper.id= online.id
ORDER BY first_name
LIMIT 10;
SELECT *
FROM newspaper
ORDER BY first_name ASC
LIMIT 10;
SELECT *
FROM online
ORDER BY first_name ASC
LIMIT 10;

I ran the #3 task in this module and I keep getting this in red:
Did you remember to count all rows of online joined with newspaper?
not too sure what is going on.
I deleted it and copied the “hint” and reran and same results.
please let me know what to do…

the results are showing the results 50
so not too sure what I am missing to “next”

I figured it out I left a couple queries on and it seem to confuse it.

Hey Codeacademy team,
When you guys ask us to answer questions about tables, please give us the entire context of the table so we can reference it. It’s incredible frustrating to not even know what the table layouts are when being presented new data. GIVE US THE TABLE TO REFERENCE SOMEWHERE. Thanks!

try use the following it should work( next user/coming users)
select count(*) from newspaper;
select count(*) from online;
SELECT count (*)
FROM newspaper JOIN online
ON newspaper.id = online.id;
"
134,FAQ: Usage Funnels - Survey Result,"Get Help,Git",,6,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Survey Result” exercise from the lesson “Usage Funnels”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Survey Result


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
How would we calculate the percentages using SQL?
The text says “We could use SQL to calculate the percent change between each question, but…”.
The truth is i’m not clear on how to do maths and calculations like that in SQL. Can anyone give advice on how you’d use SQL to do this?

how do you send sql data to a spreadsheet?

I have the same question, this would be great to have covered here for the people who are interested in doing this calculation in SQL.

To calculate the percent change between questions, you simply divided the number of responses from that question by the number of responses in the previous question and multiply by 100%.
This code is not elegant but gets the job done.
CREATE TABLE denom (
counts NUMBER,
offcounts NUMBER
);
INSERT INTO denom (counts,offcounts)
VALUES (500,500);
INSERT INTO denom (counts,offcounts)
VALUES (475,500);
INSERT INTO denom (counts,offcounts)
VALUES (380,475);
INSERT INTO denom (counts,offcounts)
VALUES (361,380);
INSERT INTO denom (counts,offcounts)
VALUES (270,361);
#Here I create a table with the counts column, and an offset count column to account for the first question during the arithmetic argument below.  counts is multiplied by 1.0 to switch out of integer division.
SELECT (counts*1.0/offcounts)*100 AS “Percent change between questions”
FROM denom;

This method works for the aforementioned problem, but would not scale in larger datasets because of the manual input of table creation.  I suppose an alternative method exists involving joining tables, but I ran into issues trying to join tables based on aggregated counts.
"
135,FAQ: Multiple Tables - With,"Get Help,Git",,18,"

This community-built FAQ covers the “With” exercise from the lesson “Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise With


 Can we use WITH for more than one nested query in SQL?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I’m having a hard time understanding this. I’ve forgotten what some of the commands do. Can someone go through line-by-line and explain the answer?

Hi,
Here is my best attempt at making the query/exercise easier to understand.

I put the query challenge aside for a min and consider the request in plain English.

The marketing department wants to know more about customers. Specifically, they want to know how many magazines each customer subscribes to AND they their name.


In the database there is a table called ‘orders’ and ‘customers’. We need to bring them together to get the info needed for marketing.

First a query is run against ‘orders’ to determine how many subscriptions each customer_id has. We get the number of subscriptions per customer id. below is the ‘orders’ query:



SELECT customer_id,

COUNT(subscription_id) AS 'subscriptions'

FROM orders

GROUP BY customer_id;

Though we have the complete number subscriptions to customers, we only have the customer id’s, not names. Marketing wants names.
Using WITH we can store the results of the above query as an alias that can be used with another query to obtain the customer names. To do this we take the above (from orders) and nest it within a WITH clause and assign its result to an alias called ‘previous_query’
WITH previous_query’ AS (SELECT customer_id,

COUNT(subscription_id) AS 'subscriptions'

FROM orders

GROUP BY customer_id)

With above we now have subscriptions per customer id stuffed into an alias called ‘previous_query’.
Next we move onto getting the customer names. To do this we perform a JOIN on ‘customers’ table. To do this we use FROM to source our alias result for customer_id and then JOIN it with ‘customers’ table to get customer names.
WITH previous_query AS (SELECT customer_id,

COUNT(subscription_id) AS 'subscriptions'

FROM orders

GROUP BY customer_id)

SELECT customers.customer_name,

previous_query.subscriptions

FROM previous_query

JOIN customers

ON previous_query.customer_id = customers.customer_id;

In order to get the specific customer names we JOINED ON alias ‘previous_query.subscriptions’ and ‘customers.customer_name’. Doing so provides a name match result for each customer id.
I know it’s a bit much, but I recommend reading the exercise and queries a few times to at least get the general idea.
Hope this helped
Robert

Thanks for your detailed explanation. It has helped me to understand the task better.




 djkentuckyham:

ROM previous_quer


Thanks! Your explanation is much clearer.

Is there another way to get customer names and count of subscriptions - without using WITH. @djkentuckyham
select customers.customer_name, count (orders.subscription_id) as ‘subscriptions’
from customers
join orders
on customers.customer_id = orders.customer_id
group by customers.customer_name;

This part through me off because it one point it says to use “previous results” then the next it saying “previous query” Is that a mistake in the text?

I think previous_results is specific to the example and previous_query is specific to the instructions. It had me confused too. I think the idea that they were trying to convey is that you can use any name as an alias for WITH use_any_name_here AS ().

Thank you so much, this helped alot!

practicing different combinations of WITH iwrote this:
WITH countorder
AS (SELECT customer_id, COUNT(subscription_id) AS ‘counter’ FROM orders GROUP BY customer_id)
SELECT *
FROM customers
JOIN countorder
ON customers.customer_id = countorder.customer_id;
But in the resulting query I get two customer_id columns can someone explain why?

In the project of “Multiple tables with REBU”, I realized that WITH clause exists only during a single statement. This means I cannot claim it at top of the file then use it later on.
It would be great to mention this in the WITH section.
Please correct me if I’m wrong.
Following is the observation from the REBU project. Done in browser.
WITH mergeTable as(
 SELECT * FROM table1
 UNION
 SELECT * FROM table2
)
SELECT * FROM mergeTable; -- this will show me the mergeTable.

WITH mergeTable as(
 SELECT * FROM table1
 UNION
 SELECT * FROM table2
)

SELECT * FROM otherTable
--do something with it
;

SELECT * FROM mergeTable; -- this will NOT show me the mergeTable

Isn’t the purpose of WITH is to save lives and let the developer claim it at top of the file, then use it later on with a peace in mind?

I think these have confused me more because we switch between two data sets with similar data. Newspapers/Online and Orders/Customers are very similar, but for instance the former has first and last names separate, but the latter has the first and last name under the same column.

Why use the WITH clause in this situation? The second method is shorter, is there a downside?


gist.github.com


https://gist.github.com/codecademydev/beac7e2430e28a5813c19abb40f78301
test.sqlite
WITH previous_query AS (
  SELECT customer_id, COUNT(subscription_id) AS 'subscriptions'
  FROM orders
  GROUP BY customer_id)
SELECT customers.customer_name, previous_query.subscriptions
FROM previous_query
JOIN customers
  ON previous_query.customer_id = customers.customer_id;
  
  SELECT customers.customer_name, COUNT(orders.subscription_id) AS 'Subscriptions'
This file has been truncated. show original








Heya,
I’m a bit confused about the following section:
SELECT customers.customer_name, previous_query.subscriptions
FROM previous_query
As far as I understand customers.customer_name is not part or previous_query and I wonder why we can select it FROM previous_query. How does that work?
Thanks 

Hey!
Remember that the query is better understood as a whole, context is important, so, consider that after the FROM previous_query comes the JOIN customers which is when the SELECT customers.customer_name, previous_query.subscriptions makes sense because you are ‘selecting’ the columns resulting from the two joint tables previous_query & customers.
SELECT customers.customer_name, 
previous_query.subscriptions
FROM previous_query
JOIN customers
…

Now, you may be wondering about the order in which you’re stating the SELECT clause on each column, but that will only change the order in which each column is displayed, meaning that under this context, there’s no difference between SELECT customers.customer_name, previous_query.subscriptions & SELECT previous_query.subscriptions, customers.customer_name neither there is a difference in result by doing FROM previous_query JOIN customers or FROM customer JOIN previous_query.
Note, nonetheless, the last example holds true as long as we’re not talking about a LEFT JOIN.
Hope this helps a little bit.

I cannot seem to get the NEXT button to highlight.
I think I have the answer correct below but I cannot move forward.  Help?!
WITH previous_query AS (
SELECT customer_id,
COUNT(subscription_id) AS ‘subscriptions’
FROM orders
GROUP BY customer_id)
SELECT customers.customer_name,
previous_query.subscriptions
FROM previous_query
JOIN customers
ON customers.customer_id = previous_query.customer_id;

I’m wondering why the result of the WITH exercise doesn’t include customers that do not subscribe to any newspaper. I think this query would make more sense to me since it includes those customers.

WITH previous_query AS (
SELECT customer_id,
COUNT(subscription_id) AS ‘subscriptions’
FROM orders
GROUP BY customer_id
)
SELECT customers.customer_name, previous_query.subscriptions
FROM customers
LEFT JOIN previous_query
ON previous_query.customer_id = customers.customer_id;

I changed the JOIN to LEFT JOIN and also swapped the previous_query with customers.
Also, I think this can be an alternate solution to the question.

SELECT c.customer_name,
COUNT(o.subscription_id) AS ‘subscriptions’
FROM customers c LEFT JOIN orders o ON o.customer_id = c.customer_id
GROUP BY o.customer_id;


Hi,
I understood well the WITH command. My doubt here is that in the “final”  SELECT.
The hint says to put customers.customer_id FROM previous_query and then it goes the join, with the other table.
Since the select is from previous_query, shouldn’t it jeopardize/lag the system, since previous_query doesn’t have a customer_id column ? or because of the JOIN clause, I can put anything in the select that when retrieving, FROM will also include the table that is being selected after JOIN?
"
136,FAQ: First- and Last-Touch Attribution - Last Touch Example,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Last Touch Example” exercise from the lesson “First- and Last-Touch Attribution”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Last Touch Example


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hey, when we say LAST TOUCH, does it mean the last time someone touched the site, or does it mean it was indeed THE LAST time someone visited the website and never turned back??
"
137,FAQ: Usage Funnels - Build a Funnel from Multiple Tables 2,"Get Help,Git",,30,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Build a Funnel from Multiple Tables 2” exercise from the lesson “Usage Funnels”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Build a Funnel from Multiple Tables 2


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Can you really refer to an alias before the AS statement has created the alias?
select
    distinct b.browse_date,
    b.user_id,
    c.user_id is not null as 'is_checkout',
    p.user_id is not null as 'is_purchased'
from browse as 'b'
left join checkout as 'c'
on c.user_id = b.user_id
left join purchase as 'p'
on p.user_id = c.user_id
limit 50;


I’m not a SQL professional, but it seems that yes, you can.
I’t looks like that SQL, the first, creates the table (using aliases) and the second, selects solumns from the table.

Would you tell me, please, the meaning of using DISTINCT in the code below (when we create sales funnel).
And did it apply to all the columns after the expression or to the only?
Thank you.
 SELECT DISTINCT b.browse_date, 
b.user_id, c.user_id IS NOT NULL AS 'is_checkout', 
p.user_id IS NOT NULL AS 'is_purchase' 
 FROM browse AS 'b'
 LEFT JOIN checkout AS 'c'
 ON b.user_id = c.user_id
 LEFT JOIN purchase AS 'p'
 ON c.user_id = p.user_id
 LIMIT 50;


I had the same question, a little searching turned up the answer:
https://www.sqlitetutorial.net/sqlite-select-distinct

[T]he  DISTINCT  clause must appear immediately after the  SELECT  keyword.
… [Y]ou place a column or a list of columns after the  DISTINCT  keyword. If you use one column, SQLite uses values in that column to evaluate the duplicate. [If] you use multiple columns, SQLite uses the combination of values in these columns to evaluate the duplicate.

So in our case, DISTINCT is looking for unique combinations of the 4 columns, not just unique user_id’s.

jpritcha, thank you.
I understood, that all DISTINCT is applied on all the columns.
The question I still have, why do we use DISTINCT at all?

If the same user, on the same day, got to the same point in the funnel that they did earlier that day there would be a duplicate row in the table which we wouldn’t count using DISTINCT.

Thank you very much. I got it.

c.user_id IS NOT NULL AS ‘is_checkout’,
CAN WE USE THE SYNTAX 'CASE’INSTEAD OF THE ABOVE?AND HOW?THANK YOU!

Hi,
The exercise suggests joining c to b, then p to c, as below:
SELECT *
FROM browse AS ‘b’
LEFT JOIN checkout AS ‘c’
ON c.user_id = b.user_id
LEFT JOIN purchase AS ‘p’
ON p.user_id = c.user_id
LIMIT 50;
Does the choice of tables to join and the order you join them in matter here? I imagine it does, as it’s a LEFT JOIN so you might lose rows if you’re not careful, but in that case why not just join both c and p to b directly?
SELECT *
FROM browse AS ‘b’
LEFT JOIN checkout AS ‘c’
ON c.user_id = b.user_id
LEFT JOIN purchase AS ‘p’
ON b.user_id = p.user_id
LIMIT 50;
Thanks,

Also, what is the purpose of the ‘DISTINCT’ in the second part (copied below)?
Thanks,
""But we don’t want all of these columns in the result!
Instead of selecting all columns using  * , let’s select these four:

DISTINCT b.browse_date
b.user_id
c.user_id IS NOT NULL AS 'is_checkout'
p.user_id IS NOT NULL AS 'is_purchase'

Edit your query so that you select these columns.""

The purpose of using DISTINCT is that you don’t get duplicates of the data for a given set of columns you are selecting. So if two rows have the same values for all four columns you have selected, DISTINCT would make sure that the combination of values is only displayed once instead of multiple times.

I have a question on the query since a customer may have multiple items in the same day, wouldn’t the query in the join lead to many to many join. Shouldn’t we create the final table at a cm11 level, item_id and browse_date. This will give us the information for that specific item, what was the customer journey of the customer like and at which stage did he pause.

Thanks for the explanation !

hi, do you know if using group by instead of distinct would have give the same results?
my query is this:
SELECT
b.browse_date,
b.user_id,
CASE WHEN c.user_id IS NOT NULL THEN ‘True’ ELSE ‘False’ END AS ‘is_checkout’,
CASE WHEN p.user_id IS NOT NULL THEN ‘True’ ELSE ‘False’ END AS ‘is_purchase’
FROM browse b
LEFT JOIN checkout c
ON b.user_id = c.user_id
LEFT JOIN purchase p
ON c.user_id = p.user_id
GROUP BY 1,2
LIMIT 50;

what about a group by?
would have been correct as well?
my query is:
SELECT
b.browse_date,
b.user_id,
CASE WHEN c.user_id IS NOT NULL THEN ‘True’ ELSE ‘False’ END AS ‘is_checkout’,
CASE WHEN p.user_id IS NOT NULL THEN ‘True’ ELSE ‘False’ END AS ‘is_purchase’
FROM browse b
LEFT JOIN checkout c
ON b.user_id = c.user_id
LEFT JOIN purchase p
ON c.user_id = p.user_id
GROUP BY 1,2
LIMIT 50;

How does b.browse_date, b.user_id, c.user_id, p.user_id in this query work if these aren’t defined until the Alias?
SELECT DISTINCT b.browse_date, b.user_id, c.user_id IS NOT NULL AS ‘is_checkout’, p.user_id IS NOT NULL AS ‘is_purchase’
FROM browse AS ‘b’
LEFT JOIN checkout AS ‘c’
ON c.user_id = b.user_id
LEFT JOIN purchase AS ‘p’
ON p.user_id = c.user_id
LIMIT 50;

To my understanding SQL doesn’t run line by line like some coding languages do, but instead runs all at once after it validates. Thus, defining the aliases after they’re referenced doesn’t matter (i.e. “p.user_id” as “p” can be used in the select statement before we’ve created an alias to define purchase as p).

I’m confused as to why the ‘is_checkout’ and  ‘is_purchase’ output binary (1 or 0) and don’t show a user_id string instead?

whoops. Step 8 answered my own question… IS NOT NULL is a true/false function.
"
138,FAQ: Calculating Churn - Multiple Month: Cross Join Months and Users,"Get Help,Git",,13,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Multiple Month: Cross Join Months and Users” exercise from the lesson “Calculating Churn”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Multiple Month: Cross Join Months and Users


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I’m clearly missing something extremely basic here - can anyone help out!  Thanks
WITH months AS
(SELECT
‘2017-01-01’ as first_day,
‘2017-01-31’ as last_day
UNION
SELECT
‘2017-02-01’ as first_day,
‘2017-02-28’ as last_day
UNION
SELECT
‘2017-03-01’ as first_day,
‘2017-03-31’ as last_day
),
– Add temporary cross_join definition here
temptable AS (
SELECT *
FROM subscriptions
CROSS JOIN months
)
LIMIT 10;

Doh, forgot to SELECT at the end…  Also requires LIMIT 100 to pass.
WITH months AS
(SELECT
‘2017-01-01’ as first_day,
‘2017-01-31’ as last_day
UNION
SELECT
‘2017-02-01’ as first_day,
‘2017-02-28’ as last_day
UNION
SELECT
‘2017-03-01’ as first_day,
‘2017-03-31’ as last_day
),
– Add temporary cross_join definition here
cross_join AS (
SELECT *
FROM subscriptions
CROSS JOIN months
)
SELECT * FROM cross_join
LIMIT 100;

Does the table order matter for CROSS JOIN operator?
tried
(SELECT *
FROM months
CROSS JOIN subscriptions)
but it validated my answer as wrong although the query result was correct.

Hi Codecademy, I was very frustrated with this exercise.
Answer had little to no relevance with the instructions given.
Review:
This exercise gets a 2/5 for me. Instructions were clear yet did not address the actions I needed to take concretely to achieve the answer. I did get prompts, but did not get me any closer to the answer. Answer I only understand now in hindsight. I hope I will be able to keep progressing in the rest of the lessons.
Instructions:
The workspace contains the months temporary table from the previous exercise.
Create a cross_join temporary table that is a CROSS JOIN of subscriptions and months .
We’ve added:
SELECT * FROM cross_join LIMIT 100;
at the bottom of this exercise so you can visualize the temporary table you create.
It should SELECT all the columns from the temporary table.
My input: I was trying to achieve a join and a rename in separate steps and also to fulfill the prompt of seeing I needed to create a table with 2 categories for months (first_day and last_day) followed by all of the 3 for subscriptions (which were not in key words)
WITH months AS
(SELECT
‘2017-01-01’ as first_day,
‘2017-01-31’ as last_day
UNION
SELECT
‘2017-02-01’ as first_day,
‘2017-02-28’ as last_day
UNION
SELECT
‘2017-03-01’ as first_day,
‘2017-03-31’ as last_day
),
SELECT months.first_day, months.last_day
FROM months AS cross_join
CROSS JOIN subscriptions,
SELECT *
FROM cross_join
LIMIT 100;
Exercise did not show how to rename produced temporary tables let alone give pertinent syntax in the hint:
The pattern for creating a temporary table using a CROSS JOIN is:
desired_temp_table AS (SELECT * FROM table1 CROSS JOIN table2)
The answer did not use the format of the hint. The hint was useless and frustrating. I did not learn from the hint and the hint did not help me get the answer. I spent 1 hour on this post and the exercise, trying my utmost to understand the concepts, mechanics, and not default to the solution. I am sure there will be more for me to say overtime. I’ll continue to move forward.

Can somebody please tell me why CROSS JOIN is done ! THANKS

Hi there, it basically change the places of columns, it maybe ok for you but this exercise specifically want it to be in this order. I did the same mistake, and I hope  I could help.

why did we not use a WITH statement on temptable
WITH temptable AS

Hello, i believe we use cross join, as there is a possibility that there could be multiple results for a subscription id. I.e) hypothetically, if the range of time used was a year it is possible that a user or subscription_id could be active or cancelled multiple times.  Using cross join will give all possible combinations. However based on the data set used in this exercise this situation would not appear.

I think I’m missing something here.

The code to create a temp table by doing CROSS JOIN is below, but why we didn’t do it
WITH cross_join AS ().

The correct code is:
cross_join AS
(SELECT * FROM months
CROSS JOIN subscriptions
)
SELECT *
FROM cross_join
LIMIT 100;
I didn’t get when to use WITH and when not to use it while creating a temp table. Can someone help pls?

Yes, just swap the positions of months and subscriptions and you’ll be fine.

The following code worked for me:
WITH months AS
(SELECT
‘2017-01-01’ as first_day,
‘2017-01-31’ as last_day
UNION
SELECT
‘2017-02-01’ as first_day,
‘2017-02-28’ as last_day
UNION
SELECT
‘2017-03-01’ as first_day,
‘2017-03-31’ as last_day
),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months)
SELECT *
FROM cross_join
LIMIT 100;
Happy coding!

The reason you only need to use WITH once is because there is a comma underneath the definition of the first temp table. You are still able to keep defining other temp tables under that one WITH.
"
139,FAQ: Why Learn SQL? - Creating Usage Funnels,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Creating Usage Funnels” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Analyze Data with SQL
FAQs on the exercise Creating Usage Funnels


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I feel like this query is missing AS in
FROM browse b
LEFT JOIN checkout c
ON b.user_id = c.user_id
LEFT JOIN purchase p
Should not it be
FROM browse AS b
LEFT JOIN checkout AS c
ON b.user_id = c.user_id
LEFT JOIN purchase AS p
?
UPD: the query also worked when I inserted AS

It would be interested to see an e.g. of RD as a ref.
"
140,FAQ: Aggregate Functions - Group By II,"Get Help,Git",,6,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Group By II” exercise from the lesson “Aggregate Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Group By II


Do column references have to follow the order the columns are listed in the SELECT ?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I did not understand why I need the round to be on the “group by” and on the “order by”. I made some tests without it and the return was the same.
Examples:
select round(price), count(name)
from fake_apps
group by price
order by price;

same result as:
select round(price), count(name)
from fake_apps
group by 1
order by 1;

Anyone? thx 

If, for legibility, it’s nice to capitalize statements (SELECT, ROUND, etc.), why would one want to replace a column reference with a number?  Doesn’t this make it harder to read?
e.g.
SELECT category,
price,
AVG(downloads)
FROM fake_apps
GROUP BY category, price;
becomes
SELECT category,
price,
AVG(downloads)
FROM fake_apps
GROUP BY 1, 2;

gafanhoto1990, I believe that the round in “GROUP BY ROUND(imdb_rating)” is not to round but to refer to the exact same name of that column.
As an alternative, you could add “AS ‘Avg.’” in the select, in which case you would use only “GROUP BY ‘Avg.’”.
But I do have a question:
How to ROUND to the tens or hundreds. I understand that rounding to the 1st decimal would be ROUND(column,1), but why I cannot use ROUND(column,-1) to round to the tens?

I want to make sure I understand this statement correctly:
SELECT category, 
   price,
   AVG(downloads)
FROM fake_apps
GROUP BY category, price;

The part I’m unsure about is the AVG(downloads). If I delete the GROUP BY from this statement, the result is just one line:




category
price
AVG(downloads)




News
0.0
16613.8




That makes sense about the AVG(downloads) value, it’s the average of all the apps in the table - but why, of all the prices, is 0.0 displayed, and why “News” of all the categories?
With the GROUP BY, the value for AVG(downloads) changes: when grouped by 1, 2, all the price groups of all categories are shown. The AVG refers to each price group out of each category. When grouped just by 1, the value changes to reflect the average of each category.

What I’m concerned about is how the syntax works: GROUP BY actually seems to change what the argument of AVG() is. Does anyone else feel this is a weird kind of a jump?
Wouldn’t it make more sense to have price groups as arguments of AVG()?

Came over from the Code Challenge 5, where it seems quite a few of us tried to combine HAVING function with column reference and a sum function. Tought this lesson section may have an answer.
Question: Can column references only be used in GROUP BYs?
… because this does not work:
SELECT user_id, SUM(watch_duration_in_minutes) AS ‘duration’
FROM watch_history
GROUP BY  1
HAVING  2 > 400;
"
141,FAQ: Multiple Tables - Union,"Get Help,Git",,5,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Union” exercise from the lesson “Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Union


 What happens if the tables we perform the UNION operator on have duplicate rows?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
About the condition with the same amount of columns in the tables: what if we only choose 2 columns per table to union but the original tables don’t have the same amount of columns, will it work?
let’s say the table newspaper has 5 columns and the table subscription has 3. if i only pick 2 per table for the union is that possible?
like:
select id, first_name
from newspaper
union
select id, start_month
from subscription;

Can someone please clarify for me the following: Are all of the queries in this exercise just that “queries” or do some actually change the tables, columns or data? Such as cross join or union, etc…

About the rules-

Tables must have the same number of columns.
The columns must have the same data types in the same order as the first table.

Both tables must also have the same column names?

What if you want to ‘Union’ multiple tables, considering all tables meet requirements, do you have to type the ‘union’ title of each table?
"
142,FAQ: First- and Last-Touch Attribution - The Attribution Query II,"Get Help,Git",,13,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “The Attribution Query II” exercise from the lesson “First- and Last-Touch Attribution”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise The Attribution Query II


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I’m a little confused why we need to join on both the user_id and the timestamp columns. I’ve only ever seen an inner join with just one column specified. Would one not return the same results?

Nevermind! I see now that the timestamp column joined helps return the last touch timestamp. Otherwise we’re getting every timestamp, including first touch. This would render the purpose of the query useless!

What is the difference between :
SELECT user_id, MIN(timestamp) AS ‘first_touch_at’, UTM_source
FROM page_visits
GROUP BY 1;
AND
WITH first_touch AS (
SELECT user_id,
MIN(timestamp) AS ‘first_touch_at’
FROM page_visits
GROUP BY user_id)
SELECT ft.user_id,
ft.first_touch_at,
pv.utm_source
FROM first_touch AS ‘ft’
JOIN page_visits AS ‘pv’
ON ft.user_id = pv.user_id
AND ft.first_touch_at = pv.timestamp;
I have the same result and the first one is more efficient.
Thank you,
Thibaut

came here for this exact question

me too! I really don’t see the need for a join here as we’re selecting everything from page visits anyways…

I’m really having rouble understanding this part of the lesson. Been stuck on it for 2 days now.
Can someone help to explain this part of the lesson? Specifically the part where we are joining the table’s. Couldn’t we build from the previous exercise query whereby:
SELECT user_id, MAX(timestamp) AS ‘last_touch_at’
FROM page_visits
GROUP BY user_id;
by just selecting the utm_source column? So therefore, the new query would be:
SELECT user_id, MAX(timestamp) AS ‘last_touch_at’, utm_source
FROM page_visits
GROUP BY user_id;
This query would give us all user id’s last touch and their respective marketing channel (utm_source). From here we can use the WITH query to ‘store’ them in a temporary table. Am I correct to say this? Is my understanding too naive?

One would certainly think. I believe the purpose is to introduce us to joining tables on multiple columns and not necessarily
to do this efficiently. This reminds me of the lesson on churn rate where you could just use the count command to get the number of columns then divide that by the number of active users. Instead they had you make like 5 temporary tables.

I think that JOIN is useful in case you want to find, for instance, first and last touch source for the same user id in ONE table.
When I try querying a single touch - last or first UTM source, it works.
SELECT user_id,
  MAX(timestamp) AS 'last_touch_at',
  utm_source
FROM page_visits
GROUP BY 1;

But, if I try querying within the same code both the first and last for the same user id - it doesn’t.
Both of these don’t work:
SELECT user_id,
  MIN(timestamp) AS 'first_touch_at',
  utm_source,
  MAX(timestamp) AS 'last_touch_at',
  utm_source
FROM page_visits
GROUP BY 1;

SELECT user_id,
  MIN(timestamp) AS 'first_touch_at',
  MAX(timestamp) AS 'last_touch_at',
  CASE
    WHEN MIN(timestamp) THEN utm_source
  END AS 'first_source',
  CASE
    WHEN MAX(timestamp) THEN utm_source
  END AS 'last_source'
FROM page_visits
GROUP BY 1;

The only way I was able to achieve what I talked about above is this:
WITH ft AS (
SELECT user_id AS 'uid',
  MIN(timestamp) AS 'first_ts',
  utm_source AS 'first_utm'
FROM page_visits
GROUP BY 1
),

lt AS (
SELECT user_id AS 'uid',
  MAX(timestamp) AS 'last_ts',
  utm_source 'last_utm'
FROM page_visits
GROUP BY 1
)

SELECT ft.uid,
  ft.first_ts,
  lt.last_ts,
  ft.first_utm,
  lt.last_utm
FROM ft
JOIN lt
  ON ft.uid = lt.uid;


I don’t know why it doesn’t work for you, but for me this code worked as good as code with JOIN
SELECT user_id,
  MIN(timestamp) AS 'first_touch_at',
  utm_source,
  MAX(timestamp) AS 'last_touch_at',
  utm_source
FROM page_visits
GROUP BY 1;


I checked this. Your MIN/MAX timestamps work, but unfortunately the utm_source is not accurate with this method. It outputs the same value for both MIN and MAX.
I still feel like there’s a way to do this in a more straightforward query than one that uses a JOIN, but I can’t quite get my head around it.

This seems to have worked for me as an easier way…
SELECT user_id,
MIN(timestamp) AS ‘first_touch_at’,
utm_campaign
FROM page_visits
GROUP BY user_id
UNION
SELECT user_id,
MAX(timestamp) AS ‘last_touch_at’,
utm_campaign
FROM page_visits
GROUP BY user_id
LIMIT 20;


Hey all,
I think I’ve figured out everyone’s big question here.
There seems to be a lot of confusion as to why they did not just include utm_campaign in the first query. The reason was not obvious to me at first, but there is a good reason for it that plays out in the “Cool T-Shirts” project that follows. Since that project is not automagically corrected by this website, you may end up messing it up (and never understanding this subtle point) if you go into that project with a false assumption. So listen up! 
Here is the reason: Not every campaign contains “first touches”. By design, some of the campaigns are ALWAYS going to start with a second touch for the user and, therefore, should be excluded from any “first touch” results. Ex: a campaign that emails users who abandoned their carts. This campaign would NEVER contain any first touches, because it is, by design, a follow-up to a previous visit.
If you add the utm_campaign column to that first query, you will force the query to include this abandoned cart campaign. This creates a lot of bad records (ie: ones that make it appear as if the user’s second visit contained a “first touch”.) These false “first touches” will corrupt your data further down the line.
Happy programming!

"
143,FAQ: Usage Funnels - Results,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Results” exercise from the lesson “Usage Funnels”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Results


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Can someone explain to me what this code means from the Funnels section of the Data Science Path: SELECT DISTINCT q.user_id,
h.user_id IS NOT NULL AS ‘is_home_try_on’,
h.number_of_pairs,
p.user_id IS NOT NULL AS ‘is_purchase’
FROM quiz q
LEFT JOIN home_try_on h
ON q.user_id = h.user_id
LEFT JOIN purchase p
ON p.user_id = q.user_id
LIMIT 10;
Thanks
"
144,FAQ: Set Operations - Union All,"Get Help,Git",,18,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Union All” exercise from the lesson “Set Operations”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Union All


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I understand that the query is counting the number of order items in the union of the two tables, but I’m struggling to get what the “as a” means at the end:
SELECT count(*) FROM (
SELECT id, sale_price FROM order_items
UNION ALL
SELECT id, sale_price FROM order_items_historic) as a;
I saw something similar in earlier lessons, but couldn’t find an explanation there either.
Any help would be appreciated!
Thanks

The ‘as a’ is an SQL alias or ‘nickname’ of sorts that’s used to give a table, a column, or a subquery a temporary name that will be used in the query. The name allows for one to easily understand and define which table or subquery is being referenced by each column. It can also be used to give a column a name different from the one provided in the table so that the results reflect that alias, which is sometimes useful when the orginal column name in a table isn’t clear or readable.

It didn’t like my answer even though it is correct.
I just don’t do the copy/paste/tweak routine to arrive at the solution.
I didn’t use the alias ‘a’ and my columns were in different order but the output is the same…very disappointing.
I wasted 5 frustrating minutes trying to figure out what was wrong with my query.

I found the question confusing.  It sounded to me like they wanted the average sale price over the two tables, but what they actually want is the average sell price per item in the two tables.




 gregrappliedcc.com:

ng. It sounded to me like they wanted the average sale price over the two tables, but what they actually want is the average sell price per item in the two tables.


I agree, this was annoying.

My solution gave an error, (red x stared at me like i did everything wrong), but when i checked the solution from codecademy, i couldn’t find any differences?
My solution:
select avg(a.sale_price)
, a.id
from (
select sale_price
, id
from order_items
union all
select sale_price
, id
from order_items_historic
) as a
group by 2
Codecamedy solution:
SELECT id,
avg(a.sale_price)
FROM (
SELECT id,
sale_price
FROM order_items
UNION ALL
SELECT id
, sale_price
FROM order_items_historic) AS a
GROUP BY 1;
What did i do wrong?
Grtz!

You selected a.id and it should be just id. I am not sure about the Group by function though.

My solution:
select avg(a.sale_price)
, a.id  --> there it is indeed!
Thanks 

i think you forget putting semi- colon at end of the code
try to put it




 m.khalil:

putting


No, we must use group by function because we using an aggregate function AVG(a.sale_price)

Completely unclear instruction about necessarity of ID column usage in outer query and inintial conditions tells nothing about clause group by. It’s frustrated me a lot.

Hi, I don’t quite understand the use of the items inside red rectangles in the picture below. Could someone please explain? Thank you very much.


I know this thread started a while ago, but I tried a combination of things from this thread, because I initially had the same idea, except missing some subtleties like the ‘GROUP BY 1’. However I got it, in case people of the future want something else.
SELECT id, AVG(sale_price) FROM (
SELECT id, sale_price FROM order_items
UNION ALL
SELECT id, sale_price FROM order_items_historic) as a
GROUP BY 1;

You are right. I cannot understand what is the meaning of finding the avg price per product (id).
I added another parameter to the query ,in the first line, the sale_price , in order to make things more clear to to me.
However, the result was again confusing, sale_price and avg(a.sale_price) are equal for every row i.e. for every id. So, this shows again that average price per id doesn’t make sense.

I suppose that maybe it would be more logical if we used in the exercise the parameter order_id instead of id. As long as every single order may have either one or more than one products (id), in that case the concept of average sale price would make sense.

The term “subquery” is not defined before the question is asked:
“Using the same pattern, utilize a subquery to find the average sale price over both  order_items  and  order_items_historic  tables.”

life saver - I was trying to figure out why my query wasn’t working and it was because I didn’t realize they wanted it PER ITEM.
Appreciate your response!
"
145,FAQ: Calculating Churn - Multiple Month: Create Months Temporary Table,"Get Help,Git",,20,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Multiple Month: Create Months Temporary Table” exercise from the lesson “Calculating Churn”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Multiple Month: Create Months Temporary Table


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
FYI I had trouble with getting the answer to the first question:
""1.
We will be using the months as a temporary table (using  WITH ) in the churn calculation.
Create the  months  temporary table using  WITH  and  SELECT  everything from it so that you can see the structure.
We need a table for January, February, and March of 2017.""
I found the concept to be pretty simply, but was stumped for awhile. Turns out it was adding a few commas that I didn’t need. I thought I would convey that here:
WITH months AS (
SELECT STATEMENT (no comma at the end)
UNION
SELECT STATEMENT (no comma at the end)
UNION
SELECT STATEMENT (no comma at the end)
)
SELECT *
FROM months;

Hi, In slide 4 I was getting an error message reading something like “be sure your table has 3 months in it” when I displayed my code. Once I decided to let Codecademy give me their answer, I realized the only difference was that my February row’s “last_day” was 31 while the answer’s was 28.
Suggesting that a reminder about the number of days in Feb may be a better hint for that issue. Thanks for the new path!

Dude thank you lol I was struggling all over forgetting the length of the month of February. I think the most valuable lesson here for a new programmer is that paying attention to detail needs to be brought to a WHOLE other level. Thanks for the tip mckinley

hi, why we not use CREATE TABLE and INSERT INTO? for new table?

with months as
(
SELECT
‘2017-01-01’ AS first_day,
‘2017-01-31’ AS last_day
union
SELECT
‘2017-02-01’ AS first_day,
‘2017-02-28’ AS last_day
union
SELECT
‘2017-03-01’ AS first_day,
‘2017-03-31’ AS last_day)
SELECT *
FROM months;


hi, why we not use CREATE TABLE and INSERT INTO? for new table?

with months as
(
SELECT
‘2017-01-01’ AS first_day,
‘2017-01-31’ AS last_day
union
SELECT
‘2017-02-01’ AS first_day,
‘2017-02-28’ AS last_day
union
SELECT
‘2017-03-01’ AS first_day,
‘2017-03-31’ AS last_day)
SELECT *
FROM months;


I was thinking to split rows into months columns with something like:
select * 
from subscriptions
group by strftime('%Y %m', subscription_start);

can you tell me why it does not work as expected ?

What am I doing wrong with my code here?
with months as
(
SELECT
‘2017-01-01’ AS first_day,
‘2017-01-31’ AS last_day
union
SELECT
‘2017-02-01’ AS first_day,
‘2017-02-28’ AS last_day
union
SELECT
‘2017-03-01’ AS first_day,
‘2017-03-31’ AS last_day
)
SELECT *
FROM months;

your quotation marks

awesome thanks for the feedback

Wow thank you! I totally didn’t realise this for a long time.

Hi there, I think that’s because we need temporary table and ‘WITH’ is the way.

Is there another way to create a temporary table from scratch? To me the UNION statement does not seem that convenient.
Is there a possibility to include the INSERT INTO Statement into a temporary table created by the WITH statement? I`ve tried to…emphasis on tried   what am I doing wrong?
WITH months AS(
SELECT ‘2017-01-01’ AS first_day, ‘2017-01-31’ AS last_day
INSERT INTO months (first_day, last_day)
VALUES
(‘2017-02-01’,‘2017-02-28’),
(‘2017-03-01’,‘2017-03-31’)
)
SELECT * FROM months;

What about February 29? 

Agree this is probably the most important lesson to be learned.  All the times I got stuck it turned out to be because of some tiny error, like a . instead of _ or an upper case instead of lower case letter. In the last exercise with the glasses I got stuck with writing if number_of_pairs = “3” and couldn’t make the code work for an eternity, until I realised in the table it said “3 pairs”. Sigh!

A bit confused about about the aliasing in this exercise, why do we write ( SELECT “2017-02-01” AS first_day ) here, but (SELECT COUNT(*) AS “First step”), in other SELECT queries? To be clearer, why do we need the quotation marks sometimes when aliasing and sometimes not?

I think i got the bit to setup the dates, ok but incase i leap year i had 29 days in february not too worry, this is the solution you need months at the top with months as and then
SELECT * select all table columns with the star
FROM months; from months using the semi colon to end statement…
Thanks
Ian
WITH months as
(SELECT
‘2017-01-01’ as first_day,
‘2017-01-31’ as last_day
UNION
SELECT
‘2017-02-01’ as first_day,
‘2017-02-28’ as last_day
UNION
SELECT
‘2017-03-01’ as first_day,
‘2017-03-31’ as last_day
)
SELECT *
FROM months; semi colon

I was wondering this too but it is only in a leap year , so my guess is too make it simpler it is 28 days thanks
Ian

my guess is this is not a temporary table that you are making , you are trying to select year and month from all columns from the subscriptions table imho
thanks
Ian
I think this is what you mean

CORRECT SOLUTION:
WITH months as(
SELECT
‘2017-01-01’ AS first_day,
‘2017-01-31’ AS last_day
UNION
SELECT
‘2017-02-01’ AS first_day,
‘2017-02-28’ AS last_day
UNION
SELECT
‘2017-03-01’ AS first_day,
‘2017-03-31’ AS last_day
)
SELECT * FROM months;
"
146,FAQ: Calculating Churn - Multiple Month: Determine Active Status,"Get Help,Git",,30,"

This community-built FAQ covers the “Multiple Month: Determine Active Status” exercise from the lesson “Calculating Churn”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Multiple Month: Determine Active Status


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I’m stuck on this - I can’t move on because a solution isn’t provided and the hint isn’t helping me. Could I get some help on this?

Parenthesis placement is a make-or-break on this one. Did you get any help yet @bytecoder05612?

I usually get confused with the ‘’ outside words, e.g. ‘user_id’. I don’t have a clear strategy for when to use them. I mean, sometimes they seemed to be used in table names, some other times in column names, and always on value names. Is there a rule for when to use them, or this is something that has to be memorized? Thank you.

Hi there !
Sorry @c930586 I can’t answer your question.
I have another one though, I am really confuse with the use of “WITH”.
Can someone explain when/where to use it ?
It seems that I’ve tried to place it too much in that exercise…   Thanks for your help !




 net5706162549:

use of “WITH”.


Well, this thread is not too active…sorry to see its just us…lol…
FWIW, so far anyway, I have seen where the “WITH” is used to make what Codecademy calls a “Temporary Table”.  (let me ask for a URL to docs on this?  Googling brings too many false pos’s)
So, something like:
WITH months AS
From online:
The SQL WITH clause allows you to give a sub-query block a name which can be referenced in several places within the main SQL query.
I am here to ask what columns you see at the end of the previous step.
My cross join resulted in columns:
id
subscription_start
subscription_end
first_day
last_day
==> I see only three columns at this step.  Why?

No, I see a column “month” on this Step…but you will note that that is not one of the 5 columns that I did get…and I ran the solution to confirm.
I will poke about…

Thank you for the explanation of WITH ! I think I got it now !
I am not sure what is your problem…
At the end of "" 5.Multiple Month: Cross Join Months and Users"", you get the 5 columns
id
subscription_start
subscription_end
first_day
last_day
At the end of “6. Multiple Month: Determine Active Status”, you should get 3 columns
id
month
is_active
Is it not what you get ?

Good news on the With Front.  :0)  I did get past my issue.   I have not had a bigger problem than a missing character…but I complained about something in error:  my code was not “failing silently”…it was “succeeding silently”.  I left off the FROM and the code, I believe, runs without issue…it just does nothing.  So, watch for that too.
Honestly, all this SQL caught me off-guard, but it is quite cool.
I was, and am, expecting (and hoping ;0) to work with Python.
Good luck, and feel free to reach out.

On 6.) I was having the biggest issue troubleshooting. My problem involved the parentheses of my AND/OR statement.
WHEN (this < that)
AND (this > that)
OR (this = that)

Did not work. Instead, I had to use
WHEN (this < that)
AND (this > that 
OR this =that)

The code seemed to work fine both ways.

I was stucked here. If helps you, my error was the CASE statement:
I forgot that this column should be named at the end, like so:
CASE
WHEN (subscription_start < first_day)
AND (
subscription_end > first_day
OR subscription_end IS NULL
) THEN 1
ELSE 0
END as is_active
FROM cross_join
I was writing it at the beginning.

Hi, I’ve a question here about CASE statement:
status AS
(SELECT id,
first_day AS month,
CASE
WHEN (subscription_start < month) AND (subscription_end >= month OR subscription_end IS NULL) THEN 1
ELSE 0
END AS is_active
FROM cross_join
)
As you see, When I use ‘month’ in CASE statement , no result shows. But When I use 'first day ’ replace ‘month’, the result shows correct. I think both these should be correct.

I tried again. I replace ‘month’ as ‘first day’ at months table and use ‘month’ directly in status table. It worked. So it means in SELECT statement, CASE statement runs first relative to others.

I am stuck on the WITH clause. My understanding is:
WITH temp_table_name AS
(SELECT column_1 FROM table,
SELECT column_2 FROM table),
SELECT *
FROM temp_table_name;
Is this right?

I figured it out. My confusion was that were just adding “status” to the existing WITH clause. Also there should not be a comma at the end of the with clause before SELECT.




 chahn1138:

I see a column “month” on this Step…but you will note that that is not one of the 5 columns that I did get…


I’m having the same problem. The instructions tell me I should have 3 columns going into Step 6, but I have 5 columns. However, I was allowed to pass Step 5 with a correct answer, so I’m not sure where my mistake is?
(I made sure FROM statement is present.)

When you do your “status AS” statement, don’t forget to bring in id, first day AS month and then add in your CASE argument. This is what hung me up.
From there, I would use the < and > signs only this will give you a better return given we are using a modified result from the months table compared to before where we were using dates.

WITH months AS
(SELECT
‘2017-01-01’ as first_day,
‘2017-01-31’ as last_day
UNION
SELECT
‘2017-02-01’ as first_day,
‘2017-02-28’ as last_day
UNION
SELECT
‘2017-03-01’ as first_day,
‘2017-03-31’ as last_day
),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
– Add status temporary table here
status AS
(SELECT id, first_day,
CASE
WHEN (subscription_start < first_day) AND
( subscription_end > first_day
OR subscription_end IS NULL
) THEN 1
ELSE 0
END AS ‘is_active’
FROM cross_join)
SELECT *
FROM status
LIMIT 100;
Hope it helps. I was stuck on this for like 20 mins 

did you figure this out? I had the same thing as you but I keep getting a parenthesis error.

Idea why it doesn’t run?
WITH months AS
(SELECT
‘2017-01-01’ as first_day,
‘2017-01-31’ as last_day
UNION
SELECT
‘2017-02-01’ as first_day,
‘2017-02-28’ as last_day
UNION
SELECT
‘2017-03-01’ as first_day,
‘2017-03-31’ as last_day
),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS
(SELECT cross_join.id, cross_join.first_day AS month,
CASE
WHEN (subscription_start < first_day)
AND (
subscription_end > first_day
OR subscription_end IS NULL
) THEN 1
ELSE 0
END as is_active
)
SELECT *
FROM status
LIMIT 100;
"
147,FAQ: Subqueries - Non-Correlated Subqueries II,"Get Help,Git",,11,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Non-Correlated Subqueries II” exercise from the lesson “Subqueries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Non-Correlated Subqueries II


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
How is the airports table connected to the flights table?

SELECT * FROM flights
WHERE origin in (
	SELECT code FROM airports
  WHERE faa_region = 'ASO'
);

In this example, we use code to associate the flight with the airport.
Why does this code work only with code column and not other columns for example id?
I am trying to understand how is the relationship formed between the two tables

I have the exact same question.  I’m not sure how returning a “code” in the filter for the airports table links up with an “origin” from the flights table.  Any feedback would be much appreciated.
thank you

Guys, there is no relationship between two tables as it said in the chapter’s description:

A non-correlated subquery is a subquery that can be run independently of the outer query and as we saw, can be used to complete a multi-step transformation.

The subquery just gives us a list with appropriate codes which then are being processed by IN statement.
P.S.
The field flights.origin contains the same data as airports.code because they both probably get it from the third table that contains airport codes.

Ok, so if the text in flights.origin and airports.code is the same, I am no longer confused lol.  Is that what we’re getting at?
thanks for replying!!




 textninja33908:

flights.origin


But then shouldn’t it mentioned in the course? It’s very confusing.

I had the same question. But if airports.code and flights.origin have the same data, can’t be this done with a join?

Yes, it can be done with a join. I got the same result.
select * from flights f join
airports a on f.origin = a.code
where a.city = ‘LOS ANGELES’;
The JOIN query takes approximately 20 ms longer than the query with IN statement.

I’m wondering why “in”, within the following:
SELECT *
FROM flights
WHERE origin in (
  SELECT code
  FROM airports
  WHERE faa_region = ""ASO"");

… isn’t capitalized, like so:
SELECT *
FROM flights
WHERE origin IN (
  SELECT code
  FROM airports
  WHERE faa_region = ""ASO"");

I understand that the actual SQL isn’t case-sensitive, but it seems like it would make sense.

How do we determine the column name to be used with the SELECT statement for the nested query?
Why does not the query fetch any results when we use columns other than ‘code’? Why doesn’t ‘airports.id’ works in place of ‘code’?

I’ve read through the replies to this topic and it still makes no sense to me. The list of ‘code’ s is not found anywhere in the flights table. How are the 'code’s being used as a filter?
"
148,FAQ: Code Challenge: Queries - Code Challenge 5,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Code Challenge 5” exercise from the lesson “Code Challenge: Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
FAQs on the exercise Code Challenge 5


What if we are trying to match on a specific text length?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
What are some of the problems with using = instead of LIKE when using a wildcard?
I also tried this:

SELECT * FROM nomnom WHERE name = ‘%noodle%’;

… which didn’t return any results.
Could you please address some of the differences between = and LIKE?

I’m unsure why this does not work for this as it produces the same result as we’re looking strictly for name.
Select name
FROM nomnom
WHERE name LIKE ‘%noodle%’;

Hi,
I am working on this challenge (Code Challenge 5) and my general question is this:
Why do I have to type:
SELECT *
to query all the columns on my sheet when I am only looking for a name with the word “noodle” in it.
e.g. SELECT name
Shouldn’t I just query the name directly somehow?
Thank you in advance.
"
149,FAQ: Calculating Churn - Multiple Month: Sum Active and Canceled Users,"Get Help,Git",,8,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Multiple Month: Sum Active and Canceled Users” exercise from the lesson “Calculating Churn”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Multiple Month: Sum Active and Canceled Users


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi, since I have been having trouble with this User Churn-project, and so far have taken advantage of the answers provided by others, here’s the code that gave me the green light on this part of the exercise:
status_aggregate AS
(SELECT month, SUM(is_active), SUM (is_canceled)
FROM status
GROUP BY month)
Enjoy!

Thank you!!
I was stuck because I had placed GROUP BY at the very end of the query, like this
… (SELECT month, SUM(is_active) AS active,
SUM(is_canceled) AS canceled
FROM status)
SELECT *
FROM status_aggregate
GROUP BY month;

and it did not work. Any idea why exactly though… ? Cheers!


I did the same thing. Could anyone explain why the code doesn’t work when GROUP BY month; is instead placed at the very end of the query?

Hi, I also got a trouble at the beginning of the part of code that should be added
I don’t understand why it works if you write “status_aggregate AS” but not if you write “WHERE status_aggregate AS”. Anyone as an explanation ?

You should have already created aliases for the ‘active’ and ‘canceled’ users in your status_aggregate temporary table.
…
status_aggregate AS
(SELECT
month,
SUM(is_active) as ‘active’,
SUM(is_canceled) as ‘canceled’
FROM status
GROUP BY month)
SELECT month,
(1.0 * canceled / active) AS ‘churn_rate’
FROM status_aggregate;
This works. The table should look like this:
|month|churn_rate|
|2017-01-01|0.126811594202899|
|2017-02-01|0.124505928853755|
|2017-03-01|0.23688155922039|

Hi,
I have seen in several different Codecademy exercises the need to create a temporary table. In some situations this involves a WITH statement at the outset, but in the others the WITH is omitted, and the script just starts with something like:
temp_table name AS…
Please could someone explain the logic / rules behind when the WITH statement is used, and when it is not? Thanks.

Hi mre,
Are the exercises where the “WITH” is omitted when you are using multiple temp tables?  You only need to use “WITH” once in the query because you can keep adding temp tables with the use of a comma after the END statement.  Everything from the “temp_table AS …” and “END …,” executes as one block.  I hope that made sense.  
"
150,FAQ: Calculating Churn - Multiple Month: Churn Rate Calculation,"Get Help,Git",,45,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Multiple Month: Churn Rate Calculation” exercise from the lesson “Calculating Churn”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Multiple Month: Churn Rate Calculation


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
So I tried and tried to solve this one, and ultimately had to hit that dreaded “SOLUTION” button to see the answer. In case you’re like me and are determined to try to solve it on your own, here are some helpful hints to solve this one:


Keep this answer as short, simple and stripped down as possible. All of the past statement answers in this lesson were very long and wordy. This one is not.


Don’t forget to multiply by 1.0 to make this a float answer. The placement of where you put this 1.0 should be very strategic. Make sure you think about what part of this SELECT statement needs to be multiplied by 1.0!


I hope this helps someone!

I’m displaying here what was the buildup to calculating churn rate. For some reason the code won’t display it. I’ve checked many times with the video. Any help would be appreciated.
status_aggregate AS
(SELECT
SUM(is_active_87) AS sum_active_87,
SUM(is_active_30) AS sum_active_30,
SUM(is_canceled_87) AS sum_canceled_87,
SUM(is_canceled_30) AS sum_canceled_30
FROM status
GROUP BY month
) SELECT month,
1.0 * sum_canceled_87/sum_active_87 AS churn_rate_87,
1.0 * sum_canceled_30/sum_active_30 AS churn_rate_30
FROM status_aggregate;

Hi @duffmcgillicuddy,
Try this:
SELECT
month,
1.0 * SUM(sum_canceled_87) / SUM(sum_active_87) AS churn_87,
1.0 * SUM(sum_canceled_30) / SUM(sum_active_30) AS churn_30
FROM status_aggregate
GROUP BY month;

NEW QUESTION:
probably obvious, but why do these () break this solution?:
1.0 * (canceled/active) AS churn_rate
as opposed to the correct, working solution:
1.0 * canceled/active AS churn_rate
what am I forgetting, missing, etc, that makes my first solution all calculate to 0.00?

I have the same question. The () issue is what brought me to the thread. Does anyone have an answer yet?
I have the correct solution now, but would like to know why () breaks the solution.

This language is so vague.
Earlier in this lesson the code wouldn’t execute because my division sign was on its own line, here the code wouldn’t execute properly because my *1.0 calculation came after the division instead of before.
Yet there are no explanations for this anywhere in the material (let alone readily available elsewhere online), and no-one cares to actually address queries on the forums.
How important is this language anyway? I’m considering ditching it altogether for the time being.

I have the same doubt, what is the problem with the ()?

The reason why it doesn’t work is purely math and priority of calculations.
1.0 * (canceled/active) implies that you are going to first make the statement become 1.0 * (result)… so it will be to late to try to use 1.0, as it will multiply 1.0 * 0, for instance…
in the other scenario,  (1.0 * canceled/active), as there is no parenthesis between the operations, it will be executed in reading order: first 1.0 * canceled, then divide the result by active.
This has nothing to do with the language itself, it is just executing on the order that you requested.

I’ve replied a similar question about the  * 1.0 problem.
If you request the program to first divide, there will be no point in trying to multiply by 1.0, as the result will be already 0 anyway… the order of operations is important in these cases, and this is math related.
as for the other problems about the position of the division sign, don’t let that hold you back. there are lots of particularities (bugs) on most of the languages and after you face the problem, you will remember how they operate.
Answering your last question, I would suggest you to stick to the language and just understand that some problems like that always come along, no matter what language you choose… do it for you and you won’t regret 

Hey,
Thanks for the reply. Frustration got the better of me while typing it, so my apologies if it sounded a bit too much like a rant. I do understand what went wrong now.
I have noticed that like most programming languages, querying data follows similar patterns across languages (and there’s things in pandas that I struggle with, whereas it’s an easy line of code in SQL). It is annoying that there’s no traceback when things go wrong.
Anyway, thanks again for the explanation!
-Twan

Hey guys, my SQL query isn’t returning any tables or data at all when I run it. I’ve compared it against the sample footage and I swear it’s identical; can anyone spot the error(s)???
It’s driving me up the wall lol
WITH months AS
(SELECT ‘2017-01-01’ AS first_day,
‘2017-01-31’ AS last_day
UNION
SELECT
‘2017-02-01’ AS first_day,
‘2017-02-28’ AS last_day
UNION
SELECT
‘2017-03-01’ AS first_day,
‘2017-03-31’ AS last_day),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS (
SELECT id,
first_day AS month,
CASE
WHEN (subscription_start < first_day)
AND (subscription_end > first_day
OR susbcription_end IS NULL)
AND (segment = 87)
THEN 1
ELSE 0
END AS is_active_87,
CASE
WHEN (subscription_start < first_day)
AND (subscription_end > first_day
OR susbcription_end IS NULL)
AND (segment = 30)
THEN 1
ELSE 0
END AS is_active_30,
CASE
WHEN (subscription_end BETWEEN first_day AND last_day)
AND (segment = 87)
THEN 1
ELSE 0
END as is_canceled_87,
CASE
WHEN (subscription_end BETWEEN first_day AND last_day)
AND (segment = 30)
THEN 1
ELSE 0
END as is_canceled_30 */
FROM cross_join
)
SELECT * FROM status LIMIT 10;
status_aggregate AS (
SELECT
month,
SUM(is_active_87) AS sum_active_87,
SUM(is_active_30) AS sum_active_30,
SUM(is_canceled_87) AS sum_canceled_87,
SUM(is_canceled_30) AS sum_canceled_30
FROM status
GROUP BY month
)
SELECT
month,
1.0 * sum_canceled_87 / sum_active_87 AS ‘Churn 87’,
1.0 * sum_canceled_30 / sum_active_30 AS ‘Churn 30’
FROM status_aggregate
;

I’m having the same problem, but I’ve found some things with your code:
-END as is_canceled_30 */ at the end of your status temp table
-SELECT * FROM status LIMIT 10; is right before status_aggregate temp table

I can’t seem to get the code below to work. Help please!
with months as (
select
‘2017-01-01’ as first_day
‘2017-01-31’ as last_day
union
select
‘2017-02-01’ as first_day
‘2017-02-28’ as last_day
union
select
‘2017-03-01’ as first_day
‘2017-03-31’ as last_day)
cross_join as (
select *
from subscriptions
cross join months)
status as (
select id,
first_day as month,
case when subscription_start < first_day
and (subscription_end > first_day
or subscription_end is null)
and segment = 87
then 1
else 0
end as is_active_87,
case when subscription_start < first_day
and (subscription_end > first_day
or subscription_end is null)
and segment = 30
then 1
else 0
end as is_active_30,
case when subscription_end between first_day and last_day
and segment = 87
then 1
else 0
end as is_canceled_87,
case when subscription_end between first_day and last_day
and segment = 30
then 1
else 0
end as is_canceled_30
from cross_join
)
status_aggregate as (
select month,
sum(is_active_87) as sum_active_87,
sum(is_active_30) as sum_active_30,
sum(is_canceled_87) as sum_canceled_87,
sum(is_canceled_30) as sum_canceled_30
from status
group by month)
select month,
1.0 * sum_canceled_87 / sum_active_87 as churn_87,
1.0 * sum_canceled_30 / sum_active_30 as churn_30
from status_aggregate
;

Thanks for that chip - sadly those were errors remaining from me trying to trouble shoot my code (by commenting portions out, and testing which parts work on their own: hence the limit 10). Having removed them I still don’t get any results or columns when I run the code.
I’m pretty sure this portion of my code is the problem:
status AS (
SELECT id,
first_day AS month,
CASE
WHEN (subscription_start < first_day)
AND (subscription_end > first_day
OR susbcription_end IS NULL)
AND (segment = 87)
THEN 1
ELSE 0
END AS is_active_87,
CASE
WHEN (subscription_start < first_day)
AND (subscription_end > first_day
OR susbcription_end IS NULL)
AND (segment = 30)
THEN 1
ELSE 0
END AS is_active_30,
CASE
WHEN (subscription_end BETWEEN first_day AND last_day)
AND (segment = 87)
THEN 1
ELSE 0
END as is_canceled_87,
CASE
WHEN (subscription_end BETWEEN first_day AND last_day)
AND (segment = 30)
THEN 1
ELSE 0
END as is_canceled_30
FROM cross_join
)
The rest of mine works fine. Is anyone able to spot what I’m doing wrong?




 chipninja47655:

select
‘2017-01-01’ as first_day
‘2017-01-31’ as last_day
union
select
‘2017-02-01’ as first_day
‘2017-02-28’ as last_day
union
select
‘2017-03-01’ as first_day
‘2017-03-31’ as last_day)


You need to put ’ , ’ at the end of each new ‘as first_day’ alias, like so:
select
‘2017-03-01’ as first_day,
‘2017-03-31’ as last_day

Just posting that I got my code to work!!! 
I just had a few spelling errors (susbcription…) and missed a comma in



 chipninja47655:

case when subscription_end between first_day and last_day
and segment = 30
then 1
else 0
end as is_canceled_30
from cross_join
)NEEDS A COMMA


Here it is if you want to copy paste it for comparison purposes:
WITH months AS
(SELECT ‘2017-01-01’ AS first_day,
‘2017-01-31’ AS last_day
UNION
SELECT
‘2017-02-01’ AS first_day,
‘2017-02-28’ AS last_day
UNION
SELECT
‘2017-03-01’ AS first_day,
‘2017-03-31’ AS last_day),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS (
SELECT id,
first_day AS month,
CASE
WHEN (subscription_start < first_day)
AND (subscription_end > first_day
OR subscription_end IS NULL)
AND (segment = 87)
THEN 1
ELSE 0
END AS is_active_87,
CASE
WHEN (subscription_start < first_day)
AND (subscription_end > first_day
OR subscription_end IS NULL)
AND (segment = 30)
THEN 1
ELSE 0
END AS is_active_30,
CASE
WHEN (subscription_end BETWEEN first_day AND last_day)
AND (segment = 87)
THEN 1
ELSE 0
END as is_canceled_87,
CASE
WHEN (subscription_end BETWEEN first_day AND last_day)
AND (segment = 30)
THEN 1
ELSE 0
END as is_canceled_30
FROM cross_join
),
status_aggregate AS (
SELECT
month,
SUM(is_active_87) AS sum_active_87,
SUM(is_active_30) AS sum_active_30,
SUM(is_canceled_87) AS sum_canceled_87,
SUM(is_canceled_30) AS sum_canceled_30
FROM status
GROUP BY month
)
SELECT
month,
1.0 * sum_canceled_87 / sum_active_87 AS ‘Churn 87’,
1.0 * sum_canceled_30 / sum_active_30 AS ‘Churn 30’
FROM status_aggregate
;
GOOD LUCK

Thanks! That did it!!! I figured out the commas were missing between the temp tables after I posted. 

Ahhh, yes now I see. Thanks for clarifying that 

Hi, where is this video that everyone is referring to?
"
151,FAQ: Queries - Limit,"Get Help,Git",,5,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Limit” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Limit


 In SQL, what happens if we set a LIMIT value that is greater than the total number of rows?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
For LIMIT, it doesn’t seem that this command correctly returns data when there is a tie for the final position. For example, for the data set, if you use:
SELECT *
FROM movies
ORDER BY imdb_rating DESC
LIMIT 5;
You return 5 movies as asked, but if you use a large limit you will see that Star Wars and Intersteller are both ranted 8.7 on IMDb. There must be another parameter that breaks the tie-- seems to be id #. How could you change tie-breaking secondary parameters or change the code to return more rows of data in the case of a tie for the final spot to show all movies that tied for this last spot?

SQL Server appears to have a selector to do what you want: SELECT TOP 12 WITH TIES * according to this, but I can’t make it work in the CA version.  I’m not sure what the underlying SQL version is that we are dealing with here.

What happens if  the limit command conflicts with the tying value of order by command.
For Eg.
In the given table ‘movies’ there were 3 values with ‘imdb_rating = 8.8’ instead of 2 as given in the example.
and the limit remained same i.e
LIMIT 3
So, what will be the criteria of selection in this case?
Or will it display all 3 values with ‘imdb_rating = 8.8’ making it a total of 4 values, including the one with ‘imdb_rating = 9.0’.

why is the order of the the query so important, while they will return the same results ?
"
152,FAQ: Manipulation - Update,"Get Help,Git",,18,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Update” exercise from the lesson “Manipulation”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Update


How is ALTER different from UPDATE?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
are commands lines interchangeable? ex:
instead of :
SET twitter_handle = ‘@taylorswift13’
WHERE id = 4;
could we use :
WHERE id = 4
SET twitter_handle = ‘@taylorswift13’;

What if there are two rows with the same value for id?

There is a bug in exercise 8/11:
New twitter_handle column from exercise 7 is automatically removed when you try to run exercise 8

Refreshing the URL and pressing on the solution button right away works

Hi, I have a question about this exercise.
When we are told to add:
UPDATE celebs 
SET twitter_handle = '@taylorswift13' 
WHERE id = 4; 

SELECT * FROM celebs;

Why can’t I do instead of id for example `WHERE name = ‘Taylor Swift’
Will I always have an id in my tables and I will always use it in these situations?




 blogpro62282:

Why can’t I do instead of id for example `WHERE name = ‘Taylor Swift’


can you guarantee that name is unique? using name in where clause might update multiple rows



 blogpro62282:

Will I always have an id in my tables and I will always use it in these situations?


always? No. But identifiers (id) are quite common, and are commonly used when you want to update a single row.
terms like always are tricky in programming. Furthermore its important to realize why you do things are certain way. What the reasons are.

If I want to update each row on my column Twitter, Do I have to create each sentence for every modification?
There is not a way to do all together as on the insert values?.. I was trying in different ways but I couldn’t find a way! Who can please help me?

Not an a simple elegant way, as shown here:
https://stackoverflow.com/questions/25674737/mysql-update-multiple-rows-with-different-values-in-one-query/25674827

Since we have already defined the twitter_handle as text , if we run a code as
UPDATE celebs
SET twitter_handle = '34'
WHERE id = 4;

SELECT * FROM celebs;

Will it allow entry to be made as integer . In my case it is yes… How can we decide that we will receive a error if somebody made wrong entry ?

Sql has strict mode for this:
https://dev.mysql.com/doc/refman/8.0/en/sql-mode.html#sql-mode-strict
although often in a real life application, you might do this validation at application level (as oppose to database level)

Both rows will be updated.
That’s why it’s important to make sure id uniquely identifies each row, by setting it to be PRIMARY KEY (see this lesson).

When we call the “WHERE id = 4” statement, does it need to look through the whole table to find where id = 4?  I would imagine the runtime of this statement would be O(n). Or is “id” a special case, like searching by index in an array?
Thanks so much 
– confused person from object-oriented background

databases include the ability to create indexes on column, this will speed up the run time. If there is index on the column, the run time is very likel O(n). But i am sure this can be found somewhere on the internet if you want to get into more depth on this matter.

How do you update multiple rows without writing multiple UPDATE clauses?

you use a where that will select multiple rows:
UPDATE celebs
SET twitter_handle = '34'
WHERE id < 100;


Why do we need to select all the columns in the table after we have already updated it? Simply put, why do we need the last line of code “select * from celebs;”
update celebs
set twitter_handle = ‘@taylorswift13’
where id = 4;
select * from celebs;

I answered my own question. The purpose is to show the results of the code we just executed.
"
153,FAQ: Usage Funnels - Compare Funnels For A/B Tests,"Get Help,Git",,13,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Compare Funnels For A/B Tests” exercise from the lesson “Usage Funnels”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Compare Funnels For A/B Tests


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
In a query,
SELECT modal_text,
COUNT(DISTINCT CASE
WHEN ab_group = ‘control’ THEN user_id
END) AS ‘control_clicks’
FROM onboarding_modals
GROUP BY 1
ORDER BY 1;
I can’t understand why, in line 2, DISTINCT is used. I thought that query will operate well without DISTINCT and  it does. How this statement operates in this query?

Why do we have to use CASE when filtering to ab_group? Why can’t we replace that with WHERE? The code works, so why use CASE in this case pun intended
SELECT modal_text,
COUNT(DISTINCT user_id)
FROM onboarding_modals
WHERE ab_group = 'control’
GROUP BY 1
ORDER BY 1;

Yes please someone answer this question! here just to bump it! <3

Also a newbie here, so just a guess, but in theory the same user could visit and progress through the same stage (e.g. visiting/browsing/viewing cart etc.) more than once. They want the count of distinct users, not distinct clicks.
In practice though, there don’t appear to be any repeated users, so it doesn’t change the answer and I agree it’s confusing.

I think the reason has to do with the next task in this page rather than the one you point to - WHERE does work as long as we’re only interested in the control group. But as soon as we want to summarise both ‘control’ and ‘variant’, we can’t select only the ‘control’ rows anymore, because we need the data on ‘variant’ too. So we have to keep the full table and do the subset using the CASE syntax:
SELECT modal_text,
  COUNT(DISTINCT CASE
    WHEN ab_group = 'control' THEN user_id
    END) AS 'control_clicks', 
  COUNT(DISTINCT CASE
    WHEN ab_group = 'variant' THEN user_id
    END) AS 'variant_clicks'
FROM onboarding_modals
GROUP BY 1
ORDER BY 1;


Hi i am a newbie, I just don’t get how the code in this exercise returns the number of users that have completed a modal. Because when using the “count” command we will also include the users that have closed at that modal hence we should also use a “where” statement so that we could really get those users that have completed a particular modal or else we would not get the number of people completing the fifth modal.

But if you do so,
 SELECT modal_text, 
   COUNT(DISTINCT CASE
        WHEN ab_group = 'control' THEN user_id END) AS 'control_clicks',
   COUNT(DISTINCT CASE
        WHEN ab_group = 'variant' THEN user_id END) AS 'variant_clicks'
 FROM onboarding_modals
 WHERE user_action = 'Continue' 
 GROUP BY 1
 ORDER BY 1;

You may find modal text 4,5 with the same number of control click and variant click:
Query Results
modal_text	control_clicks	variant_clicks
1 - Welcome to Mattresses and More!	301	394
2 - Browse our bedding selection	239	336
3 - Select items to add to your card	183	264
4 - View your cart by clicking on the icon	152	227
5 - Press 'Buy Now!' when you're ready to checkout	152	227


So, I think it would be more logical to think of as the user “reaching” which stage.

I don’t understand the THEN user_id part of the CASE.

Can anyone explain this?

As I understood this THEN is a logical operator that does something if the previous WHEN condition is met, in this case (no pun intended) it returns all the user_id meeting the condition that was given (e.g group=“a”), and the COUNT then count the user_id’s being returned. CASE creates a sort of container with a result and we can save it as column by END AS ,or do something else with it, here we instead took that result and stored it in a column by COUNT AS.
In previous examples the return value in case was a text string that we defined ( WHEN rating > 10 THEN “EXCELLENT”) but here the result is simply itself after being filtered out. So it depends what we tells it to do.
Compare with python functions, (if , else and return, where we can say return some_variable in the end and then use it somewhere else)
Hope that helped! I am also a beginner so correct me if I’m wrong or was unclear.

As an experienced SQL programmer, I am pretty certain that you are correct about this. I tested with and without DISTINCT in all of the exercises and the answer comes out the same. That probably means their data doesn’t contain any repeat visitors. What the DISTINCT statement would do, if there were repeat users, would be to eliminate all but one of the repeat visits of all repeat users. At least this is what my gut says. I haven’t tested it with real repeat data.

I think that as we want to have 2 “new” columns to show the result (control/variant) this is the simplest way to do it. I cannot think an easier way to create a column and filter using WHERE clause other than that.
"
154,FAQ: Code Challenge: Multiple Tables - Code Challenge 4,"Get Help,Git",,8,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Code Challenge 4” exercise from the lesson “Code Challenge: Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Code Challenge 4


What does strftime() do?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
What does strftime stand for?

strftime probably means something like string format time.

Thank you, that’ll help me to remember it.

Why do you have to write:
‘select january.user_id from january’?
Why is
‘select user_id from january’
not sufficient?

Sad there is no response here, because I have this same question.

Because february has a column with the same name.

SELECT january.user_id
FROM january
LEFT JOIN february
ON january.user_id = february.user_id
WHERE february.user_id IS NULL;
"
155,FAQ: Code Challenge: Multiple Tables - Code Challenge 9,"Get Help,Git",,5,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Code Challenge 9” exercise from the lesson “Code Challenge: Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Code Challenge 9


Is there another way that determining play counts of a song might have been implemented?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","



 wiki-bot:

Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development


If I want to try answering this exercise using the window function, what would it look like?
This is my attempt:
SELECT
songs.title,
songs.artist,
COUNT(*) OVER(PARTITION BY plays.song_id) AS times_played
FROM plays LEFT JOIN songs ON plays.song_id = songs.id ;

Quick question on Joins, because I’ve gotten the join mix up multiple times throughout this exercise and I just want to see if there is an explanation to understand (apologies in advance if this sounds like a basic question).
The following code I wrote is as follows:
SELECT songs.title, songs.artist, play_count.times_played
FROM songs
JOIN play_count
ON
songs.id = play_count.song_id;
This returns nothing, making it wrong, and the correct query is as follows:
SELECT songs.title,
songs.artist,
play_count.times_played
FROM play_count
JOIN songs
ON play_count.song_id = songs.id;
The question I want to pose here is how do we determine the tables FROM and JOIN? I seem to be mixing up this order in multiple exercises, and I wanted to see if there was an easy way to understand when to use the correct columns.

Here is my code, which is the same as the solution.  But I don’t understand why this cannot run
WITH play_count AS
(
SELECT song_id,
COUNT(*) AS times_played
FROM plays
GROUP BY song_id;
)
SELECT songs.title, songs.artist, play_count.times_played
FROM play_count
JOIN songs
ON play_count.song_id = songs.id;

I spotted there is a semicolon past your ‘‘GROUP BY song_id’’ in line 6  & after removing works all fine
"
156,FAQ: Calculating Churn - Single Month I,"Get Help,Git",,43,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Single Month I” exercise from the lesson “Calculating Churn”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Single Month I


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Is it completely necessary to include the end parentheses of the previous statement and the beginning parentheses of the next statement on the same line as the mathematical symbol (e.g. “) / (”)? Is there a way for me to include the mathematical symbol by itself on a line of code to allow myself to visualize the code better?

Hi there, I want to ask question regarding the condition in denominator (total active users in specific month)
WHERE subscription_start < ‘2016-12-01’
AND (
**    (subscription_end >= ‘2016-12-01’)**
**    OR (subscription_end IS NULL)**
if I remove those codes the result will be similar with and without those codes. I just curious, whats the reason to put those code?

Hey there,
I’m having trouble understanding why my count result is giving me two different values when using >= versus <= in this statement.
SELECT COUNT(*) FROM subscriptions WHERE subscription_start < ‘2017-01-01’ AND ((subscription_end <= ‘2017-01-31’) OR (subscription_end IS NULL));
SELECT COUNT(*) FROM subscriptions WHERE subscription_start < ‘2017-01-01’ AND ((subscription_end >= ‘2017-01-01’) OR (subscription_end IS NULL));

Can anyone explain why we skip a line after the parentheses (second SELECT statement) in this code for calculating customer churn? Also it says at the beginning that there is not supposed to be any drop out on the first month as the policy is to stick to membership for at least a month. What is the use of this piece of information? Or is it just there to test/confuse us?

The second line of code includes all subscriptions that have ended after 2017-01-01 (including February 2019 and March 2019). This allows the code to calculate all active users as of 2017-01-01 (subscription start < ‘2017-01-01’).
The first line of code calculated all users that ended their subscriptions in January. This calculation does not belong in the denominator (churn = cancellation / total subscribers).

Answered my own question. We include the parentheses around the division sign to ensure that the division sign is not left alone in a coding line. That will definitely screw up the code, as SQL interprets “/” as it’s own line of code, rather than part of a formula.

got it, thanks for clarifying

I came here with the same question, but I think I answered it.  In the example given, the AND condition is redundant and unnecessary since it is stated in the problem that there are no cancellations in the first month of the service (December 2016).  However, the AND condition is important in the general case of calculating churn, since we don’t want to include subscribers who canceled before the beginning of the month.
This would probably be clearer if the question had us calculate churn for February instead.

Hi all,
I believe that the query should be more complete. What happens if someone that subscribed on the 02/12/2016 and then unsuscribes in the 12/12/2016?
I think that the WHERE clause should start as follows:
WHERE subscription_start < ‘2017-01-01’
WHAT DO YOU THINK?

Hi i have some issue with the code
when i used the below mentioned code
select 1.0 *
(
select count()
from subscriptions
where subscription_start < ‘2017-01-01’
and (subscription_end between ‘2017-01-01’ and ‘2017-01-31’)
)
/
(
select count()
from subscriptions
where subscription_start < ‘2017-01-01’
and (
(subscription_end >= ‘2017-01-01’) or
(subscription_end is null)
)
)
as result;
The result is not coming
it is showing error in line 9
and answer is also wrong as 35 .
and when i readjusts the brackets as in below case
select 1.0 *
(
select count()
from subscriptions
where subscription_start < ‘2017-01-01’
and (subscription_end between ‘2017-01-01’ and ‘2017-01-31’)
) /
(
select count()
from subscriptions
where subscription_start < ‘2017-01-01’
and (
(subscription_end >= ‘2017-01-01’) or
(subscription_end is null)
)
)
as result;
The answer seems fine.
Can somebody explain this . Is there any issue in the code.

In the churning example let’say for December, I am confused by the way the denominator (defined as active users at the beginning of December) is calculated.
In particular, as  active users,  are included also the customers that cancelled the subscription at the 1st of December as the code is:
…AND (
(subscription_end >= ‘2016-12-01’)…
I wonder, why is the equal sign (=) is used here?
A user who cancels his/her subscription in the 1st day of the month, is he/she supposed to be active that day and consequently that month?
Is after all this calculation, just a techical detail which is related to the exact time each company counts active users for each day?
I mean , if it  regards as active users for the 1st of December those who were subscribed until the very end of the that day, i.e. time 23:59, then I think that the code should not include the (=) sign, after the “subscription_end”.  The users who ended the the subscription during 1 December, are no longer active as the  calculation is made at the end of the day.
However, if the company counts them at the very beginning of  day 1st  December , e.g. time 00:00 (between 30 November and 1 December), then the (=) sign is correctly written in the code.

codeacademy make it very difficult to understand , denominatior:
the code that is right following lesson example

select 1.0*
(select count()
from subscriptions
where subscription_start < ‘2017-01-01’
and (subscription_end between ‘2017-01-01’ and ‘2017-01-31’)
)/(
select count()
from subscriptions
where subscription_start < ‘2017-01-01’
and (subscription_end is null or subscription_end >= ‘2017-01-01’
or subscription_end <=‘2017-01-31’))
as result;

question:
AND (
(subscription_end >= ‘2017-01-01’) WHY not include ‘<= 2017-01-31’, u r going to include 2018-2019 data??
OR (subscription_end IS NULL /WHY?: include all before and after 1/2017)
Total suber is calculated until beginning of the month right?

hi you, one more question relating to this:
codeacademy make it very difficult to understand , denominatior:
the code that is right following lesson example

select 1.0*
(select count()
from subscriptions
where subscription_start < ‘2017-01-01’
and (subscription_end between ‘2017-01-01’ and ‘2017-01-31’)
)/(
select count()
from subscriptions
where subscription_start < ‘2017-01-01’
and (subscription_end is null or subscription_end >= ‘2017-01-01’
or subscription_end <=‘2017-01-31’))
as result;

question:
AND (
(subscription_end >= ‘2017-01-01’) WHY not include ‘<= 2017-01-31’, u r going to include 2018-2019 data??
OR (subscription_end IS NULL /WHY?: include all before and after 1/2017)
Total suber is calculated until beginning of the month right?

We want to calculate churn for active users in January 2017. Future users would be included in the denominator indefinitely, when we only want to include users that were active in January 2017 (New users in February and March are not active in January 2017). The problem states that users cannot cancel in the first month, so we do not have to worry about new users within December 2016 being excluded from the denominator.  I hope this helps.

Hi everyone! For the WHERE query, when subscription_start < ‘2017-01-01’ , it doesn’t include 1-Jan-2017. Shouldn’t we include it since we are looking for the churn rate of Jan 2017?

Hi! I keep getting 0.039 for my answer and I’m having trouble finding the bug. I’ve checked to ensure that all the operands match the answer and quadruple checked my dates. Am I missing something?
SELECT  1.0 *
(SELECT COUNT(id)
FROM subscriptions
WHERE
(subscription_start < ‘2017-01-01’)
AND
(subscription_end
BETWEEN ‘2017-01-01’
AND ‘2017-01-31’)
)/(
SELECT COUNT(id)
FROM subscriptions
WHERE
(subscription_start < ‘2017-01-01’)
AND
(subscription_end >= ‘2017-01-01’)
OR
(subscription_end IS NULL)
)
AS Result;

Okay, I am completely lost and have no clue what to do on this one. I would like to keep my steak going, but I don’t even understand what they are asking for.

There’s not much support for SQL here on the forums unfortunately, but if spacing doesn’t matter in SQL, I can’t grasp why the first query doesn’t lead to anything and the second one gets the desired output???
Doesn’t execute; no errors:
SELECT 1.0 *

(SELECT COUNT(id)
FROM subscriptions
WHERE subscription_start < '2017-01-01'
 AND (subscription_end >= '2017-01-01' 
     AND subscription_end < '2017-02-01'))
/
(SELECT COUNT(id)
FROM subscriptions
WHERE subscription_start < '2017-01-01'
AND ((subscription_end >= '2017-01-01') OR (
subscription_end IS NULL)))
AS result;

Works fine:
SELECT 1.0 *

(SELECT COUNT(id)
FROM subscriptions
WHERE subscription_start < '2017-01-01'
 AND (subscription_end >= '2017-01-01' 
     AND subscription_end < '2017-02-01'))
/    (SELECT COUNT(id)
FROM subscriptions
WHERE subscription_start < '2017-01-01'
AND ((subscription_end >= '2017-01-01') OR (
subscription_end IS NULL)))
AS result;

Only difference is that the division sign is now on the same line as the denominator (works also with numerator).
Strange.

I think that January is the 2nd month.
"
157,FAQ: First- and Last-Touch Attribution - The Attribution Query III,"Get Help,Git",,13,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “The Attribution Query III” exercise from the lesson “First- and Last-Touch Attribution”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise The Attribution Query III


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Can someone please explain why we need to create a new table then join it to the old one instead of adding utm_source to the initial query that is grouped by user_id and includes max(timestamp) ?

I have been wondering about the same thing. Hopefully someone can answer.

I wonder the same thing but I also wonder how the system knows that ‘lt’ is the abbreviation for the last_touch table…

I think I get it now, though. Don’t think they actually give the same result, because first you need to link the first touches to user ID and later to campaign. You can’t do both at the same time so need to create a first_touch table. Try it in the project and I think you’ll understand.

I think they actually give the same result.
If you select the specific columns from your table like;
SELECT user_id, MAX(timestamp), utm_source
FROM page_visits;
You get all the last_touch tables, if you point it to a particular user with  ‘WHERE’ like:
SELECT user_id, MAX(timestamp), utm_source
FROM page_visits
WHERE user_id = 10069;
You will get the result for a particular user
Conclusion, I also don’t understand why we have to create that long table in the exercise to find the utm_sources.

the first query you gave does not work as intended. You need the create a temporary first_touch table if you want to get the utm_source along with the fist time stamp for each user.

I have the same question. For the sake of clarity, the solution according to the exercise should be
WITH last_touch AS (
  SELECT user_id,
    MAX(timestamp) AS 'last_touch_at'
  FROM page_visits
  GROUP BY user_id)
SELECT lt.user_id,
  lt.last_touch_at,
  pv.utm_source
FROM last_touch AS 'lt'
JOIN page_visits AS 'pv'
  ON lt.user_id = pv.user_id
  AND lt.last_touch_at = pv.timestamp;

But this other query gives the same result, without creating a temporary table to JOIN.
SELECT user_id,
  MAX(timestamp) AS 'last_touch_at',
  utm_store
FROM page_visits
GROUP BY user_id;

I compared the results given by the two queries and they were identical. So what is the difference?
My guess, but I am not sure about this, is that with a user that has multiple entries in the table with different values for utm_source, the short query might not return the utm_source that corresponds to the correct last_touch_at.

SQL knows that that lt is the abbreviation for the last_touch table because in your query you should have added:
FROM last_touch AS 'lt'


select user_id,timestamp,utm_source from page_visits
group by user_id
having timestamp = max(timestamp);

will this query work against

WITH last_touch AS (
    SELECT user_id,
        MAX(timestamp) AS 'last_touch_at'
    FROM page_visits
    GROUP BY user_id)
SELECT lt.user_id,
    lt.last_touch_at,
    pv.utm_source
FROM last_touch AS 'lt'
JOIN page_visits AS 'pv'
    ON lt.user_id = pv.user_id
    AND lt.last_touch_at = pv.timestamp


Hi , can anyone explain to me how SQL will read the below code ?As in what sequence? I know seems like a basic question at this stage . Thanks!!
WITH first_touch AS (
SELECT user_id,
MIN(timestamp) AS ‘first_touch_at’
FROM page_visits
GROUP BY user_id)
SELECT ft.user_id,
ft.first_touch_at,
pv.utm_source
FROM first_touch AS ‘ft’
JOIN page_visits AS ‘pv’
ON ft.user_id = pv.user_id
AND ft.first_touch_at = pv.timestamp;

SELECT user_id ,MAX(timestamp),utm_source FROM page_visits
WHERE user_id = 10069;
WHY  NEED THIS LONG SQL  BELOW?
WITH last_touch AS (
SELECT user_id,
MAX(timestamp) as last_touch_at
FROM page_visits
GROUP BY user_id)
SELECT lt.user_id,
lt.last_touch_at,
pv.utm_source
FROM last_touch lt
JOIN page_visits pv
ON lt.user_id = pv.user_id
AND lt.last_touch_at = pv.timestamp
WHERE lt.user_id = 10069;

SELECT user_id ,MAX(timestamp),utm_source FROM page_visits
WHERE user_id = 10069;
WITH last_touch AS (
SELECT user_id,
MAX(timestamp) as last_touch_at
FROM page_visits
GROUP BY user_id)
SELECT lt.user_id,
lt.last_touch_at,
pv.utm_source
FROM last_touch lt
JOIN page_visits pv
ON lt.user_id = pv.user_id
AND lt.last_touch_at = pv.timestamp
WHERE lt.user_id = 10069;
"
158,FAQ: Aggregate Functions - Group By I,"Get Help,Git",,6,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Group By I” exercise from the lesson “Aggregate Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Group By I


 When using the GROUP BY clause, do we always have to group by one of the selected columns listed after SELECT ?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Please Help.
If we were to not use the GROUP BY clause such as
SELECT category, SUM (downloads)
FROM fake_apps;
The program returns 1 row with with the News in the category and the sum of the downloads in the other column.
But why does it select News as the category? It is not the min, max, mode, or avg.

Just wanto to bump this question as I had the exact some one in mind coming here. I think understanding this is fundamental to understanding how SQL works/its logic for organizing queries.
Any reply is very well received! <3

Well since SUM(downloads) only returns one value which is the sum of all category’s downloads, it only has a corresponding value for the SUM(downloads) which is the first value in category (here: news!)

In the context of this exercise, why should we type an * inside the COUNT( ) function? Does it make any difference?
SELECT price, COUNT(*)
FROM fake_apps
GROUP BY price;

@ justin976629
I believe it selects News because it is the category with the fewest letters.
"
159,FAQ: First- and Last-Touch Attribution - First Touch Example,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “First Touch Example” exercise from the lesson “First- and Last-Touch Attribution”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise First Touch Example


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
In all previous exercises I’ve been using the "" "" quotation marks instead of ’ ’ , but in here I couldn’t proceed unless I typed it with the latter. Is it just a mistake here or does it actually matter which one we use?
"
160,FAQ: Calculating Churn - Single Month II,"Get Help,Git",,44,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Single Month II” exercise from the lesson “Calculating Churn”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Single Month II


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I’m confused as to why the first code block in the instructions is necessary (creating a temporary table called enrollments), since the same criteria are used in the third code block (the is_active column). Without it, I still get the right answer. Is there anything wrong with doing it this way?
WITH status AS
(SELECT
CASE
WHEN ((subscription_end > ‘2017-01-31’)
OR (subscription_end IS NULL))THEN 0
ELSE 1
END AS is_canceled,
CASE
WHEN subscription_start < ‘2017-01-01’
AND ((subscription_end >= ‘2017-01-01’)
OR (subscription_end IS NULL)) THEN 1
ELSE 0
END AS is_active
FROM subscriptions)
SELECT 1.0 * SUM(is_canceled) / SUM(is_active)
AS churn_rate
FROM status;

I had the same question in mind. This is much simpler and easy to comprehend. You might be missing one parenthesis (closing for WITH) otherwise great job!

Thanks, @szabeen ! I’m still curious if anyone will come forth with an explanation for why the enrollments temporary table is necessary (if it is…?) We’ll see 

The enrollments table is just another way of getting active users from subscriptions table, you can calculate churn rate by enrollments  and status table containing is_canceled column or by status table containing is_canceled and is_active columns. In the second case, the status.is_active table is used instead of enrollments table.  The course makes you write both tables so you remember both of these methods

enrollment limited the data from 1/1 to 1/31.  subscriptions has data for several months.  For example, subscription_end = 12/2/2016 will return as 1 in the case is_canceled without creating enrollment table and it should not be included in calculating 1/2017 churn rate

@board5027732213 Thanks for responding! I don’t think that’s what the instructions are saying, though. The 4 code blocks in the instructions comprise a single query. You can tell because the first block defining enrollments ends with a comma, and the second one doesn’t start with WITH. What seems weird to me is that, although they say that part of the goal here is to avoid repeating conditional statements, the temporary enrollments table uses the same conditional statements as the is_active column of the status table.

Hey @java7682825630 thanks for responding! Sorry for editing multiple times… So, when I bring up the status table, I see a row with a subscription_start of 12/2/2016 that has a 1 in the is_active column, but I don’t see one with a subscription_end of that date. It appears that the earliest subscription_end date is in 2017. Without the enrollments table, the status table still includes rows for which both is_active and is_canceled are 0, which is fine because they won’t be added in to the churn calculation because they have a value of 0. Unless I’m misunderstanding what you’re saying?

I’m struggling with understanding WITH and CASE statements and can’t seem to get them correct. Can someone tell me where I’m going wrong with my query for this exercise?
WITH enrollment AS
(SELECT *
FROM subscriptions
WHERE subscription_start < ‘2017-01-01’
AND (
(subscription_end >= ‘2016-12-01’)
OR (subscription_end IS NULL)
)),
status AS
(SELECT
CASE
WHEN (subscription_end > ‘2017-01-01’)
OR (subscription_end IS NULL) THEN 0
ELSE 1
END as is_cancelled),
status AS
(CASE
WHEN subscription_start < ‘2017-01-01’
AND (
(subscription_end >= ‘2017-01-01’)
OR (subscription_end IS NULL)
) THEN 1
ELSE 0
END as is_active
FROM enrollments
)
SELECT 1.0 * SUM(is_canceled) / SUM(is_active)
FROM status;
When I run this, nothing happens.


I’m having the same issue. The example says to name both middle columns as status yet when you try to run the code is says “Error: near line 1: duplicate WITH table name: status”
This is the code I used:
WITH enrollments AS
(SELECT *
FROM subscriptions
WHERE subscription_start < ‘2017-01-01’
AND ((subscription_end >= ‘2017-01-01’)
OR (subscription_end IS NULL)
)),
status AS
(SELECT
CASE
WHEN (subscription_end > ‘2017-01-01’)
OR (subscription_end IS NULL) THEN 0
ELSE 1
END AS is_canceled),
status AS
(SELECT
CASE
WHEN subscription_start < ‘2017-01-01’
AND ((subscription_end > ‘2017-01-01’)
OR (subscription_end IS NULL)) THEN 1
ELSE 0
END AS is_active
FROM enrollments),
SELECT 1.0 * sum(is_canceled) / SUM(is_active)
FROM status;

Hello! I think your problem is with the word “enrollment”… When you first write it in the WITH statement it has no ‘s’ but when you call it towards the end, you add an ‘s.’ Hope this helps!

Hello! You actually don’t rename the table for multiple CASEs. Remember in the CASE lesson how we learned that we can have multiple CASE statements before we end? That is what is happening here. Just get rid of the second ‘status AS’ and ‘SELECT’ statements and you should be fine.

@cssslayer88813, also see my other comment for @byte7181295660 as you have the same problem 

I post here the solution to which I succesfully arrived. To put you on context, I tried employing a double “WITH” structure but could not manage to properly define both “enrollments” and “status” temporal tables at the same time (with a single “WITH” clause, or even two “WITH” clauses together). So I thought about the problem with another approach. Basically, “enrollements” is the only table that I defined with the “WITH” sentence. I defined both the “is_cancelled” and “is_active” columns  with a “CASE” embedded in the final “SELECT” sentence, recalling the temporary table “enrollments”. Hope it serves you well:
WITH enrollments AS
(SELECT *
FROM subscriptions
WHERE subscription_start < ‘2017-01-01’
AND (
(subscription_end >= ‘2017-01-01’)
OR (subscription_end IS NULL)
))
SELECT 1.0 * SUM(is_canceled) / SUM(is_active)
FROM (SELECT
CASE
WHEN (subscription_end > ‘2017-01-31’)
OR (subscription_end IS NULL) THEN 0
ELSE 1
END as is_canceled,
CASE
WHEN subscription_start < ‘2017-01-01’
AND (
(subscription_end >= ‘2017-01-01’)
OR (subscription_end IS NULL)) THEN 1
ELSE 0
END as is_active
FROM enrollments
) AS status;

I got the same question that why do we need enrollment block here. After reading these discussion, I still don’t know why. It seems it works also fine and makes more sense without enrollment block.

why this line in status table mean active user?

CASE
WHEN subscription_end >= ‘2017-01-01’  (why this line mean active user?)
OR
subscription_end IS NULL
THEN 1
ELSE 0
END as is_active
FROM enrollments


I couldn’t get the answer for this myself 
I have many doubts … it says:

Error: near line 1: near “SELECT”: syntax error

my code below:
WITH enrollment AS
SELECT *
FROM subscriptions
WHERE subscription_start < ‘2017-01-01’ AND
subscription_end >= ‘2017-01-31’ OR subscription_end IS NULL,
status AS
SELECT
CASE
WHEN subscription_end < ‘2017-01-31’ OR       subscription_end IS NULL THEN 0
ELSE 1
END AS is_canceled,
CASE
WHEN subscription_start < ‘2017-01-01’ AND
subscription_end >= ‘2017-01-31’ OR subscription_end IS NULL THEN 1
ELSE 0
END AS is_active
SELECT 1.0 * SUM(is_canceled) / SUM(is_active)
FROM status;

I am trying to do it by another way, which skip the step of “WITH enrollments AS”, but I cannot get the correct result. Can someone help me? THX
WITH status AS
(
SELECT
CASE
WHEN subscription_end <2017-01-01
AND subscription_end > 2017-01-31
OR subscription_end IS NULL
THEN 0
ELSE 1
END as is_canceled,
CASE
WHEN subscription_start<2017-01-01
AND subscription_end>= 2017-01-01
OR subscription_end IS NULL
THEN 1
ELSE 0
END as is_active
FROM subscriptions)
SELECT 1.0 * SUM(is_canceled)/SUM(is_active)
FROM status;

I’m trying a different method without WITH clause, but there is no result showing up.
Would you please let me know what I have written wrongly?
My code is as below;
SELECT 1.0*
SUM(CASE
WHEN (subscription_end > ‘2017-01-31’)
OR (subscription_end IS NULL) THEN 0 ELSE 1
END)
/
SUM(CASE
WHEN subscription_start<‘2017-01-01’
AND ((subscription_end>=‘2017-01-01’) or (subscription_end is null))
THEN 1 ELSE 0
END)
FROM subscriptions;

I also have no idea why we can’t just do the CASE statements on the initial subscription table rather than first building the enrollments table. It seems like duplication for no reason.
"
161,FAQ: Calculating Churn - Multiple Month: Determine Cancellation Status,"Get Help,Git",,16,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Multiple Month: Determine Cancellation Status” exercise from the lesson “Calculating Churn”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Multiple Month: Determine Cancellation Status


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
OK, first one here.
This step was pretty straight-forward…much confirming where )'s and ,'s go…
But I am getting this error:
The result should the four columns - id, month, is_active and is_canceled. Double check your conditions for is_canceled.
When my result looks like:




id
month
is_active
is_canceled




1
2017-01-01
0
0


1
2017-02-01
0
0



================================
Something stupid…I will find it.

Try to use
CASE
WHEN subscription_end BETWEEN first_day AND last_day
THEN 1
ELSE 0
END as ‘is_canceled’

Make sure you spell canceled with one L to get this one marked correct. Got stuck for a little while until I learned that you can’t use the alternate spelling, cancelled.

This was a frustrating exercise.
It defied logic and explanations I have been used to.
I had everything correct except there was no select statement with the CASE portion, which was only made clear to me after defaulting to the answer. 
This defied the logic and examples and quick tips Codecademy has provided.
CASE
Review Commands | Codecademy https://www.codecademy.com/paths/data-science/tracks/analyze-data-sql…
SELECT column_name,
CASE
WHEN condition THEN ‘Result_1’
WHEN condition THEN ‘Result_2’
ELSE ‘Result_3’
END
FROM table_name;
CASE statements are used to create different outputs (usually in the SELECT statement). It is SQL’s way of
handling if-then logic.
The prior exercises utilized the select portion and I tried to incorporate what I had learned in them.
Codecademy should really be better with its hints or error notifications (I got the same errors notices as chahn1138). I struggled with this exercise for over an hour.
Maybe say which parts we are not adding or should consider adding or which sequences would not be needed.
Now that I know there is the possibility of building blocks (like a SELECT statement) not always needed I’ll try more variety in my coding if I can.
I tried to avoid going to the solution, yet maybe I will have to resort to the solution more often if it helps me wrap my head around exercises and saves some time when I am stumped.
Hope others find this thread useful.

The whole “Calculating Churn” track seems pretty challenging and wordy, I did fine with the exercises before but here it got really challenging really quickly … wish there was a video explanation for it. 

Really helpful! Thanks! I was worried that it had jumped in difficulty - and the hints weren’t helping! Think I clicked on ‘Get Solution’ most of the way through!

You should include only BETWEEN in your CASE statement.
I did this and it worked 
WITH months AS
(SELECT
‘2017-01-01’ as first_day,
‘2017-01-31’ as last_day
UNION
SELECT
‘2017-02-01’ as first_day,
‘2017-02-28’ as last_day
UNION
SELECT
‘2017-03-01’ as first_day,
‘2017-03-31’ as last_day
),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS
(SELECT id, first_day as month,
CASE
WHEN (subscription_start < first_day)
AND (
subscription_end > first_day
OR subscription_end IS NULL
) THEN 1
ELSE 0
END AS ‘is_active’,
CASE
WHEN subscription_end BETWEEN first_day AND last_day
THEN 1
ELSE 0
END AS ‘is_canceled’
FROM cross_join)
SELECT *
FROM status
LIMIT 100;

Is there any difference between  if i write
WHEN subscription_end BETWEEN ‘2017-01-01’ AND ‘2017-03-31’
in place of
WHEN subscription_end BETWEEN first_day AND last_day
??

There sure is; in the first scenario you’re comparing static data for first_day and last_day, which is not what we want. Those are variables just like subscription_end, and should be dynamic as we parse rows of a table. Your second scenario accomplishes this.

My solution (I didn’t remember BETWEEN was a thing)
  CASE
    WHEN strftime(""%Y-%m"", subscription_end) = strftime(""%Y-%m"", last_day) THEN 1
    ELSE 0
  END AS is_canceled


Why does in the answer, they have given as “subscription_end > first_day” ?
shouldn’t it be “subscription_end >= first_day” ?
please can anyone explain as to why codecademy omitted ""= "" sign?
if subscription_start = ‘2016-12-01’ and if there is one month commitment what should be the subscription end_date ? should it be ‘2017-01-01’. or ‘2016-12-31’ ?

Thank you so much for this, as soon as I saw the between I realized my mistake.  Overthinking got a hold of me 

What is the difference between this:
Solution provided(condensed to the is_canceled portion
CASE
WHEN subscription_end BETWEEN first_day AND last_day THEN 1

ELSE 0*

END as is_canceled
FROM cross_join)
*SELECT **
FROM status
LIMIT 100;
and this:
*CASE *


WHEN (subscription_end BETWEEN first_day AND last_day OR*


 subscription_end IS NOT NULL) *



THEN 1*


ELSE 0*


END as is_canceled
FROM cross_join)
The second query is what I came up with and it appears to return the same results. I realize after seeing the solution that the second argument for IS NOT NULL would be irrelevant as either a subscription ended between the first day and last day or it didn’t, but it does not at least in my mind make my query wrong just bloated as it were.

Hello all,
I am having issues with getting my query to run anything. I’ve watched the walk-through video to gain insight on my coding errors and compared for accuracy. However, no matter what, my query does not return any results and doesn’t provide any errors.
I believe I simply need a second pair of eyes. Is there anywhere I can get one-on-one assistance to take a look without posting my whole code on here?
Any help would be greatly appreciate.

Wow. Thank you Sprell! I was banging my head against a wall for awhile here. I knew I had the formula correct… It’s the little things…
"
162,FAQ: Usage Funnels - Build a Funnel from Multiple Tables 1,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Build a Funnel from Multiple Tables 1” exercise from the lesson “Usage Funnels”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise Build a Funnel from Multiple Tables 1


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
163,FAQ: Aggregate Functions - Round,"Get Help,Git",,10,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Round” exercise from the lesson “Aggregate Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Round


 Does the ROUND() function round up?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I still don’t understand why the numeral (2) is used to round to an average of two decimal places.

SELECT ROUND(price, 0)
FROM fake_apps;

The above example rounds to the nearest integer.
SELECT ROUND(price, 2)
FROM fake_apps;

The above example rounds to the nearest second decimal place.
ROUND(123.456, 2)    //  123.46

Question:
If the function takes in a column name, how does avg(prices) qualify as one? I thought avg(prices) returns a single value?
Can someone elaborate. Thanks

Why does it matter which order you put the functions?
For example,
SELECT ROUND(AVG(price), 2)
FROM fake_apps;
returns the correct answer of 2.02, but:
SELECT AVG(ROUND(price, 2))
FROM fake_apps;
returns 2.02365, with the wrong number of decimals.
Why doesn’t the second set of commands take the column of prices, round it to two decimals, and then average it? I suppose this second approach introduces more error, but the commands should still work, no?

My understanding is that avg(prices) actually creates a new column (temporarily, I guess) with just one row whose value is the average price.

In the first line
SELECT ROUND (AVG(price), 2)
FROM fake_apps;

How would I know the exact order / way in which the parentheses are used? I mean instead of (AVG(price), 2) why not AVG(price, 2)? How / where can I learn; why is it the way it is?
Thank you for the help

don’t read letters/characters, read it as a set of instructions: calculate the the average price and round this result to two decimals
understanding functions, parameters and arguments are the underlying programming concepts you need/are looking for.

My code worked, but would it work in a real-world scenario?
SELECT AVG(ROUND (price, 0)) 
FROM fake_apps;


It is not returning the ‘wrong’ number of decimals. It is returning the exact result of the AVG function.
Your suggested function takes the column of prices, rounds each price to 2 decimals, and then averages the rounded prices. There is no reason to expect that the average of a set of two decimal numbers will have exactly two decimals.
For example, if I have just two prices: 1.12 and 2.01, then the ROUND function will first round them to two decimal places, resulting in 1.12 and 2.01, because they are already stated at 2 decimal places. The AVG function will then calculate the exact average of 1.12 and 2.01. The formula for AVERAGE of two numbers is: (A + B) / 2
(1.12 + 2.01) / 2 = 3.13 / 2 = 1.565
In this example, the exact return of the AVERAGE function has 3 decimal places.
"
164,FAQ: Common Metrics - Daily Revenue 2,"Get Help,Git",,1,"

This community-built FAQ covers the “Daily Revenue 2” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Daily Revenue 2


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
165,FAQ: Advanced Aggregates - Conclusion,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Conclusion” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Conclusion


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
166,FAQ: Advanced Aggregates - Product Grouping Conclusion,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Product Grouping Conclusion” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Product Grouping Conclusion


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
167,FAQ: Advanced Aggregates - Product Sum Conclusion,"Get Help,Git",,1,"

This community-built FAQ covers the “Product Sum Conclusion” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Product Sum Conclusion


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
168,FAQ: Common Metrics - Daily Revenue,"Get Help,Git",,1,"

This community-built FAQ covers the “Daily Revenue” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Daily Revenue


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
169,FAQ: Set Operations - Generalizations,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Generalizations” exercise from the lesson “Set Operations”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Generalizations


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
170,FAQ: Advanced Aggregates - Daily Sum Conclusion,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Daily Sum Conclusion” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Daily Sum Conclusion


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
171,"FAQ: Date, Number, and String Functions - Generalizations","Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Generalizations” exercise from the lesson “Date, Number, and String Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Generalizations


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
172,"FAQ: Date, Number, and String Functions - Numbers","Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Numbers” exercise from the lesson “Date, Number, and String Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Numbers


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
173,"FAQ: Date, Number, and String Functions - Dates","Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Dates” exercise from the lesson “Date, Number, and String Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Dates


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
174,"FAQ: Date, Number, and String Functions - Date, Time and String Functions","Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Date, Time and String Functions” exercise from the lesson “Date, Number, and String Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Date, Time and String Functions


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
175,FAQ: Conditional Aggregates - NULL,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “NULL” exercise from the lesson “Conditional Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise NULL


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
176,FAQ: Conditional Aggregates - Generalizations,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Generalizations” exercise from the lesson “Conditional Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Generalizations


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
177,FAQ: Subqueries - Table Transformation,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Table Transformation” exercise from the lesson “Subqueries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Table Transformation


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
178,FAQ: Common Metrics - ARPU 3,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “ARPU 3” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise ARPU 3


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
179,FAQ: Advanced Aggregates - Introduction,"Get Help,Git",,1,"

This community-built FAQ covers the “Introduction” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Introduction


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
180,FAQ: Conditional Aggregates - Aggregate Functions Revisited,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Aggregate Functions Revisited” exercise from the lesson “Conditional Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Aggregate Functions Revisited


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
181,FAQ: Subqueries - Generalizations,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Generalizations” exercise from the lesson “Subqueries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Generalizations


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
182,FAQ: Set Operations - Set Operations,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Set Operations” exercise from the lesson “Set Operations”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Set Operations


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
183,FAQ: Common Metrics - Introduction,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Introduction


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
184,FAQ: Common Metrics - Daily Average Revenue Per User,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Daily Average Revenue Per User” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Daily Average Revenue Per User


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
185,FAQ: Common Metrics - Daily Average Revenue Per Purchasing User,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Daily Average Revenue Per Purchasing User” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Daily Average Revenue Per Purchasing User


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
186,FAQ: Common Metrics - Daily Active Users 2,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Daily Active Users 2” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Daily Active Users 2


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
187,FAQ: Common Metrics - Common Metrics Conclusion,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Common Metrics Conclusion” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Common Metrics Conclusion


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
188,FAQ: Common Metrics - 1 Day Retention 2,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “1 Day Retention 2” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise 1 Day Retention 2


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
189,FAQ: Common Metrics - 1 Day Retention,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “1 Day Retention” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise 1 Day Retention


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
190,FAQ: Set Operations - Except,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Except” exercise from the lesson “Set Operations”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Except


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
191,FAQ: Usage Funnels - A/B Tests Results,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “A/B Tests Results” exercise from the lesson “Usage Funnels”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise A/B Tests Results


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
192,FAQ: Usage Funnels - What is a Funnel?,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “What is a Funnel?” exercise from the lesson “Usage Funnels”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise What is a Funnel?


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
193,FAQ: First- and Last-Touch Attribution - First versus Last,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “First versus Last” exercise from the lesson “First- and Last-Touch Attribution”.
Paths and Courses
This exercise can be found in the following Codecademy content:
FAQs on the exercise First versus Last


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
194,FAQ: Queries - Is Null,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Is Null” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Is Null


 When storing missing data, should I store them as NULL ?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
195,FAQ: Queries - Or,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Or” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Or


 In a SQL query, can we write conditions that utilize both AND and OR ?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
196,FAQ: Queries - Where,"Get Help,Git",,1,"

This community-built FAQ covers the “Where” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Where


 Can we compare values of two columns in a WHERE clause?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
197,FAQ: Manipulation - Select,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Select” exercise from the lesson “Manipulation”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Select


What order are rows selected from a table?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
198,FAQ: Manipulation - Statements,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Statements” exercise from the lesson “Manipulation”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Statements


Does every SQL statement follow this structure?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
199,Learn SQL Manipulation – Manipulation – Introduction,"Get Help,Git",,2,"

This community-built FAQ covers the “Introduction” exercise in Codecademy’s lessons on SQL.
FAQs on the Codecademy SQL exercise Introduction





Join the Discussion. We Want to Hear From You!
Have a new question or can answer someone else’s?  Reply () to an existing thread!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources about SQL in general? Go here!
Want to take the conversation in a totally different direction? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account, billing, Pro, or Pro Intensive? Reach out to our support team!
None of the above?  Find out where to ask other questions here!
","
Other FAQs
The following are links to additional questions that our community has asked about this exercise:

This list will contain other frequently asked questions that aren’t quite as popular as the ones above.
Currently there have not been enough questions asked and answered about this exercise to populate this FAQ section.
This FAQ is built and maintained by you, the Codecademy community – help yourself and other learners like you by contributing!

Not seeing your question?  It may still have been asked before – try searching for it by clicking the spyglass icon  () in the top-right of this page.  Still can’t find it?  Ask it below by hitting the reply button below this post ().
"
200,FAQ: Aggregate Functions - Max / Min,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Max / Min” exercise from the lesson “Aggregate Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Max / Min


If multiple rows have the minimum or maximum value, which one is returned when using MAX / MIN ?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
should these commands return the same?? can’t I use aggregate function in conditioning??
select max(price) from fake_apps;
–>
SELECT price
FROM fake_apps
where price=MAX(price);
"
201,FAQ: Code Challenge: Multiple Tables - Songify Introduction,"Get Help,Git",,1,"

This community-built FAQ covers the “Songify Introduction” exercise from the lesson “Code Challenge: Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Songify Introduction


How are database tables separated?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
202,FAQ: Code Challenge: Multiple Tables - Code Challenge 7,"Get Help,Git",,1,"

This community-built FAQ covers the “Code Challenge 7” exercise from the lesson “Code Challenge: Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Code Challenge 7


Do the tables have to have the same number of columns when combining them?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
203,FAQ: Code Challenge: Multiple Tables - Code Challenge 8,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Code Challenge 8” exercise from the lesson “Code Challenge: Multiple Tables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Code Challenge 8


Does making a “mini” dataset actually create a new table?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
204,FAQ: Why Learn SQL? - A Day in the Life - Data Analyst,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “A Day in the Life - Data Analyst” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise A Day in the Life - Data Analyst


What are some tools that a data analyst uses?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
205,FAQ: Why Learn SQL? - Exploring Data with SQL,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Exploring Data with SQL” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Exploring Data with SQL


What can be stored in databases?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
206,FAQ: Why Learn SQL? - Analyzing User Churn,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Analyzing User Churn” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Analyzing User Churn


Why is it helpful to know the churn rate?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
207,FAQ: Why Learn SQL? - Determining Web Traffic Attribution,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Determining Web Traffic Attribution” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Determining Web Traffic Attribution


Why is web traffic attribution important to determine?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
208,FAQ: Why Learn SQL? - Begin Your Journey,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Begin Your Journey” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Begin Your Journey


What other responsibilities do data analysts have?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
209,"FAQ: Date, Number, and String Functions - Dates III","Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Dates III” exercise from the lesson “Date, Number, and String Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Dates III


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hello, i’m currently working on my SQL skills, and came across this exercise (dates II)
My solution gave an error, but i don’t see that much of a difference between my solution and the given answer?
My solution:
select count(*) as count_baked_goods
, date(delivery_time)
from baked_goods
group by date(delivery_time)
;
The given answer:
SELECT DATE(delivery_time), count(*) as count_baked_goods
FROM baked_goods
GROUP BY DATE(delivery_time);
both gave the same output btw.
"
210,FAQ: Conditional Aggregates - CASE WHEN,"Get Help,Git",,5,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “CASE WHEN” exercise from the lesson “Conditional Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise CASE WHEN


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi everyone!! Can anyone explain how “GROUP BY” statements work?  I’ve seen a few explanations but none of them seem consistent with the way we have used them in the course, or at least i’m not catching on.  Any help is appreciated! thanks

GROUP BY let’s us specify which columns from the table to use and their order from left to right.
GROUP BY 1

Notice that column 1 is elevation_tier?

I see! and ORDER BY does the order from top to bottom?
thank  you!




 textninja33908:

ORDER BY does the order from top to bottom?


Correct; ORDER BY is a sort order clause, hence the parameters, ASC and DESC.
"
211,FAQ: Code Challenges - Code Challenge 1,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Code Challenge 1” exercise from the lesson “Code Challenges”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
Learn Node-SQLite
FAQs on the exercise Code Challenge 1


Why use  db.each()  instead of  db.all()  or  db.get()  in node-sqlite?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi, i’m a little confused with this sections code challenges.
I don’t understand why this web development path has code challenges about problems that don’t come until later in the path. What I mean is, so far i’m at the 12th checkpoint and haven’t encountered any lessons on SQL or the like, and the next lesson is about SQL and the code i’m encountering in this code challenge. I’m concerned maybe this code challenge is in the wrong position because just from this paths timeline it’d be impossible to finish these challenges because iv’e never learned about them yet.
And in- case your thinking maybe I just skipped a lesson by accident or didn’t pay attention. The hint for the first code challenge has a link that leads to a future lesson that I can’t even view because I get a message saying I must start from the beginning of that lesson. Which further proves that this code challenge must be in the wrong part of the web development path.
So if any information could be given soon I would really appreciate it. Until then i’m just gonna skip these code challenges and go on because if I try to do them I would not be able to retain the information and would have to just be given the solution.

It ended up getting resolved it was a problem on the placement of the project.
"
212,FAQ: Advanced Aggregates - Reorder Rates,"Get Help,Git",,5,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Reorder Rates” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Reorder Rates


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
can somebody please explain me reorder ratio. It says that lower ratio means reorders. but for example if I have 10 orders and 8 people order for first time and 1 person reorders so that makes 9 distinct persons. so ratio=10/9=1.1
but if 5 people each order twice then no of orders=10 but no of distinct person=5. so ratio=10/5=2. so higher ratio means reorder which is contradicting.

There is a logical mistake in Exercise 11 description (that is bad for the commercial product of such level):

A lower ratio means most of the orders are reorders. A higher ratio means more of the orders are first purchases.

And is correct in the next exercise:

… they have a very high reorder rate. That means these smoothie customers are strong repeat customers.

Reorder ratio is an average rate that shows us how many cakes were bought by a person.
Consider the following example:
cakes     persons     c. per p.
100    /  200      =  0.5
100    /  100      =  1.0
100    /  50       =  2.0
100    /  10       =  10.0

That means that everything that <= 1 tells that a person bought a cake at best, 1.5 - that at least half of the persons bought a cake twice and 2.0 tells about two cakes per person. Yes, 2.0 may mean that 40 persons bought a cake once and 10 persons bought 6 times a cake but the more details you want to know the deeper analysis you should make and the more expensive it will be. 

But how do you explain that low ratio means people are reordering and high ratio means new orders
Vartika Kedia

https://discuss.codecademy.com/t/re-order-rates-logic/21791
It seems other people noticed the same thing back in 2016. Seems it still hasn’t been fixed…
"
213,FAQ: Common Metrics - Daily Active Users,"Get Help,Git",,2,"

This community-built FAQ covers the “Daily Active Users” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Daily Active Users


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
“Also notice that we include  platform  in both the  select  and  group by  clauses.” platform is not included in your query.
"
214,FAQ: Why Learn SQL? - Creating Usage Funnels,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Creating Usage Funnels” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development
FAQs on the exercise Creating Usage Funnels


How can we find out the percentage of users who went from browse to purchase?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why isn’t the full table name typed out? In the example code just the single letter ‘c’ is used for the ‘checkout’ table. If I have multiple tables that start with the letter ‘c’ will I have a problem?
SELECT ROUND(
100.0 * COUNT(DISTINCT c.user_id) /
COUNT(DISTINCT b.user_id)
) AS browse_to_checkout_percent,
ROUND(
100.0 * COUNT(DISTINCT p.user_id) /
COUNT(DISTINCT c.user_id)
) AS checkout_to_purchase_percent
FROM browse b
LEFT JOIN checkout c
ON b.user_id = c.user_id
LEFT JOIN purchase p
ON c.user_id = p.user_id;
"
215,FAQ: Why Learn SQL? - Exploring Data with SQL,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Exploring Data with SQL” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Analyze Data with SQL
FAQs on the exercise Exploring Data with SQL


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
216,FAQ: Conditional Aggregates - SUM(CASE WHEN ),"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “SUM(CASE WHEN )” exercise from the lesson “Conditional Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise SUM(CASE WHEN )


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I would like to have a row printed out only when the distance of the airline being worked with is not zero.  I’ve tried:
FROM flights  where sum>0
FROM flights where total_united_flight_distance>0
FROM flights where sum(CASE WHEN carrier = ‘UA’ THEN distance ELSE 0 END)>0
nothing is working.
any ideas?
"
217,FAQ: Queries - Order By,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Order By” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Order By


 In SQL, can we apply ORDER BY with multiple columns?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
In what case do we need to specify ASC explicitly? If it’s the default, we never need it, do we?

You wouldn’t need to, I don’t believe, in a standard SQL query, but I suppose one might use it if the query were written in function in a language like Python or JavaScript where the ORDER BY direction [ASC or DESC] might be dependent on some condition.
"
218,FAQ: Queries - Introduction,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Introduction


What types of data can SQLite databases store?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
let say I have array like this [‘myname’, ‘hobby’, 23] and I want to use that to on VALUES ( …) to fill some database , is that possible ? and not change the 23 to be string , and must be number
but how about If we have many kinds of values and keys are diffirent ?? I do love to know if that possible or no to make that array to put on values without change the typeof that value and must be same like DATA TYPE of columns we create
"
219,FAQ: Common Metrics - ARPU 2,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “ARPU 2” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise ARPU 2


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
220,"FAQ: Date, Number, and String Functions - Strings","Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Strings” exercise from the lesson “Date, Number, and String Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Strings


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
How do you type that vertical line symbol?
I had to resort to copying and pasting it from the exercise.
"
221,FAQ: Queries - Distinct,"Get Help,Git",,8,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Distinct” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Distinct


 Can we apply DISTINCT to a SELECT query with multiple columns?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
You should explain which “Nails” of the three is showed after doing this query “SELECT DISTINCT tools
FROM inventory;”. I think it’s the first.

3 posts were split to a new topic: After selecting distinct values how do you sort the result, largest to smallest, alphabetically, etc?

How can I order the results of the DISTINCT command whether ASC or DESC?

In the “Distinct” exercise, sometimes we see some NULL values in the output. How could that be explained? Isn’t the DISTINCT argument supposed to display only the already existing values that are unique?

Great question! Quote from the SQLite documentation:

SQLite was modified to work the same as Oracle, PostgreSQL, and DB2. This involved making NULLs indistinct for the purposes of the SELECT DISTINCT statement and for the UNION operator in a SELECT. NULLs are still distinct in a UNIQUE column. This seems somewhat arbitrary, but the desire to be compatible with other engines outweighed that objection.

This means that SELECT DISTINCT treats NULL like any other value - it is allowed, but duplicates will be removed.
To learn more about how the SQLite handles NULL values please refer to -> NULL Handling in SQLite Versus Other Database Engines.

Using ORDER BY clause 




 fjcn97:

You should explain which “Nails” of the three is showed after doing this query SELECT DISTINCT tools FROM inventory;


The whole idea of DISTINCT is that it does not matter. These are duplicated values.
"
222,FAQ: Why Learn SQL? - Analyzing User Churn,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Analyzing User Churn” exercise from the lesson “Why Learn SQL?”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Analyze Data with SQL
FAQs on the exercise Analyzing User Churn


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
For lesson 4, Analyzing User Churn.


When getting “churn_rate”, why can’t we simplified the syntax by using the existing strings that we just named early like below? Instead of typing out the whole thing?
ROUND(100.0 * ‘march_cancellations’ / ‘enrollments’) AS churn_rate


Some lessons say we should use ’ after AS to tag the names. but the example didn’t. Should we use ’ or not?



How do we learn how to answer this question? What recommendations would you make to Codecademy based on Catherine’s analysis?   The churn rate was 25% but I do not know what recommendation to make to help codecademy from the analysis.
"
223,FAQ: Common Metrics - ARPU 2,"Get Help,Git",,8,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “ARPU 2” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise ARPU 2


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Question about the join statement: suppose there are days where gameplays occur, but no purchases occur.  My initial though was to use a left join of daily_revenue into daily_players on date.  Given this use case,  would this make more sense instead of the inner join used in the exercise?

Why doesn’t this code work, in the same way as using the with clause?
select date(created_at), (round(sum(price), 2) / count(distinct user_id))
from purchases join gameplays on date(created_at)
group by 1
order by 1;

Couldn’t this be done with a simple inner join on created_at?




 yjlu1989:

Why doesn’t this code work, in the same way as using the with clause?
select date(created_at), (round(sum(price), 2) / count(distinct user_id))
from purchases join gameplays on date(created_at)
group by 1
order by 1;


I also got this. It looks like the answer is set as not wanting us to round the ARPU.

I was trying to practice this before looking at the instruction, which I didn’t use “With” clause. However, the result is different. It looks like it calculates “p.price” as total revenue, not the daily revenue we are looking for. Is there any way to fix this based on my coding, without using “With”?
select date(g.created_at), round(1.0*sum(p.price)/count(distinct g.user_id), 2) as ARPU
from gameplays as g
left join purchases as p
on g.user_id = p.user_id
where refunded_at is null
group by 1
order by 1;

Good point. However, I think that if it happened what you describe (in a specific date, 0 purchases but some users playing the game),  inner join can still be applied effectively as it will just give us a zero result (ARPU) for that date (numerator -> 0  / denominator -> number of players).
Nevertheless, your comment made me wonder what would happen if vice versa was the case, I mean if in a specific date some people made a purchase but no user would play the game. I realise that practically this is almost impossible , but in such a rare case what would be the result? The denominator is 0, the code cannot calculate the output (ARPU) . Would a left join be here the appropriate method? I don’t know.

I think that the use of “with” clauses in one-way in this exersice. This is because the calculation of ARPU needs seperate calculations which have to be done from two tables (daily revenue from purchases table and daily users from gameplays) .
These subcalculations have to be done beforehand, saved in temporary tables by using “with” and then we can finally make the division ,  the join by date and take the ARPU. Unfortunately, this cannot be done in a single query as you imply although you use the join.
In general as far as I’ve understood, use of joins without using “with” clauses is a practice when we just want to match rows from different tables (based of course in a common column) but at the same time no calculations inside the tables have to be done;only joining/extracting the data as they have been put in the original tables.
"
224,Guide: Setting up SQL / MySQL / MongoDB,"Get Help,Git","resource-wiki,guide",1,"

Codecademy Community FAQs on General Coding Questions.png1000×208 146 KB

Guide: Setting Up SQL / MySQL / MongoDB
MySQL
This guide for a “n00b” getting started with SQL on a Mac is very helpful.
Other options:

MySQL – https://dev.mysql.com/doc/mysql-getting-started/en/

SQL Server – https://www.microsoft.com/en-us/sql-server/sql-server-downloads


If this is too complex and you just want to practice, try SQLfiddle.
MongoDB
Codecademy has a guide here.
If you’re unable to install MongoDB locally, a great alternative we recommend to use is mLab. mLab is DaaS (Database-as-a-Service) where you can have your MongoDB in the cloud. It has a sandbox level account which is free indefinitely and comes with one database.

Not The End
Please reply to this thread with your own resources, advice, and feedback! We made this post a wiki so it can be updated and maintained by the community, we’re just starting them off.  See our other guides here.
",
225,"What if there are less than 20 distinct names that start with 'S', and we set the limit to 20?","Get Help,Git",,1,"
Question
In the context of this code challenge, if there are less than 20 distinct names that start with ‘S’, what happens if our LIMIT value is greater than this?
Answer
In SQL, the LIMIT statement acts as an upper bound for the number of rows that will be retrieved from the result set.
As a result, if your LIMIT value was set to 20, but there are less than 20 rows that match the query, then it will only return what is there, even if there were no matches, because LIMIT only acts as an upper bound, not a strict requirement for the amount of rows that must be returned.
",
226,How can we find out the percentage of users who went from browse to purchase?,"Get Help,Git",,1,"
Question
In the context of this exercise, how can we find out the percentage of users who went from browse to purchase?
Answer
To do this, we just need to find out the percentage of users from browse to checkout who went to purchase.
The percent of users from browse to checkout was 24%, and the percent of these users from checkout to purchase was 89%.
So, the percent from browse to purchase is simply 24% of 89%, or
.24 * .89 = .2103, or around 21.03%.
To calculate this using a query, rounded to 2 decimal places, you can modify the statement to the following,
SELECT
ROUND(
 (100.0 * COUNT(DISTINCT c.user_id) / COUNT(DISTINCT b.user_id))
 *
 (100.0 * COUNT(DISTINCT p.user_id) / COUNT(DISTINCT c.user_id)) 
 / 100.0, 2)
AS browse_to_purchase 
FROM browse b
LEFT JOIN checkout c
ON b.user_id = c.user_id
LEFT JOIN purchase p
ON c.user_id = p.user_id;

",
227,Can columns from different tables have the same name?,"Get Help,Git",,1,"
Question
Can columns from different tables have the same name?
Answer
Absolutely! You can have as many columns with the same name as you want, just as long as each of those columns belong to a different table. You can not have multiple columns with the same name from the same table.
",
228,How to know when a value is unique in a row?,"Get Help,Git",,1,"
Question
How to know when a value is unique in a row?
Answer
Sometimes we will be able to plan and create our databases, that will allow us to think about which values (besides an id) will most likely be unique to the item in each row, but most often we will be working with already existing databases and tables, yet there is no reason to fret, we will not be alone and there is most likely a visual schema somewhere where we can see what are the columns that the table has and what kind of values it contains for example:

Users Table




id int not null unique,
name string,
email string not null unique,
age int



in this case, we have an id, but we can deduce that email will also be a unique value.
As we keep on practicing SQL being on its own or using SQLite this details will become clearer, and in general even  in a work environment , we will be told how the table looks like so we can have an idea of what we are working with.
",
229,Are SQL placeholders safe?,"Get Help,Git",,10,"
Question
Are SQL placeholders safe?
Answer
Placeholders are a very efficient way to pass values to a SQL query but they can be a target to value injection which simply is when someone, not the user will use the placeholder to insert a value that can recover sensitive data. For that reason, masking placeholders with ? can be a safer approach, for example, instead of:
//using node SQLite
const selectByGenre = genre => {
  db.all('SELECT title FROM Song WHERE genre = $genre', {
    $genre: genre
  }, (err, row)=>{
    console.log(row);
  })
}

//this would slightly better

const selectByGenre = g => {
  db.all('SELECT title FROM Song WHERE genre = ?', 
    g, (err, row)=>{
    console.log(row);
  })
}

It is a slight difference but it keeps the query cleaner ('sanitized' by SQLite as it is called) which means it does not specify what kind of property it is, the only thing to watch for is that the amount and order of the ? placeholders have to match the values passed.
","
Why is it “safer” to use  the ? placeholders instead of the $property_name placeholders?




 axelkaban:

Placeholders are a very efficient way to pass values to a SQL query but they can be a target to value injection which simply is when someone, not the user will use the placeholder to insert a value that can recover sensitive data. For that reason, masking placeholders with ? can be a safer approach


It literally explains the reason in the first two sentences. Placeholders can be exploited to inject malicious code. Additionally, a placeholder often describes, what kind of data input is expected (in our above example: genre). A simple “?” does not.

It’s always advisable to question statements about security.
In this case, I have to say that the question made by @masakudamatsu was in place. This article is simply wrong. There is no difference if you define parameters via ? or via an object with named properties.



 barelyhere:

Additionally, a placeholder often describes, what kind of data input is expected (in our above example: genre). A simple “?” does not.


I think that I would be able to guess that from WHERE genre = ?  And if I don’t have access to the source code then I would not even know that the parameter $genre was used.
No difference.




 axelkaban:

It is a slight difference but it keeps the query cleaner ( 'sanitized' by SQLite as it is called) which means it does not specify what kind of property it is, the only thing to watch for is that the amount and order of the ? placeholders have to match the values passed.


This is a very wrong and very disturbing definition of “sanitization”.

Wait, so this whole explanation in the original post is wrong?
Does using ? instead of a placeholder make any difference at all?
If not, I am of course sorry for answering prematurely…




 barelyhere:

Wait, so this whole explanation in the original post is wrong?


Unfortunately, yes.



 barelyhere:

Does using ? instead of a placeholder make any difference at all?


No. Use what you prefer, what feels nicer. This is just a matter of preference. I usually prefer to use named placeholders - for me, it is easier to see which value corresponds to a given placeholder.



 barelyhere:

If so, I am of course sorry for answering prematurely…


Nothing bad happened, this is not your fault (this is the fault of the author of this article)  I just wanted to step in and clarify.
I will add this article to my list and will try to correct it as soon as possible. Honest apologies for the confusion.

Thank you for your response, @factoradic! It’s very helpful.
Talking about security, CodeCademy’s Skill Path on back-end web development does not teach anything about it, even though it’s obviously a very important topic for back-end development. Would you mind pointing to where we can learn how to, for example, prevent “value injection” and other programming techniques for security? Do you have any recommended books, websites, JS libraries, etc.?

You’re very welcome 
I always prefer learning resources that are language agnostic. I don’t want to read about securing Spring applications, I want to learn how to secure any application, no matter in what language/framework it was written. On this basis, I can definitely recommend one book - “The Tangled Web: A Guide to Securing Modern Web Applications” by Michał Zalewski. It’s not a comprehensive guide, but this book explains how the web works and what are possible security flaws (and how you could solve them). But it is not written specifically for Node.js developers or Ruby on Rails developers, this book is for all web developers that would like to learn a bit about security.




 masakudamatsu:

where we can learn how to, for example, prevent “value injection”


This is interesting in the context of this FAQ. I would like to show how the problem of SQL injection is handled by the sqlite3 library itself. I will not explain what SQL injection is, there are a lot of articles about this on the web. I would prefer to focus on a simple example.
I have a database called test_database that currently has a single table test_table in which I store ids from 1 to 8. Nothing useful, but it’s just for the sake of example. We have a website with a form where users can type a single id and record with this id will be selected, deleted, does not really matter.
SQLite always sanitizes placeholders, contrary to what Axel wrote. How does it work? Take a look at this code:
const sqlite3 = require('sqlite3').verbose();

let db = new sqlite3.Database('./db/test_database.db', (err) => {
    if (err) {
        console.error(err.message);
    }
    console.log('Connected to the test_database.');
});

const maliciousParameter = '1 OR TRUE';
const query = 'SELECT * FROM test_table WHERE id = ' + maliciousParameter;

db.each(query, (err, row) => {
    if (err) {
        console.error(err.message);
    }
    console.log(row);
});

db.close((err) => {
    if (err) {
        console.error(err.message);
    }
    console.log('Closed the database connection.');
});

maliciousParameter is supposed to store value sent in the form. So we see that our user would like to get some more information from our table, not only a single record, but all the records that are in the queried table. This might be dangerous for example when we are retrieving information about the user - we would not like to return information (email, username, hashed password) about all the users, right?
This code will result in this output:
Connected to the test_database.
{ id: 1 }
{ id: 2 }
{ id: 3 }
{ id: 4 }
{ id: 5 }
{ id: 6 }
{ id: 7 }
{ id: 8 }
Closed the database connection.

So the attack was successful. Let’s see what happens if we use placeholders. I decided to use an object with named properties to simply show that this type of placeholder will also be sanitized:
const maliciousParameter = '1 OR TRUE';
const query = 'SELECT * FROM test_table WHERE id = $id';

db.each(query, {
    $id: maliciousParameter
}, (err, row) => {
    if (err) {
        console.error(err.message);
    }
    console.log(row);
});

And the result is:
Connected to the test_database.
Closed the database connection.

This query was executed, but it did not return any records. Because the placeholder was used the query was trying to select a record from test_table with id equal to ""1 OR TRUE"". This is how sqlite3 prevents from SQL injection when placeholders are used, although there are many different policies that you should incorporate to prevent injection attacks.
I wanted to show that sometimes all you have to do is read the documentation… but this is only possible when you know what you are looking for 

Thank you, @factoradic, (sorry for my delayed response) for your suggestion on a book on security. I’ll definitely have a look. I agree with you that language-agnostic resources is the best way to learn something new.
For value injection, I’m a bit puzzled by the maliciousParameter set to be '1 OR TRUE' in your example. But this article by W3Schools helped me understand it. SQL’s WHERE keyword evaluates whether the following statement is true or false. 1 OR TRUE is always true for all id’s. So you get all users. But once the maliciousParameter is the value for a placeholder, it cannot be a true or false statement. So it doesn’t work. Am I correct to understand your example this way?

Sorry, that so late 



 masakudamatsu:

But once the maliciousParameter is the value for a placeholder, it cannot be a true or false statement. So it doesn’t work. Am I correct to understand your example this way?


You are correct. SQLite is quite problematic because there are no strict column types. So the only thing that might be not completely accurate is:



 masakudamatsu:

So it doesn’t work.


This query will be executed in the database and it might even give us a result. So it works, but not in a malicious way. The query will look for any record from the test_table with id equal to 1 OR TRUE (literally, this has to be the value, this is not an expression). And because SQLite does not have strict types - you can add a row with id ""1 OR TRUE"" (text) even if id is a numerical column.
"
230,Does SQL read all datatypes?,"Get Help,Git",,1,"
Question
Does SQL read all datatypes?
Answer
SQL is in itself a management language, it does not discriminate what it stores, as a matter of fact, SQL in itself as a language does not know, the difference comes when we talk about database systems that use SQL, some of them require us to declare what type will the data stored will be so it can allocate the necessary memory space for it, some of those systems are MySQL, PostgreSQL, MS access, among others, their most common data types are:

CHAR() which is based on the maximum amount of characters it will be allowed to contain
VARCHAR() which is pretty much like char but for variable size strings, again we can set the maximum amount of characters in between the parenthesis
TEXT has a maximum length of 65,535 characters
INT() any integer number where you can specify the maximum length
FLOAT() alike to INT but with decimals
DOUBLE() if you really need to store a really large number
BLOB if we were to store an array or object. Holds up to 65,535 bytes of data
DATE  stores a date in the format YYYY-MM-DD.

The better news is that  SQLite is a dynamic type system which means that we do not need to specify the type at the time of creation and if we were and then inserted a value with another type, it will overwrite the requirement to accommodate, yet it does have the following options:

NULL Meaning: missing information or unknown.
INTEGER For whole numbers (either positive or negative). An integer can have variable sizes such as 1, 2,3, 4, or 8 bytes.
REAL For real numbers with decimal values that use 8-byte floats.
TEXT Used to store character data. The maximum length of TEXT is unlimited. SQLite supports various character encodings.
BLOB Just like the other systems it can store any kind of object.  The maximum size of BLOBs is unlimited.

",
231,Why learn SQL?,"Get Help,Git",,1,"
Question
What is SQL and why should I learn it?
Answer
SQL (Structured Query Language) is a programming language used to communicate with data stored in a relational database management system. The SQL language is widely used today across web frameworks and database applications as well as by many companies such as Microsoft, Yahoo, Dell, and countless more!
Knowing SQL gives you the freedom to explore your data, and the power to make better decisions. By learning SQL, you will learn concepts that apply to nearly every data storage system. SQL is also a great entry point to programming because the syntax is similar to the English language, which makes it relatively easy to write, read, and interpret.
",
232,What are the types of relational database management systems?,"Get Help,Git",,1,"
Question
What are the different types of relational database management systems (RDBMS) and when do we use which?
Answer
Popular RDBMS’s include MySQL, SQLite, PostgreSQL, and more:


MySQL is generally used for web development. It is often accessed using PHP because PHP talks directly to the server and can run inline queries right in our file. With that said, we don’t always use PHP or have to use it, as a lot of users now wrap their database queries in an API layer and contact that through a front end.

SQLite is a relational database stored in a single file which comes in handy for low traffic sites, sites that don’t need a seperate DB on a server, or even phone applications that want to store data relationally on the local phone.

PostgreSQL is another relational database that is popular for web applications due to its support of JSON (good for passing data between the web application and server), which is why PostgreSQL is starting to gain popularity. Its main disadvantage, however, is that it is slower in performance than other databases such as MySQL.
Other choices include OracleDB and Microsoft SQL Server, but they are not open source databases and can be expensive to use.

",
233,How do I get set up to work with databases locally?,"Get Help,Git",,1,"
Question
How do I get set up to work with databases locally?
Answer
The courses on Codecademy currently uses SQLite. If you are interested in working locally, feel free to download DB Browser for SQLite, a great tool to start with for creating databases and executing SQL queries! See here to download some practice datasets.
",
234,What do the numbers refer to in GROUP BY and ORDER BY clauses?,"Get Help,Git",,1,"
Question
What do the numbers refer to in GROUP BY and ORDER BY clauses?
Answer
The numbers are a way to refer to the columns in the SELECT statement (ie. 1 is the first column selected, 2 is the second column selected, etc). For example, this:
SELECT col_A, col_B
FROM tbl
ORDER BY col_A;

is equivalent to:
SELECT col_A, col_B
FROM tbl
ORDER BY 1;

",
235,Do aliases need to be enclosed in quotes?,"Get Help,Git",,1,"
Question
Do aliases need to be enclosed in quotes?
Answer
Quotes are not required for aliases unless the name contains whitespace. For example, the following query is fine:
SELECT name AS Movie
FROM tbl;

but quotes would be needed here:
SELECT name AS 'Movie Title'
FROM tbl;

",
236,Is the AS keyword optional when creating an alias?,"Get Help,Git",,1,"
Question
Is the AS keyword optional when creating an alias?
Answer
Yes, the AS keyword is optional and is just syntactic sugar (ie. syntax that helps make the code easier to read and understand). For example, this:
SELECT imdb_rating AS IMDB
FROM tbl;

is equivalent to:
SELECT imdb_rating IMDB
FROM tbl;

",
237,Why do we use SQL aliases?,"Get Help,Git",,1,"
Question
What are SQL aliases and why do we use them?
Answer
SQL aliases are temporary names given to a column or table.
Column aliases are often used for changing the name of the column that is displayed in the result. This can help make the column name more readable:
SELECT 2 * amt AS doubled_amount
FROM tbl;

Table aliases are often used when working with multiple tables to help make the query cleaner and more readable. Especially if our tables have long names, aliases can make it easier for when we need to reference a table, such as in the SELECT statement or ON clause:
SELECT p.user_id,
  p.play_date,
  s.title
FROM plays AS p
JOIN songs AS s
  ON p.song_id = s.id;

",
238,When do we use the HAVING clause?,"Get Help,Git",,1,"
Question
When do we use the HAVING clause, and how does it relate to the GROUP BY clause?
Answer
The GROUP BY clause will group together all rows that have the same value in the column(s) specified, and collapse them into a single row in the returned results. (Note: It is often used with aggregate functions in the SELECT statement for the non-grouped columns). For example:
-- returns total orders for each month
SELECT month, COUNT(order_id)
FROM tbl
GROUP BY 1;

When we use GROUP BY, we also have the option to use the HAVING clause to filter these groups even further:
-- returns total orders for each month, but only for months where total is greater than 100
SELECT month, COUNT(order_id)
FROM tbl
GROUP BY 1
HAVING COUNT(order_id) > 100;

You can see more documentation and examples here and here!
",
239,Does it matter what order we join the tables in a query?,"Get Help,Git",,1,"
Question
Does it matter what order we join the tables in a query?
Answer
It depends.
When we join two tables, the rows of each table will be matched together based on their value in a common column specified by the ON clause.
For INNER JOINs, only rows that matched in both the left and right tables will be returned in the results - so it does not matter the order in which you join the tables.
However, for LEFT JOINs, all rows in the left (first) table will be returned, along with any matched rows from the right (second) table. In this case, it may matter which order you join the tables, as any unmatched rows from the right table are not returned in the results.
See here to help visualize this!
",
240,What is the difference between UNION and UNION ALL?,"Get Help,Git",,1,"
Question
What is the difference between UNION and UNION ALL?
Answer
When combining data from multiple tables, UNION will remove duplicates in the resulting table (ie. rows where the values in all selected columns are the same), whereas UNION ALL will not.
",
241,What are NULL values?,"Get Help,Git",,1,"
Question
What are NULL values, and how do I return them in my query?
Answer
In SQL, NULL represents a field with missing data.
Since NULL has no value, it cannot be compared using comparison operators such as != (since no value is actually “equal” or “unequal” to it).
For example, let’s say the response column in our table below contains either 'Y', 'N', or NULL (ie. for missing response). The following query would only return rows where response equals to 'Y'. Rows where response is NULL would not be returned:
SELECT *
FROM tbl
WHERE response != 'N';

We can only use IS NULL or IS NOT NULL to deal directly with NULL values. The below query will return both rows where response equals to 'Y' and rows where response is NULL:
SELECT *
FROM tbl
WHERE response != 'N'
OR response IS NULL;

You can read more about NULL here!
",
242,FAQ: Common Metrics - 1 Day Retention 3,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “1 Day Retention 3” exercise from the lesson “Common Metrics”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise 1 Day Retention 3


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Had trouble following this exercise’s solution and tried to do it my way instead, seems to be working too, even tho I wrote way more lines of code, so it’s less efficient I think. Just sharing in case someone might find it usefull.
WITH ret AS (
SELECT DATE(a.created_at) AS d1, COUNT(DISTINCT a.user_id) AS returning_users
FROM gameplays AS a
JOIN gameplays AS b
ON a.user_id = b.user_id
WHERE DATE(b.created_at) = DATE(d1,’+1 day’)
GROUP BY 1),
daily AS(
SELECT DATE(created_at) AS d1, COUNT(DISTINCT user_id) AS daily_users
FROM gameplays
GROUP BY 1)
SELECT ret.d1, ROUND (100 * returning_users / daily_users) AS day_retention
FROM ret
INNER JOIN daily
USING (d1)
GROUP BY 1;

Is there a reason why we use date(datetime(g2.created_at, ‘-1 day’))? Specifically, why we have “datetime” in there? Is this so we can add the modification ‘-1 day’? There isn’t an explanation, though I understand what is happening, as to why we need the datetime function. Thank you to anyone!

Why we must use “date(datetime(g2.created_at” instead of use “date(g2.created_at”?
"
243,"FAQ: Date, Number, and String Functions - Dates II","Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Dates II” exercise from the lesson “Date, Number, and String Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Dates II


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
In this exercise not using the date function will have the same result, but won’t let the user proceed.
What’s the point of using date on a column that has only a date in it?

Agreed. This whole ‘Table Transformations’ course seems like it’s been rushed together quickly, with some bad decisions made.
This exercise is a terrible example of using the date function.
I’ve learned from this course, so I guess it’s not like it’s unusable, but I’d say the whole course needs redoing to get it up to the level of other Codecademy courses.

As you imply, there are no data of actual time i.e. hour/minute/sec. in both the columns “manufacture/delivery time” of “baked_goods” table. Therefore, TIME  & DATETIME function  given in lessons Dates & Dates II,  practically are of no use in the code. When running the DATETIME or TIME function , the result in terms of time is always 00:00:00.
"
244,FAQ: Conditional Aggregates - Combining aggregates,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Combining aggregates” exercise from the lesson “Conditional Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Combining aggregates


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Codecademy’s solution is wrong and correct solution is at the link below




Mind the integer! Lesson 6/8 SQL


    [image] 
If you are doing the exercise you will notice the “GET CODE” gives you this: 
SELECT origin, 100.0*(sum(CASE WHEN carrier = ‘DL’ THEN distance ELSE 0 END)/sum(distance)) as percentage_flight_distance_from_delta FROM flights GROUP BY origin; 
And actually you get an unexpected result. 
Why? Because ‘distance’ has an integer property and an extra bracket after 100.0 makes everything inside the bracket an integer. 
So, all the fractions inside the bracket becomes integer say 0.66 will beco…
  



Once again, this module is plagued with unclear instructions. Here’s the text of the exercise:

Using the same pattern, find the percentage of flights from Delta by origin ( carrier = 'DL' )
In the query, alias the column as percentage_flight_distance_from_delta.

A literal reading of the first part would have the reader conclude the exercise is to determine the percent of the number of flights organized by origin, which would require a row sum [SUM(*)], but then the alias tells us we’re supposed to find the percentage of flight distance…
Perhaps the test creators are trying to teach future data scientists how to deal with unclear requests from management. Maybe there should be a section on business hermeneutics.

This entire course is disappointing - a lot of unclear instructions, e.g.
""1.
Using the same pattern, find the percentage of flights from Delta by origin (carrier = ‘DL’)
In the query, alias the column as
percentage_flight_distance_from_delta""
“Percentage of flights” would mean number of flights (COUNT), whereas the alias instruction is talking about flight distance (SUM).
Did someone at Codecademy even check before releasing this course? Make it good before you charge money.
"
245,FAQ: Advanced Aggregates - Grouping with Case Statements,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Grouping with Case Statements” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Grouping with Case Statements


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I do not understand the way in this course the subqueries are created.
Why are you not using the WITH-clause as in the Data Analysis Carreer path?
Are they equivalent?
Thanks!!!

The solution does not correctly give the %. Please double check the answer.
"
246,FAQ: Advanced Aggregates - Daily Counts,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Daily Counts” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Daily Counts


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
This doesn’t really get a count, it gets a list.
Wouldn’t it be more practical to put the DATE(ordered at) enclosed into a COUNT() in order to get a count of the orders?

Agreed- the question is misleading.
It says “Let’s get a count of daily orders”, which makes us think you want to see a COUNT() function, but the question actually asks for: “Complete the query… TO CAST THE TIMESTAMPS IN ordered_at TO DATES”.
To Codeacademy: This question is poorly worded. Please revise for future students.

The question asked is solved by the following, which is ‘incorrect’ to the bot
SELECT DISTINCT(date(ordered_at)), COUNT(*) FROM orders GROUP BY 1 ORDER BY 1 LIMIT 10;
Agreed that the question is horrible worded
SELECT date(ordered_at) FROM orders ORDER BY 1 LIMIT 100;
^^ this solves the question, without providing any COUNT or the orders,…just dates.
"
247,FAQ: Languages for Web Development - What is SQL?,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “What is SQL?” exercise from the lesson “Languages for Web Development”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Code Foundations
FAQs on the exercise What is SQL?


What are some other useful things that SQL lets us do?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi this might be a stupid question, but I was wondering why now the SQL code is all written in capital letters?
Why this: SELECT * FROM users;
And not this: select * from users;
I tried both in the online text editor and they both work but will this also work in the real world?
"
248,FAQ: Set Operations - Union,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Union” exercise from the lesson “Set Operations”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Union


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
It might be helpful to add a column to each of the tables so you can see where each brand came from, either the legacy table or the new table

SELECT brand, ‘l’ as ‘table_source’ FROM legacy_products
UNION
SELECT brand, ‘n’ as ‘table_source’ FROM new_products;

this gets the data
Query Results





brand
table_source





l



n


!it Jeans
n


12XLShop Inc.
l


1826
n





"
249,FAQ: Set Operations - Intersect,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Intersect” exercise from the lesson “Set Operations”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Intersect


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I typed in the exact answer to this lesson and yet it still came up being incorrect.

Hmm, you can also do this as an inner join (I know intersect is cleaner, but still):
SELECT DISTINCT new_products.category FROM new_products
JOIN legacy_products
ON new_products.category = legacy_products.category
ORDER BY new_products.category;

"
250,FAQ: Queries - And,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “And” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise And


 Is the AND used in BETWEEN the same as the AND operator used between multiple conditions?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
While doing this exercise I was able to use…
AND genre IS ‘horror’;
instead of
AND genre = ‘horror’;
Are those interchangable?
"
251,"FAQ: Date, Number, and String Functions - Numbers II","Get Help,Git",,7,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Numbers II” exercise from the lesson “Date, Number, and String Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Table Transformation
FAQs on the exercise Numbers II


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
https://www.codecademy.com/courses/sql-table-transformation/lessons/date-number-string-functions/exercises/numbers-ii?action=resume_content_item
For this problem, is the MAX or MIN times a combination of the cook_time and cool-down_time, or is it whichever one is highest or lowest? How come the MAX function gives a number of 5 for id 2, and for MIN function gives a number of 33 for id 2? What is this actually telling us here?
I got the answer correct, but do not understand what the result is actually telling us. Thanks

How can we find out MAX value from 2 tables added by UNION?
this doesn’t work:
SELECT MAX(SELECT cook_time FROM baked_goods
UNION
SELECT cool_down_time FROM baked_goods)
FROM baked_goods;



What you point out is correct. MAX should just give the highest value of the two and MIN the lowest. This is not the case when id=2 as you notice; also for  id = 13 or id = 20 as we see at the results. I really cannot explain it, is seems so illogical!

I noticed something odd when looking again at the database scema in particular the structure of the baked_goods table.
The values of cook_time and cool_down_time are defined to take “text” format instead of “integer” as I would expect since we are dealing with numbers.
Maybe that is why the results we are commenting are unusual, because the code calculates MIN & MAX comparing not numbers but words/letters (strings).
So, I remembered  from Python lessons , the concept of “lexicographical order”. I suppose this is related to all the above I mention.
I hope, someone more expert , would confirm that or give us his/her own explanation for the unusual results.

I finally had to just look at the solution because I was getting fed up with what should be an easy section.  The official solution is not correct because the time fields for bake_time and cool_down_time are text and not integers and are being compared by lexicographic order.
This entire section feels very poorly designed and tested compared to most of the rest of the SQL content.  This is a big reason why I’m on the fence about a paid codecademy subscription, I don’t really want to subscribe if the content quality varies this widely.

Hi,
Using this code, we can find the MAX or MIN of the two input columns:
SELECT id, MAX(cook_time, cool_down_time)
FROM baked_goods
GROUP BY 1
ORDER BY 1
LIMIT 10;

Essentially it checks if SELECT cook_time or SELECT cool_down_time is higher. Is there a way to actually stipulate whether or not something is cook_time or cool_down_time? The code that the exercise uses essentially shoves it all into a same column without noting from which column the value originally comes. I would say that that is the most vital information when making such a comparison.
Thanks,
-T
"
252,FAQ: Advanced Aggregates - Daily Count 2,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Daily Count 2” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Daily Count 2


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Is count(1) the same as count(*)?

@fjcn97 it seems to accept my code when I use ‘*’ in place of ‘1,’ so yeah I assume they are equivalent here. Anyone else want to weigh in?

Bit late but I found this explanations on stackoverflow (note that these are not from SQLite):


stackoverflow.com






What is the difference between count(0), count(1).. and count(*) in mySQL/SQL?


mysql, sql


  asked by
  
  
    Dhruv
  
  on 04:33PM - 17 Aug 13 UTC








mssqltips.com



SQL Server COUNT() Function Performance Comparison
This tip will explain the differences between the following COUNT function varieties: COUNT(*) vs. COUNT(1) vs. COUNT(column_name) to determine if there is a performance difference.







stackoverflow.com






Count(*) vs Count(1) - SQL Server


sql, sql-server, performance


  
  answered by
  
    gbn
  
  on 10:36AM - 03 Aug 09 UTC






They seem to return the same results, however most of the discussion as to the difference is in how SQL handles the query and how this impacts performance (could be legacy stuff as well as the language is around for decades): COUNT(0/1/‘whatever’) retrieves 0/1/‘whatever’ per record and then counts those, which does essentially the same as COUNT(*) does.
Bottom line seems to prefer COUNT(*) unless you’re explicitly excluding NULL values from row counts, i.e. COUNT(column_name).
-T
"
253,FAQ: Advanced Aggregates - Product Sum 2,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Product Sum 2” exercise from the lesson “Advanced Aggregates”.
Paths and Courses
This exercise can be found in the following Codecademy content:
SQL: Analyzing Business Metrics
FAQs on the exercise Product Sum 2


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
hello to everybody,
i need heipl. can someone tell  me, why in the second values in select we don’t need to specify the name. How do we get this percentage grouped by name?
the select quere uses only (sum(amount_paid)/(select sum(amount_paid) from order_items)*100.
for me it semms like every answer sould be 100.
sorry i can’t get it
many thanks in advice
zoia

Zoia,
I am just getting to this exercise, but the way I understand it only the numerator is affected by the GROUP BY.
In that way the numerator is the sum by item (name) and the denominator is the grand total, which includes all the items.

In the main query we calculate the revenue per name. This is then divided by the subquery, which simply sums up the total revenue across the rows. This is then multiplied by 100.0 to get a percentage.
You’re essentially combining these two tables:
SELECT name, SUM(amount_paid)
FROM order_items
GROUP BY 1
ORDER BY 2 DESC;
--> revenue per food item


SELECT SUM(amount_paid)
FROM order_items;
--> total revenue across food items (178311.5)

By combining them in one query:
SELECT name, ROUND(SUM(amount_paid)/(SELECT sum(amount_paid) FROM order_items)*100, 2)
FROM order_items
GROUP BY 1
ORDER BY 2 DESC;

The first query SELECT name, SUM(amount_paid) becomes the numerator, and SELECT sum(amount_paid) FROM order_items becomes the denominator. Within the ROUND() function, this division is multiplied by 100 to get a percentage, and then limited to two decimals. Swapping out the subquery for the value it calculates, 178311.5, would return the same table.
In regards to your questions 'Every answer should be 100 ': this would be the case if the denominator has the same value, however using the subquery makes sure that the denominator is the total revenue. Using the full query SELECT name, ROUND(SUM(amount_paid)/SUM(amount_paid)*100, 2) would accomplish that, however it wouldn’t be very useful in this context.
-T
"
254,FAQ: Queries - Like II,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Like II” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Like II


 When using SQL LIKE operators, how do we search for patterns containing the actual characters “%” or “_”?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Is there a way to search for patterns with a specific case. For example, “The” as opposed of “the”.
In RegEx we can use (?i).
Is it possible with SQL?
"
255,FAQ: Aggregate Functions - Sum,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Sum” exercise from the lesson “Aggregate Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise Sum


When do we use the COUNT() function or the SUM() function?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why it isn’t SELECT SUM(‘downloads’) with the ’ ’ in this case?

In this exercise, downloads is a column name. Column names are like variables in JavaScript. We do not need to enclose them with quotation marks (i.e. ' ').
We use quotation marks for string values as data entries or for renaming columns and tables with AS (see this lesson).

What happens when SUM is used with text?
Thanks!
"
256,FAQ: Queries - As,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “As” exercise from the lesson “Queries”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Web Development Data Science
Learn SQL
FAQs on the exercise As


Can we alias multiple columns in a single query?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
In the lesson, it says:

AS  is a keyword in SQL that allows you to  rename  a column or table using an alias.

and then:

When using  AS , the columns are not being renamed in the table. The aliases only appear in the result.

(emphasis mine). I find this confusing. It sounds like the AS keyword is actually used to add a name  to the column (additional name = alias). I.e. after running
SELECT imdb_rating AS 'IMDb'
FROM movies;

the imdb_rating column can now be addressed in further SQL statements either as imdb_rating or as IMDb, correct?
If I understood this correctly: What exactly is the point of doing that? Won’t it just be a source of errors if one thing gets two names?
"
