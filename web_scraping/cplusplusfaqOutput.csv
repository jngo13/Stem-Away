,Title,Categories,Tags,Replies,Post,Comment
0,About the C++ FAQ category,"Get Help,Git",,2,"
C++ is a very popular language for performance-critical applications that need to run fast and manage memory very efficiently. C++ is used widely in many different industries including game development, software engineering, and scientific computing.
","
Thank you for this information @annajia.li!
"
1,FAQ: Classes and Objects - Class Members,"Get Help,Git",,6,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Class Members” exercise from the lesson “Classes and Objects”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Class Members


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Moderators - there is a bug in this exercise.
The following is shown with the correct code:

I recommend going through it to see for yourself.
Here’s some screenshots of my code that generates the “Does Song have public: in it?” error.

2019-12-06_16-22-11.png707×1021 34.5 KB


2019-12-06_16-22-16.png716×1000 31.4 KB

When you view the solution it’s the exact same code but works…

If I remove the comment
// methods

it works…

Unfortunately unhelpful error message. Same happened to me (I didn’t declare the parameter’s type).

Same for me on that exercise… Frustrating as I had it all correct and was staring at it for an hour wondering what I had done wrong.

This was a poorly-done lesson.
The example for creating a class has the keyword “class”, as in:
class Song {

but the first hint says:
`Song` should be structured like this:
Song {

So does the keyword “class” belong there or not?
====
Instruction #2 says to make a new method:
`.add_title()` , a `void` method which accepts a `new_title` for a song. (Make sure this parameter has a different name than `title` .)

with no discussion about the leading dot.
Worse, we’re left to guess about the type for this method’s parameter. Is new_title a new type we haven’t come across before? It obviously isn’t supposed to be the name of the parameter, because the next line tells us to use (i.e., choose) a name other than “title”. If my choice of a name is part of the assignment, then this “new_title” phrase you’ve given me must be something different, such as that new type I’m wondering about, that I don’t remember reading about, and can’t find any information about. (The “Show solution” option eventually showed me that this was indeed supposed to be the name of the parameter. Why then tell me to use some name other than “title” as the parameter, if you’re going to tell me what name to use?)
====
The resources on this lesson’s page do not provide enough information to sort out these issues, so the only real solution is to choose the option to “Show the solution”. But that shows the solution for all of the steps in this lesson, which means the third step in this lesson gets completely skipped; I didn’t have a chance to even begin to look at that part of the challenge.
====
Later, after I had written most of this comment, I went back and looked at the third instruction’s solution (as I hadn’t yet had a chance to even begin to think about it / look at it before the lesson was over for me (see above)), and I see that I would have been confused about it because of the scope of “title”. There really should have been some discussion about the scope of attributes within a class; I saw
title = new_title

and wondered, “Where did ‘title’ come from?! It’s not defined/declared here in this method. And how does it get out of here back to the method/function call? There’s no “return title” statement. Is it a global variable?”
So i went back and looked around, and was reminded that it is in the attribute section of the “class Song”, and then realized those attributes must have global scope in all things “Song”-ish. Some discussion on these matters would have been helpful.
====
This whole exercise (as well as the previous one, but not as badly) feels like the author was in a hurry to leave work that day, and settled with doing a poorly-executed rush job.
"
2,FAQ: Code Challenge: C++ Functions - Introduction,"Get Help,Git",,9,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction” exercise from the lesson “Code Challenge: C++ Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Introduction


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Can someone explain what is mean by a function having “no return value” please.  The code below is returning something, given the parameters of “Beyonce”, “Knowles” is it not? so wouldn’t that be a value?
#include 
// Define introduction() here:
void introduction(std::string first_name, std::string last_name) {
std::cout << last_name << "", "" << first_name << "" "" << last_name << “\n”;
}
int main() {
introduction(“Beyonce”, “Knowles”);
}

I did something unnecessarily longer, but it still works.
void introduction(std::string first_name, std::string last_name)
{
  std::string f_name = first_name;
  std::string l_name = last_name;
  std::cout << l_name << "", "" << f_name << "" "" << l_name << std::endl;
}


Check this link out. See if it helps C++ Void Function

// version with user prompt
// Created by funkyvilla on 3/26/20.
// Copyright © 2020 funkyvilla. All rights reserved.
#include 
#include 
// function prototypes: getname, introduction (required if defining functions below main() )
void getname(std::string &first_name, std::string &last_name);      // passing first name and last name by reference/memory
void introduction(std::string first_name, std::string last_name);
void getname(std::string &first_name, std::string &last_name)       // prompts user for input
{
std::cout << ""Enter first name: "";
std::getline(std::cin, first_name);     // gets user’s string input
std::cout << ""Enter last name: "";
std::getline(std::cin, last_name);

}
void introduction(std::string first_name, std::string last_name)    // displays to console the bond intro
{
std::cout << last_name << "", "" << first_name << "" "" << last_name << ""\n "";
}
int main()
{
std::string first_name, last_name;
getname(first_name, last_name);         // calls getname function
introduction(first_name, last_name);    // calls introduction function

}
//////////////////////////////basic version
#include 
#include 
void introduction(std::string first_name, std::string last_name){
std::cout<< last_name << "", ""<< first_name << "" ""<< last_name;
}
int main(){
introduction(“james”, “bond”);
}

This is so broken oml. Y’all need to fix this. It’s failing me even though I did what it asked. Cout is not a return value. I’ve been using this as a refresher, and I know cout is not a return value.


gist.github.com


https://gist.github.com/codecademydev/b0b06bbdde5259b6a45ab8602ffb3248
main.cpp
#include <iostream>
#include <string>
using namespace std;

// Define introduction() here:
void introduction(string first_name, string last_name){
  cout << first_name << "", "" << first_name << "" "" << last_name << endl;
}

int main() {
This file has been truncated. show original








I checked and the “solution” is LITERALLY  the same thing, but without “using namespace std;”. Are you kidding me? Why does this website hate optimization??!! Why do you keep using outdated “std::” when “using namespace std;” is one line that erases the need to constantly type that? What a load of baloney.

What is wrong with this code block it does exactly as the o/p still error !!!
#include 
// Define introduction() here:
void introduction(std::string first_name,std::string last_name){
std::cout<<first_name<<"",""<<"" “<<last_name<<” ""<<first_name;
}
int main() {
introduction(“Beyonce”, “Knowles”);
}

Check your include in your code.
"
3,FAQ: Functions: Scope & Flexibility - Multi-File Programs,"Get Help,Git",,14,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Multi-File Programs” exercise from the lesson “Functions: Scope & Flexibility”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Multi-File Programs


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why do we need to declare the functions above main in the main cpp file in the first place?
I assume the system wouldn’t actually look for the functions in other files unless we declare them above main?

simple enough to find out:
#include <iostream>

int main() {

  eat();

}

// Definition at the bottom:
void eat() {

  std::cout << ""nom nom nom\n"";

}

as you can see, i removed the declaration at the top, now the program gives an error. This is because you use the function before its declared.

Yeah Well was wondering if we could just call it without actually declaring it at all  ( since we declare and define it in the other file) … gave it a few tests and faced fatal errors. see why now.


image1024×768 67 KB

why i can’t compile although i did same the hint

Because your code contains syntax errors? You declare functions, but the function don’t seem to have a body/purpose.

Did you defined the functions in the other file named “my_functions.cpp” ??

But why do we need to declare them after all ?? Don’t the compiler automatically know that the functions exist in the other file ?




 sonuscodingworld:

Don’t the compiler automatically know that the functions exist in the other file ?


thankfully not, once you have several hundred files or maybe thousand files, you don’t want to load the files/functions you don’t need. Which is why we import them manually.

Really helpful  Thank you ! @stetim94

Why do we need to declare a function? I thought you can just write a function out with the parameters and it’s declared automatically. For example,
void random_function(){
std::cout << ""Hello World!"";
}
int main(){
random_function();
}

can’t I just do this??? or do I have to do my code like this
void random_function();
void random_function(){
std::cout << ""Hello World!"";
}
int main(){
random_function();
}





 net9523007227:

I thought you can just write a function out with the parameters and it’s declared automatically. For example,
void random_function(){
std::cout << ""Hello World!"";
}
int main(){
random_function();
}



this is possible, but as your program grows this is less then ideal, we quickly want to see the main function to see what the program does
so we can define the function below the main function. But then we first have to declare the function before main. Otherwise, main doesn’t know what the function is
by declaring the function first ,we promise c++ we will define the function later
but all this is explained in the lesson?

So in other words, Making a function the way I did before (declaring it and having its body/purpose right under it) is possible but declaring functions in a different file makes it easier and more concise correct?

this is good:
void random_function(){
std::cout << ""Hello World!"";
}
int main(){
random_function();
}

this isn’t:
void random_function();
void random_function(){
std::cout << ""Hello World!"";
}
int main(){
random_function();
}

the deceleration is now pointless, given you define the function before your main function



 net9523007227:

is possible but declaring functions in a different file makes it easier and more concise correct?


yes, one file of several thousand of lines (programs will easily get this big) are hard to read and maintain.
"
4,FAQ: References and Pointers - Null Pointer,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Null Pointer” exercise from the lesson “References and Pointers”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Null Pointer


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
What is the purpose of having a null pointer? Why not just initialize the pointer right away?

Sometimes programmer doesn’t know (the initial value)/doesn’t want to initialize in declaration. In such scenarios, nullptr is useful. Reading the following article is helpful,


en.wikipedia.org


Uninitialized variable
In computing, an uninitialized variable is a variable that is declared but is not set to a definite known value before it is used. It will have some value, but not a predictable one. As such, it is a programming error and a common source of bugs in software.
 A common assumption made by novice programmers is that all variables are set to a known value, such as zero, when they are declared. While this is true for many languages, it is not true for all of them, and so the potential for error is the...






Where does a pointer point whilst it is assigned nullptr? How does this actually work in the memory?
"
5,FAQ: Variables - Challenge: Temperature (Part 1),"Get Help,Git",,30,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Challenge: Temperature (Part 1)” exercise from the lesson “Variables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Challenge: Temperature (Part 1)


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
8 posts were split to a new topic: [FIXED] C++ lesson specifics and compiling issues

I am currently working on step 3 (Display the result). The code looks right to me, but I can’t get past this step. Everytime I try to run the code, I get an error that says: “Did output the exact same phrase?”
Here is the code that I have so far:
#include 
int main() {
double tempf = 37.0;
double tempc;
tempc = (tempf - 32) / 1.8;
std::cout << “The temp is "" << tempc << "" degrees Celcius.\n”;
}
I even looked at the hints to figure this out, but I can’t see what’s wrong.




 dapeej:

#include


Should that be,
#include <iostream>

?

I am not sure why it isn’t showing in the window, but I do have that line ""#include <iostream> ""

#include 
int main() {
double tempf = 83.0;
double tempc;
tempc = (tempf - 32) / 1.8;
std::cout<<“The temp is "" <<tempc<<” degrees Celsius.\n"";
}

Its Celsius not Celcius and in line "" degrees…"" first place is blank-with space.
First line include is not appear all because of brackets…(at this forum answers)

So I got my code looking just like your example (even correction the spelling of Celsius), but it did not work initially. To get it to work, I had to completely erase everything and retype it, and then it actually worked! Thanks for your help!

Thanks for responding and looking to adapt the tutorial! I come from a less formal scripting background so forgive me if my terminology isn’t exact. This was the only tutorial so far that was a bit confusing. I’d clarify “double” as a the type of variable and the “tempf” and “tempc” as the names of of the variable in the instruction text. And remind the student that there doesn’t need to be a “= value” after the name (I forgot and that’s what confused me).
I ended up doing something like:
double tempf =41
double tempc = C
C = (tempf-32)/1.8;
Once I saw the solution it made sense, but since it was the first time I’d seen “double” and forgot about the not needing “= value” in this context, I fumbled a bit.
So far the tutorials have been great for this new coder! Thanks for all the hard work!

I am getting an error when I try to compile.  Here’s my code:
#include 
int main() {
double tempf;
double tempc;
// Ask the user
std::cout << ""Enter the temperature in Fahrenheit: "";
std::cin >> tempf;
tempc = (tempf - 32) / 1.8;
}
I can’t cut and paste the error message, but it’s pretty long winded and trails off the screen.
??

Hi there, thanks for putting this course up on Codecademy for free!
while doing this lesson, im noticing that my results shows up twice in my final message on the console. Here’s my code:
double tempf = 0;
double tempc = 0;
std::cout << “Enter the temperature in Fahrenheit \n”;
std::cin >> tempf;
std::cout << (tempc = (tempf-32)/ 1.8);
std::cout << “The temp is "" << tempc << "" degrees Celsius.\n”;
return 0;
After I have the user enter a temperature (54°) for Fahrenheit, i’ll get a message along the lines of:
“12.2222The Temp is 12.2222 degrees Celsius.”
Please, can someone explain why my result of the calculation is turning up twice? thanks.

Hi there, im no expert, but I had to put the code in parenthesis like this:
(tempc = (tempf - 32) / 1.8 );
That seemed to resolve the long weird error message for me. good luck!

std::cout << (tempc = (tempf-32)/ 1.8);
if you do (tempc = (tempf-32)/ 1.8);
without the std::cout << should work fine.

I keep getting an error saying a ‘;’ is expected before ‘std’. I have a ‘;’ at the end of 1.8 and before ‘std’. What am i doing wrong? Also, i would’ve cut and pasted the error message but it doesn’t seem to be allowed?
#include
int main() {
double tempf = 72.0;
double tempc;
tempc = (tempf - 32) / 1.8;
std::cout << “The temp is” << tempc << “degrees Celsius\n”;
}

Are you getting an error when you compile the code, or when you click “Run”? The lesson wants the message to be exactly as directed. From your post it appears you are missing a space after “is” and also before “degrees”. There should be a period following “Celsius” as well. When you paste code into a post, please format it as code by clicking on the </> icon first, and then pasting your code in the space specified. That will preserve formatting, and allow special characters from your code to show up. For example:
#include <iostream>

Hope this helps! If not, post your code again. Good luck!

#include <iostream>

int main() {
  double tempf=83.0;
  double tempc;
  tempc=(tempf-32)/1.8;
  std::cout << ""The temp is "" << tempc << "" degrees Celcius.\n"";
  
  
  
  
  
  
  
}

can someone tell me where the mistake is?
thank you

Check your spelling of the word “Celsius.” 

Im not getting any compile errors, but there is no output when i run this code.
#include 
int main() {
double tempf = 85.0;
double tempc;
tempc = (tempf - 32) / 1.8;

std::cout << ""The temp is "" << tempc << "" degrees Celsius.\n"";

}

4 posts were split to a new topic: [FIXED] C++ undefined reference to main

This is failing step 3 and I don’t know why?

image.png1366×768 67.2 KB

"
6,FAQ: Code Challenge: C++ Functions - Palindrome,"Get Help,Git",,55,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Palindrome” exercise from the lesson “Code Challenge: C++ Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Palindrome


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I don’t really understand how this exercise can help detect a palindrome, is there a step-by-step explanation for each line of code starting from “for”?

The Following is an alternative that the system wouldn’t accept. Not like I expected it to.


#include 
// Define is_palindrome() here:
std::string is_palindrome(std::string text) {
int n = text.size() -1 ;
for (int j = 0;  j < n; j++ , n–) {
if (text[j] != text[n]) {
return “false”;
}
}
return “true”;
}
int main() {
std::cout << is_palindrome(“madam”) << “\n”;
std::cout << is_palindrome(“ada”) << “\n”;
std::cout << is_palindrome(“lovelace”) << “\n”;
}
…
I know it told me to use a bool type function but that way it would return 1 or 0 so…

This challange would’ve been more useful had we been introduced to a single string command.

Here’s how I was able to complete the challenge. It took me longer to figure out than I’d like to admit but I guess that’s part of learning. 
#include <iostream>
#include <string>

// Define is_palindrome() here:
bool is_palindrome(std::string text) {
  std::string reversed_text;
  
  for (int i = text.size() - 1; i >= 0; i--) {
    reversed_text.push_back(text[i]);
  }

  if (reversed_text != text) {
    return false;
  } else {
    return true;
  }
}

int main() {
  std::cout << is_palindrome(""madam"") << ""\n"";
  std::cout << is_palindrome(""ada"") << ""\n"";
  std::cout << is_palindrome(""lovelace"") << ""\n"";
}


I agree, I feel as though it wasn’t made clear at any point before or during the exercise. There should be optional practice exercises offered for honing purposes.

Hi!
I have a quick question about your code. Why would you initialize i as text.size() - 1? Why doesn’t initializing i as text.size() work?
Thank you so much!

I don’t think there is a problem with using that type of function. Rather, I think you need to put something in your for loop that goes through the letters in text (reverse direction) and stores them in an empty string. Making an empty string to store reversed text in helps a lot.
I really like how you changed this project to have it output actual text instead of numbers. Good luck and I hope this helps!

Not sure why people had trouble here on this one.  If anything it been the vector one.  Quick google search would of gave you the answer.  I did this previously in another language on another site.
#include <iostream>

// Define is_palindrome() here:
bool is_palindrome(std::string text) {
    int l = 0; 
    int h = text.length() - 1; 
  
    while (h > l) 
        if (text[l++] != text[h--]) 
            return false; 
    return true;
}

int main() {
  
  std::cout << is_palindrome(""madam"") << ""\n"";
  std::cout << is_palindrome(""ada"") << ""\n"";
  std::cout << is_palindrome(""lovelace"") << ""\n"";
  
}

Because vectors are zero indexed. If there are four elements in the vector, that last element will be element number 3. Visually: [0 1 2 3] rather than [1 2 3 4].

This problem is unsolvable with the information provided… There’s been no explanation or indication of how to read, manipulate, or interact with strings as anything but indivisible units up to this point.
If the intention is to get the user to look outside the lesson for information, that’s an unclear and roundabout way of communicating. There should instead be some sort of direction that the knowledge needed for this lesson is out in the world and you have to track it down to solve the problem.
At the very least, it should be acknowledged that strings function as a vector of characters and will follow similar logic. Refusing to acknowledge the lack of preparation makes it look like a mistake rather than part of the teaching method.


If the intention is to get the user to look outside the lesson for information, that’s an unclear and roundabout way of communicating. There should instead be some sort of direction that the knowledge needed for this lesson is out in the world and you have to track it down to solve the problem.

You should get used to looking everything up in Google, StackOverflow, and other sites that house information on the language itself.  That will never change and be the norm anywhere you go or do in programming.  A web search would of gave you the answer to this like many things in programming.

It sounds like you think that the lesson is that you should look through online resources to figure out problems you don’t have the tools to solve, that’s how you’re going to learn programming. I agree.
My whole point is that this concept is communicated poorly by the lesson as it’s laid out. Instead of listing useful resources like StackOverflow or directing the learner to search engines the way a teacher would refer a student to the library, the lesson asks you to do something arbitrary without acknowledging you have not been given the tools necessary to interface with the problem. That’s a poor teaching method and leads to needless confusion and frustration.
Even a verbatim copy of your reply would be a significant improvement over the flat wall presented in the lesson as you provided useful recommendations and direction for a student to orient themselves towards a solution.

Agree completely with arc.
While I certainly see where psmilliorn is coming from–and his point about searching is most valid–in terms of lesson quality, I have to heartily disagree with this whole idea of “duckduckgo is your friend” as a teaching methodology. As a resource, yes, of course. I’ve done a fair amount of professional translation over the years, and even I need to occasionally consult with other professionals online or look up certain phrases in the wild, in online dictionaries, etc.
Coming back to this lesson, here’s where web searching can fail hard. I did go to stackexchange and a couple other places, seeking a method to reverse the characters in a string. What I ended up finding was a lot of more powerful and sophisticated methods of character swapping (mostly relying on additional libraries)… and I ended up wasting an hour of time and retaining almost nothing. When I finally viewed the suggested solution, I thought, “Why the heck didn’t they just introduce a 15-minute lesson to talk about strings and demonstrate how they can be handled in a fashion similar to vectors?” This would have been far more effective and reinforced that general concept of handling data sets.
I agree that searching online can be a useful tool, but for beginners, there are potentially serious drawbacks. For one thing, a beginner cannot gauge the quality or timeliness of an answer/resource or sense very well how informed the poster of that information is. Another thing is that (again, for a beginner) this process can often take one very far afield of what they’re trying to learn. For the teacher, it’s, ahem… a cop-out.

// Define is_palindrome() here:
bool is_palindrome(std::string text){
int l=text.size()-1;
std::string x;
for(int i=0;i<l;i++){
x[i]=text[l-i];
}
for(int i=0;i<l;i++){
if (x[i]==text[i]){
return(true);
}
else {
return(false);
}
}
}
int main() {
std::cout << is_palindrome(“madam”) << “\n”;
std::cout << is_palindrome(“ada”) << “\n”;
std::cout << is_palindrome(“lovelace”) << “\n”;
}
maybe this will help!!!

Hello,
I have also one question. n. Please see the code bellow:
bool is_palindrome(std::string text) {
std::string reversed_text = “”;
for (int i = text.size()-1; i >= 0; i–) {
reversed_text += text[i];
std::cout<< reversed_text<< “\n”;
}
std::cout<< reversed_text<< “\n”;
if (reversed_text == text) {
return true;
}
return false;
}
int main() {
//std::cout << is_palindrome(“12345”) << “\n”;
// std::cout << is_palindrome(“ad”) << “\n”;
std::cout << is_palindrome(“121”) << “\n”;
}
This will output:
1
12
121
1.
If I take out the “-1” from  for (int i = text.size()-1; i >= 0; i–) I will have the code:
bool is_palindrome(std::string text) {
std::string reversed_text = “”;
for (int i = text.size(); i >= 0; i–) {
reversed_text += text[i];
std::cout<< reversed_text<< “\n”;
}
if (reversed_text == text) {
return true;
}
return false;
}
int main() {
//std::cout << is_palindrome(“12345”) << “\n”;
// std::cout << is_palindrome(“ad”) << “\n”;
std::cout << is_palindrome(“121”) << “\n”;
}
the output will be:
1
12
121
0
Why now is not true any more?
Could you please help me understand this?

I came here with the exact same question, would appreciate a reply if you figured it out.

I agree. The whole series of interactive lessons in functions have been like this. I would have expected to have been shown how to do some of this stuff before applying the learning. If I have to web search how to do everything, all I’m learning to do is search for answers and not understand the code, why it’s there and what it means.

I’m having trouble with it because there haven’t been preparatory lessons and materials on getting to the solution. I’m not being slow on the uptake - you can only know what you know!
P.s. I am aware you can web search the answer!

Figured I’d give a little help for this one since I don’t think it’s super clear what to do if you’re a beginner.
First, you need to loop backwards over the passed in string so that you can build a reversed string from it. In order to do this, you need to know the final index of the original string. This is the size of the string minus one. So for the word “madam”, the size is 5 since it’s five characters. However, strings like vectors and arrays start counting at zero, so text[0] is “m”, text[1] “a”, text[2] “d”, text[3] “a”, text[4] “m”. So, the final index (the index of the last letter) is 4, the size minus 1.
Once you have that sorted the rest isn’t too hard, loop through and append each character to the new string, then return a comparison of the two strings:
#include <iostream>

// Define is_palindrome() here:
bool is_palindrome(std::string text) {
  std::string backwards_string;
  int final_text_index = text.size() - 1;

  for (int i = final_text_index; i >= 0; i--) {
    backwards_string += text[i];
  }
  
  return backwards_string == text;
}

int main() {
  
  std::cout << is_palindrome(""madam"") << ""\n"";
  std::cout << is_palindrome(""ada"") << ""\n"";
  std::cout << is_palindrome(""lovelace"") << ""\n"";
  
}

"
7,FAQ: Vectors - Creating a Vector,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Creating a Vector” exercise from the lesson “Vectors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Creating a Vector


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi! I don’t understand what the #include <vector> does.

#include <vector> adds the standard vector library to your program. You need to do that before you can use any vectors in your program. I hope this helps!
"
8,FAQ: Hello World! - Review,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review” exercise from the lesson “Hello World!”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Review


Which programming language should I choose?

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
9,FAQ: Loops - While Loop,"Get Help,Git",,8,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “While Loop” exercise from the lesson “Loops”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise While Loop


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
whey we have  to add
int++ in end of a while statement

To increment the counter variable.

The code is not running even after reloading the page.

yah same thing here, reloaded the page three times and the code is running.
is yours working now?

No
It’s still the same

I’ve used only variable i to print the result and it worked .
while ( i < 10 ) {
std::cout << i << "" "" << i*i << “\n” ;
i++ ;
Is this a correct approach or do I have to write the solution using both variables ?

Same here, not running
"
10,FAQ: Functions - How Parameters & Arguments Work,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “How Parameters & Arguments Work” exercise from the lesson “Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise How Parameters & Arguments Work


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
11,FAQ: Hello World - Hello World!,"Get Help,Git",,6,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Hello World!” exercise from the lesson “Hello World!”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Hello World!


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I am just using this as a refresher course as I have now gotten a job that requires a lot of C++.
My question is: Is there a reason why you have excluded the namespace std? When I was in University, the professor told us that using the namespace would make teaching and learning easier.

Typically it’s because developers don’t want to have conflicts in namespaces by ‘using’ libraries.
This stack overflow post has some good information on it. As the comments point out, if you’re only using a few functions from a library, you can use those specifically instead of prefixing the namespace on the functions.

#include 
what does it mean???
Thanks
g

Answer:
""# ""is a macro used for preprocessing and “include” is a keyword which tells compiler to include a file.
meaning whatever return with # is preprocessed before the program compilation

//int main()
int is a integer datatype and it should return any value but referring to this lesson there is no such return 0; Also .h is used after headers why it gives error on mentioning  .h
cout is object of a class defined in iostream.h , why we have to use std::
thanku.
"
12,FAQ: Vectors - Initializing a Vector,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Initializing a Vector” exercise from the lesson “Vectors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Initializing a Vector


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I don’t understand how variables work anymore. The variables stored were ints but the double worked in the vector. Then I changed the vector to int and there was no error. What are the differences of each variable so that I can use the appropriate one?

@timetostop double can hold int AND double values, you can use either type of variable

How is the table automatically created while we use the std::vector and initialize it ?
"
13,FAQ: Compile & Execute - Code → Save → Compile → Execute,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Code → Save → Compile → Execute” exercise from the lesson “Compile & Execute”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Code → Save → Compile → Execute


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
14,FAQ: Compile & Execute - Review,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review” exercise from the lesson “Compile & Execute”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Review


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
15,FAQ: Conditionals & Logic - If Statement,"Get Help,Git",,7,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “If Statement” exercise from the lesson “Conditionals & Logic”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise If Statement


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi!
I know that this souldn’t be the lesson to ask this, but I’ll do it anyway:
–> You put in the tutorial:
std::cout << ""Some text here\n"";
But this also works fine:
std::cout << ""Some text here"";
Why sould we put the \n when it’s easyer to do it without it?
–> And the other question is that is it better to put more spaces when without them it works?:
bmi = weight/(height*height);   [Without unnecessary spaces]
bmi = weight / (height * height);     [With spaces]
I know that you don’t save a lot by doing this, but i wanted to know
Thanks 

If you watch closely you’ll see the ? prompt at the end of the line rather than on the next line. That is why we need to include the newline escape character, \n at the end of the cout string.
Some text here?

vs.
Some text here
?

yes, I noticed this a litle bit after. Thanks anyway, now I know it for shure and that it means newline escape character.

Hello johnbrun,
About more spaces, this is how you are comfortable to read the code, if more spaces on code is good for you is ok, this is a detail that each programmer have, I think that it’s more about styles and likes to write code.
Regards,
José

You put in the tutorial:
std::cout << ""Some text here\n"";
you should do it the right way which is
std::cout << “some text here” << std::endl;
please fix it!

Why do you say endl should be used here? 
"
16,FAQ: Conditionals & Logic - Relational Operators,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Relational Operators” exercise from the lesson “Conditionals & Logic”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Relational Operators


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
17,FAQ: Hello World - Hello World,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Hello World” exercise from the lesson “Hello World”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Hello World


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
18,FAQ: References and Pointers - References,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “References” exercise from the lesson “References and Pointers”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise References


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
19,FAQ: References and Pointers - Dereference,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Dereference” exercise from the lesson “References and Pointers”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Dereference


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
20,FAQ: Vectors - Introduction to Vectors,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction to Vectors” exercise from the lesson “Vectors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Introduction to Vectors


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
21,FAQ: References and Pointers - Introduction,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction” exercise from the lesson “References and Pointers”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Introduction


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
22,FAQ: Classes and Objects - Getting Classy with C++,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Getting Classy with C++” exercise from the lesson “Classes and Objects”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Getting Classy with C++


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
23,FAQ: Functions: Scope & Flexibility - Function Templates,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Function Templates” exercise from the lesson “Functions: Scope & Flexibility”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Function Templates


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
24,FAQ: Functions: Scope & Flexibility - The Scope of Things,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “The Scope of Things” exercise from the lesson “Functions: Scope & Flexibility”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise The Scope of Things


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
25,FAQ: Code Challenge: C++ Functions - How It Works,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “How It Works” exercise from the lesson “Code Challenge: C++ Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise How It Works


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
26,FAQ: Errors - Logic Errors,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Logic Errors” exercise from the lesson “Errors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Logic Errors


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
27,FAQ: Errors - Introduction to Bugs,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction to Bugs” exercise from the lesson “Errors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Introduction to Bugs


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
28,FAQ: Logical Operators - Logical Operator:!,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Logical Operator: !” exercise from the lesson “Logical Operators”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Logical Operator: !


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
29,FAQ: Logical Operators - Logical Operator: II,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Logical Operator: II” exercise from the lesson “Logical Operators”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Logical Operator: II


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
30,FAQ: Logical Operators - Introduction to Logical Operators,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction to Logical Operators” exercise from the lesson “Logical Operators”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Introduction to Logical Operators


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
31,FAQ: Functions - Built-in Functions,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Built-in Functions” exercise from the lesson “Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Built-in Functions


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I tried to copy the code into my own compiler on my computer but I get an error:
In function ‘int main()’:
random.cpp:6:10: error: ‘time’ was not declared in this scope
srand (time(NULL));
^~~~
random.cpp:6:10: note: suggested alternative: ‘tm’
srand (time(NULL));
^~~~
tm
Anybody who can explain what went wrong?

Make sure you add #include <iostream> at the beginning.
#include <iostream>

int main() {
  // This seeds the random number generator:
  srand (time(NULL));
  // Use rand() below to initialize the_amazing_random_number
  int the_amazing_random_number = rand() % 29;
  std::cout << the_amazing_random_number;
}



#include 
int main() {
// This seeds the random number generator:
srand (time(NULL));
// Use rand() below to initialize the_amazing_random_number
int the_amazing_random_number = rand() % 100;
std::cout << the_amazing_random_number << “\n”;
}

Why can the above code not include the following

std::int the_amazing_random_number = rand()%100

instead of line 6?
The previous lesson explicitly expressed the namespace std before initializing a variable, and yet i cannot do so here? Why?
"
32,FAQ: Functions: Scope & Flexibility - Getting a Header Yourself,"Get Help,Git",,6,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Getting a Header Yourself” exercise from the lesson “Functions: Scope & Flexibility”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Getting a Header Yourself


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Can we move the files from fns.cpp (in the exercise) to fns.hpp… So that we wouldn’t be required to compile 2 files at the time of execution?
or is it advised to just declare functions in hpp?
More generally speaking, Can we move the definitions from Example.cpp to Example.hpp Right below the declarations so we spare ourselves an additional compilation?

Why do we not just include “my_functions.cpp” at the top of the file in the first place? I tried running that and it worked without the declarations. Why do we need a header file with separate declarations? I read something on Stack Overflow about “Multiple Definitions” being an issue, but I’m not sure I fully grasp the idea of what that means.

I am not enough experienced, but I think if we do that, sometimes the compiler may throw “Multiple Definition Error”. May be that we define a function one of a kind in the current file (with same number of parameters and data type) and that function is defined in a different kind in the included CPP file.
Consider the following:
int calc(int a, int b) {return a+b;} is defined in the current file and
int calc(int a, int b) {return a-b;} is defined in the #included file ?
Did it helped ?? @tatemauzy1668138550

Hmm, I think that helps, although, there’s one thing that still confuses me a little bit about this.
Let’s look at the example you just gave:
int calc(int a, int b) {return a+b;} [call this line A] is defined in our main file, calc.cpp, and
int calc(int a, int b) {return a-b;}  [call this line B] is defined in some file attachment.cpp
Then, say you do this:
int calc(int a, int b)  is delcared in some header file attachment.h , which is #included in calc.cpp
If this was the case, and you had the two cpp files linked when you ran the g++ command, would you still get a Multiple Definition Error? Or would the interpreter choose one definition over the other?


multiple_def1067×103 27.1 KB

Have a look at the pic at the top, it throws a Multiple Definition error as
expected. Now let me go to your point. Below is the code you probably wanted.!

Now, calc is defined in another file as well as declared in the header file. It throws a similar Error, though in a different manner.

multiple_def_two737×195 26.7 KB

Hope you got it now  So, the final outcome is it’s always best to avoid multiple defintions.
"
33,FAQ: References and Pointers - Pass-By-Reference with Const,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Pass-By-Reference with Const” exercise from the lesson “References and Pointers”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Pass-By-Reference with Const


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Is there any difference between “const int &a” and “int const &a” ?
C++ doesn’t seem to report any problems about this.
"
34,FAQ: Functions - Review of C++ Functions,"Get Help,Git",,10,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review of C++ Functions” exercise from the lesson “Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Review of C++ Functions


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Mine won’t execute
it.cpp
#include <iostream>
#include ""functions.hpp""
int main() {
  
  // Conduct IT support
  // Check in with Jenn

  // Conduct IT support again...
  // Check in with Roy
  // Conduct IT support yet again...zzzz...
  
}

header file functions.hpp
std::string hello_it(std::string on_off_attempt);

std::string hi_jen();

std::string hello_it(std::string on_off_attempt);

std::string hi_roy();

std::string hello_it(std::string on_off_atempt);


definitions file functions.cpp

std::string hello_it(std::string on_off_attempt){
  std::cout << ""Hello. IT.\n"";
  std::cout << ""Have you tried turning it off and on again? y/n\n"";
  std::cin >> on_off_attempt;
}

std::string hi_jen()
{
   std::cout << ""Oh hi Jen!\n"";
}

std::string hi_roy();
{
  std::cout << ""You stole the stress machine? But that's stealing!\n"";
}


Ok, I got it to work like this, any ideas in how to further refactor  ?

#include 
std::string it_crowd(int tries){
std::string yes_or_no;
std::string attempts = “Hello IT. \n”“Have you tried turning off and on again? y/n\n”;
int x = 0;
while (tries > 0) {
std::cout << attempts;
std::cin >> yes_or_no;
x++;
tries–;
if (x == 1) {
std::cout << “Hello Jen!\n”;
}
else if (x == 2) {
std::cout << “You stole the stress machine? But that’s stealing!\n”;
}
}
return attempts;
}
int main() {
it_crowd(4);
}


I have yet to learn what this “.hpp” is but i think one of the issues is here :

std::cout << “Have you tried turning it off and on again? y/n\n”;
std::cin >> on_off_attempt;

It appears that on the original code provided the “on_off_attempt” doesn’t really return any meaningful data to the function, it’s just there to bring up the prompt after “Have you tried turning it off and on again? y/n\n”.   In your code it appears that whatever you input  will go to the only parameter in “hello_it()” I would think that would cause some issues.
The parameter from what I understand is  just a variable, which you input data when you call the function so if you are calling “hello_it()” here on the  second block :

std::string hello_it(std::string on_off_attempt);
std::string hi_jen();
std::string hello_it(std::string on_off_attempt);
std::string hi_roy();
std::string hello_it(std::string on_off_attempt);

Your are inputting "" std::string on_off_attempt "" into "" std::sin >> on_off_attempt""
Probably poorly explained if its even correct, maybe someone that knows better will post 

how do i pass the and of the functions chapter c++?? please help

Hello @alex1010110. Welcome to the forum.
You’ll have to post a specific question, or share the code your working on that you’re having trouble with along with a question. A link to the exercise would also be helpful.

While the program does not do anything with std::cin >> on_off_attempt;,  trie to make it a void function:
void hello_it () {
std::cout << “Hello. IT.\n”;
std::cout << “Have you tried turning it off and on again? y/n\n”;
std::cin >> on_off_attempt;
}
I am just beginning in coding, so I do not know if this is correct (tell me if not), but it is working.

Does codecademy provide an actual answer for this?  It would be nice to see how they did it.  This is what I got and I don’t know if it is right.  Would someone tell me what I am missing?  It compiled but after answering the first y/no question it gave me an error:   Thank you.
#include 
string it_support() {
std::string on_off_attempt;
std::cout << “Hello. IT.\n”;
std::cout << “Have you tried turning it off and on again? y/n\n”;
std::cin >> on_off_attempt;
}
int main() {
// Conduct IT support
it_support();
// Check in with Jenn
std::cout << “Oh hi Jen!\n”;
// Conduct IT support again…
it_support();
// Check in with Roy
std::cout << “You stole the stress machine? But that’s stealing!\n”;
// Conduct IT support yet again…zzzz…
it_support();
}

I execute this program and it ran, just when I type answering “Have you tried turning it off and on again? y/n\n” it duplicates my answer(yes or no) in the next line , I wonder why?
std::string on_off_attempt() {
std::string a ;
std::cout << “Hello. IT.\n”;
std::cout << “Have you tried turning it off and on again? y/n\n”;
std::cin >> a;
return a;
}
int main() {
// Conduct IT support
std::cout << on_off_attempt() << “\n”;
// Check in with Jenn
std::cout << “Oh hi Jen!\n”;
// Conduct IT support again…
std::cout << on_off_attempt() << “\n”;
// Check in with Roy
std::cout << “You stole the stress machine? But that’s stealing!\n”;
// Conduct IT support yet again…zzzz…
std::cout << on_off_attempt() << “\n”;
}
Thanks.

yeah uh so i don’t understand what are we supposed to code here. Like the goal of that program and what it’s supposed to do
"
35,FAQ: Variables - Challenge: Temperature (Part 2),"Get Help,Git",,11,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Challenge: Temperature (Part 2)” exercise from the lesson “Variables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Challenge: Temperature (Part 2)


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Can I chain text after std::cin >>

Hi! For some reason, every time I do g++ temperature.cpp in the terminal, it says this error, g++ temperature.cpp temperature.cpp: In function ‘int main()’: temperature.cpp:10:3: error: expected ‘;’ bef
std::cin >> tempf;  PLease help me thanks!

There is a bug or something, that any temp in F I input it gives me the same temp in C. And I didnt change anything in the code that was premade.

alin…88,
You didn’t share your code.  Here’s mine:
#include <iostream>

int main() {
  
  double tempf;
  double tempc;
  
  // Ask the user
  std::cout << ""Enter the termperature in Fahrenheit: "";
  std::cin >> tempf;
  
  tempc = (tempf - 32) / 1.8;
  
  std::cout << ""The temp is "" << tempc << "" degrees Celsius.\n"";
  
}


I am having the same problem, here is my code.
#include <iostream>

int main() {
  
  double tempf;
  double tempc;
  

  
  tempc = ((tempf - 32)) / 1.8;
  
  
  std::cout << ""Enter the temperature in Fahrenheit: "";
  std::cin >> tempf;
  
  std::cout << ""The temp is "" << tempc << "" degrees Celsius.\n"";
  
}

I always get -17.7778 degrees Celsius no matter the input.

Hello, @nikonino6790225288.
Welcome to the forums.
Unless we alter the control flow which you’ll learn more about as you progress, code is executed from top to bottom in our program.  In your program, a value is assigned to tempc here:



 nikonino6790225288:

tempc = ((tempf - 32)) / 1.8;



So, what is the value? Well, tempf has been declared, but no value assigned: double tempf;. Therefore, we have (0 - 32) / 1.8 which equals: -17.7778.
Then, you ask for the user to input a temperature in Fahrenheit, and assign that user input to the variable: tempf. After that you don’t use that value to re-calculate the value assigned to tempc, so tempc still has -17.7778 assigned to it.
You then print your output, using the value still assigned to tempc. What would happen if you get the user input first, and then calculate the value for tempc? 

Thanks, this was exactly what I needed.

Hello,
I am strugling when I compile and execute the code:
#include <iostream>

int main() {
  
  double tempf;
  double tempc;
  
  // Ask the user
  std::cin>>""Enter temperature in Fahrenheit:"";
  std::cin>> tempf;
  
  
  tempc = (tempf - 32) / 1.8;
  
  std::cout << ""The temp is "" << tempc << "" degrees Celsius.\n"";
  
}

The error:       *^~~~~~~~*
/usr/include/c++/7/istream:120:7: note:   no known conversion for argu
ment 1 from ‘const char [33]’ to ‘std::basic_istream::_istream
type& ()(std::basic_istream::istream_type&) {aka std::basic_i*
stream& ()(std::basic_istream&)}’*
/usr/include/c++/7/istream:124:7: note: candidate: std::basic_istream<
_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>:
:operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& ()(std::*
basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Tr
*aits = std::char_traits; std::basic_istream<_CharT, _Traits>::*
istream_type = std::basic_istream; std::basic_istream<_CharT, _T
raits>::__ios_type = std::basic_ios]


  operator>>(__ios_type& (*__pf)(__ios_type&))*



  ^~~~~~~~*



/usr/include/c++/7/istream:124:7: note:   no known conversion for argu
ment 1 from ‘const char [33]’ to ‘std::basic_istream::__ios_type
& ()(std::basic_istream::__ios_type&) {aka std::basic_ios*
& ()(std::basic_ios&)}’*
/usr/include/c++/7/istream:131:7: note: candidate: std::basic_istream<
_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>:
:operator>>(std::ios_base& ()(std::ios_base&)) [with _CharT = char; _*
Traits = std::char_traits; std::basic_istream<_CharT, _Traits>::
__istream_type = std::basic_istream]


  operator>>(ios_base& (*__pf)(ios_base&))*



  ^~~~~~~~*



/usr/include/c++/7/istream:131:7: note:   no known conversion for argu
ment 1 from ‘const char [33]’ to ‘std::ios_base& ()(std::ios_base&)’*
/usr/include/c++/7/istream:214:7: note: candidate: std::basic_istream<
_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>:
:operator>>(float&) [with _CharT = char; _Traits = std::char_traits<ch
ar>; std::basic_istream<_CharT, _Traits>::_istream_type = std::basic
istream]
 Any suggestion?

Scroll up and read your first error message

out960×161 25.5 KB

Or for that matter tell g++ to only print out one error.

out721×234 35.3 KB

You should probably be adding -Wall (turn on all warnings) and -Werror (warnings are now errors) as well.
Better yet, get your editor to run g++ or clang++ or whatever as you type:

out724×459 23 KB


I wrote:
std::cout << “Enter the temperature in Fahrenheit: \n”;
std::cin >> tempf >> “\n”;
And something went wrong, but I don’t know why.
The correct is only:
std::cout << ""Enter the temperature in Fahrenheit: "";
std::cin >> tempf;
I thought I had to use the “\n” at the end of each phrase.
"
36,FAQ: Functions - The Function of Functions,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “The Function of Functions” exercise from the lesson “Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise The Function of Functions


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Some sort of explanation as to why they’re using “std::string on_off_attempt;” instead of just “string on_off_attempt;” would have been helpful. I spent 20 minutes googling this when it could have just been included as a note at the bottom of the lesson.
For those who came here for the same reason, these are the resources I found useful:


stackoverflow.com






std::string vs string in c++


c++, string, std


  asked by
  
  
    OVERTONE
  
  on 11:37AM - 31 Mar 11 UTC







http://www.cplusplus.com/forum/beginner/61121/

I don’t know if this was implemented in some way, but my code didn’t have it show up. `#include 
int main() {
// Conduct IT support
std::string on_off_attempt;
std::cout << “Hello. IT.\n”;
std::cout << “Have you tried turning it off and on again? y/n\n”;
std::cin >> on_off_attempt;
// Check in with Jen
std::cout << “Oh hi Jen!\n”;
// Conduct IT support again…
std::cout << “Hello. IT.\n”;
std::cout << “Have you tried turning it off and on again? y/n\n”;
std::cin >> on_off_attempt;
// Check in with Roy
std::cout << “You stole the stress machine? But that’s stealing!\n”;
// Conduct IT support yet again…zzzz…
std::cout << “Hello. IT.\n”;
std::cout << “Have you tried turning it off and on again? y/n\n”;
std::cin >> on_off_attempt;`
This was the code for the lesson, but I decided to type the letter “n” to see what would happen and it’s giving me messages that aren’t in the code I don’t know if when you guys made this lesson you made a little easter egg or something?
For example “Is the light on the side glowing” and “Yeah, you need to turn it on”

Is this a skit from IT Crowd? I am not getting it.
"
37,FAQ: Loops - While Loop Demo,"Get Help,Git",,9,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “While Loop Demo” exercise from the lesson “Loops”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise While Loop Demo


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
The first statements for asking the pin can be removed as they are stated in the exact way in the while loop. Makes for shorter code!

here in the while loop condition is given that try <= 3,means it will take upto 3 values . more than 3 values it will break. but after executing the program, it is taking upto 5 values . why?

I had this same question! I see this was posted in July 2019, and no response to it yet.
So I’ll give it a try, as my first response to any question on Codecademy.
Specifically, the question is: Why does the code on line 13 in the exercise:
while (pin != 1234 && tries <= 3)
continue to allow entries after three tries? Specifically, it allows five tries! Which is odd, because “tries <= 3” implies that the loop will stop after 3 tries.
What I see is two things going on here:


The variable “tries” was initialised to 0 on line 6. This means that the computer starts counting from zero on line 17 (code: “tries++;”). So that gets us to four possible entries (unless you enter the correct pin code, of course).


amonsoares above makes a good point, and this is part of the solution to this question. It’s unclear why lines 10 and 11 are included in the solution code. The two lines call for the pin and allow it to be entered with std::cout and std::cin, but they don’t increment the variable “tries”. So this code runs once. The program then runs through the “while” loop beginning on line 13, which allows the code to be run an additional four times (see point number 1 just above).


Solution: To clean up the code and make it run (more or less) correctly, you have to do two things:


A. Delete lines 10 and 11, as they are completely redundant.
B. On line 6, set “tries” to 1 instead of 0: “int tries = 1;”    OR B. On line 13 in the while loop, write the end of the parenthetical as “&& tries < 3”.
Just as a note, I’ve gone through the enter Loops section and at no point is this explained as an example of a coding error. It would, however, make an excellent addition to the section on Bugs (as a logical bug not detectable by the compiler).
Hope this was helpful! Have a good coding day, everyone.

Hello everyone,
I was doing the While Loop Demo today and found a small bug in the exercise.
Instead of generating the default executable a.out using:  g++ enter_pin.cpp, I generated an executable with a chosen name: g++ -o main.exe enter_pin.cpp.
When doing this and executing, codecademy does not recognize you finished the exercise, and therefore does not allow you to continue to the next exercise.

/* The following comments explain why you have up to 5 tries,
even though it seems like there should only be 3.
Copy and paste into the code editor for markup*/
#include 
int main() {
int pin = 0;
int tries = 0;
std::cout << “BANK OF CODECADEMY\n”;
std::cout << ""Enter your PIN: "";
std::cin >> pin; //pinenters=1
while (pin != 1234 && tries <= 3) {
std::cout << ""Enter your PIN: "";
std::cin >> pin;
tries++;
//pinenters=2, tries=1
//pinenters=3, tries=2
//pinenters=4, tries=3
//pinenters=5, tries=4 (this finally exits the loop)
}
//the code gets here if either (or both) of the following conditions is satisfied:
//case 1. pin is correct
//case 2. pinenters=5, tries=4
//the following code then ensures that it must be case 1 to print the message.
if (pin == 1234) {
std::cout << “PIN accepted!\n”;
std::cout << “You now have access.\n”;
}
//hope this helped to clarify any doubts! 
}

Hi,
I’ve compiled the unmodified enter_pin.cpp.
When runing a.out, if I enter a letter (eg. “a”) for the pin, code inside the while loop gets executed four times.
To test what is happening, I put a line inside while loop.
After std::cin >> pin; I’ve put this line:
std::cout << ""Entered is: "" << pin << std::endl;
Output of this line, i case that letter was input for the pin is value of the pin and this is 0.
Please, can you explain why is it 0?
Why the loop is executed, four time?
Thank you.

Need to copy/paste your code here to get help with such questions.

Hi!
The correct code :
#include 
int main() {
int pin = 0;
int tries = 1;
std::cout << “BANK OF CODECADEMY\n”;
std::cout << ""Enter your PIN: "";
std::cin >> pin;
while (pin != 1234 && tries < 3) {
std::cout << ""Enter your PIN: "";
std::cin >> pin;
tries++;

}
if (pin == 1234) {
std::cout << ""PIN accepted!\n"";
std::cout << ""You now have access.\n""; 

}
}
The mistake , the variable “tries” has been initailizaited by value “0” but should be by value 1 .
"
38,FAQ: Classes and Objects - Creating Objects,"Get Help,Git",,9,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Creating Objects” exercise from the lesson “Classes and Objects”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Creating Objects


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why do we not set title as a parameter for get_title() like we did with other functions? Is it because it’s already defined in the class scoop and isn’t needed as a parameter anymore?

Recall that parameters are optional when defining functions.
While the first method, add_title, assigns a value to title, get_title simply returns a value – the string “title.”
These could have been combined in a single function. And while the course presentation is showing us different methods (functions) that are part of the class, there is also a practical benefit to this approach demonstrated in the next part of the lesson.

Not gonna lie. Not quite sure I understand the point of functions. Anyone care to enlighten me?

Functions are used for repetitive code. If you remember from an earlier lesson which was the IT support we had to create functions to make our code more organized and less repetitive.

when using get_title() why do we need to use “std::cout<<” before calling it? I thought the get_title() function printed the title name?

Hello, @itsmariawood, and welcome to the forums.
If you look at the get_title() method in the song.cpp file, you’ll see there is only a single line of code inside the method:
std::string Song::get_title() {

  return title;

}

return hands a value back to the line of code that called the method. return does not print anything, it only returns values. std::cout<< is the command to print something to the console. The something printed in this case is the value returned by the method call which is the song title.

Good day to all.
I’m stuck with the second point in the creating objets instructions. I don´t know what i’m doing bad, but i can’t find the solution.

Sin título911×553 26.2 KB

Can you tell me what i am doing wrong, please?
Thanks!

You have to pass in the title as a parameter. Since “add_title” is a function and not a parameter (i.e. int or bool are parameters), the title cannot be simply assigned with an “=”.
Instead you need to pass in the argument as: electric_relaxation.add_title(“Electric Relaxation”);
"
39,FAQ: Code Challenge: C++ Functions - Tenth Power,"Get Help,Git",,13,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Tenth Power” exercise from the lesson “Code Challenge: C++ Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Tenth Power


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","

using namespace std;

class Student{
	public:
		float Marks[7];
		char Name[40];
		int Number;
	Student(float marks[], int number , char name[]){
		Number = number;
		Name[40] = name[40];
		Marks[7] = marks[7];
		cout << ""Hello: "" << name << endl;
	}
    float calc_average(){
    	int m;
    	float sum=0, average;
    	for(m=0 ;m<Number; m++){
    		sum += Marks[m];
		}
		average =sum / 7;
		return average;
	}
	
	};


int main (){
	char name[40];
	float marks[7];
	int i, number;
	char subjects [7][50] = {""Introduction to programming"", ""Programming Lab"", ""Discrete Math"", ""Introduction to Computer Systems"", ""Elements of Economics"", ""Communication Skills"", ""Physics for Computing Sysytems""};
	cout << ""Enter your name: "";
	cin >> name;
	for(i=0; i<7; i++){
		cout << ""Enter the marks for "" << subjects[i] << "": "";
		cin >> marks[i];
	}
	
	Student Gracio(marks, 7, name);
	cout << ""The average for your marks is: "" << Gracio.calc_average() << ""\n"";
	
	return 0;
	
}

Could someone help please…It’s giving me the wrong average…

Maybe you can help yourself: since it’s doing a bunch of stuff, how far does it get before things start being wrong? Since it’s a program that you are writing, you could add code in it that prints out everything that is being done.

It’s all good until it comes to printing average…The function is actually returning a wrong average.

That’s not a black box either. You can look at what happens in it. It divides some sum by some length, doesn’t it? So is the sum right, is the length right? And if not, continue looking at whichever of them wasn’t right.



#include 
#include 
// Define tenth_power() here:
double tenth_power(int num){
double answer = 1;
for (int i=0; i < 10; i++){
answer = answer*num;
}
return answer;
}
int main() {
std::cout << tenth_power(0) << “\n”;
std::cout << tenth_power(1) << “\n”;
std::cout << tenth_power(2) << “\n”;
}

this function works but it returns a double. The instructions don’t say the return needs to be an integer, only that the formal parameter should be. Is there any reason that the return ought to also be an integer?

I am a little confused as where/when we learned the function “pow”. Did I miss something? Was it something I was supposed to know already? I don’t recall it in the notes.

When in doubt, Google.
pow in C++

#include < iostream>
#include < c math>
// Define tenth_power() here:
int tenth_power(int num)
{
return pow(num, 10);
}
int main() {
std::cout << tenth_power(0) << “\n”;
std::cout << tenth_power(1) << “\n”;
std::cout << tenth_power(2) << “\n”;
}

Look at this snippet and see what is different.
#include <stdio.h>      /* printf */
#include <math.h>       /* pow */

int main ()
{
  printf (""7 ^ 3 = %f\n"", pow (7.0, 3.0) );
  printf (""4.73 ^ 12 = %f\n"", pow (4.73, 12.0) );
  printf (""32.01 ^ 1.54 = %f\n"", pow (32.01, 1.54) );
  return 0;
}

http://www.cplusplus.com/reference/cmath/pow/

You can use pow that we didn’t cover to this point or you can do like this.
int tenth_power(int num){
  return (num * num * num * num * num * num * num * num * num * num);  
}

int main() {
  
  std::cout << tenth_power(0) << ""\n"";
  std::cout << tenth_power(1) << ""\n"";
  std::cout << tenth_power(2) << ""\n"";
  
}


The reason we do
return pow(num, 10);

Is to avoid doing things like
  return (num * num * num * num * num * num * num * num * num * num);  

What if it was raised to the power of 100?

Could use a loop. 
"
40,FAQ: Conditionals & Logic - Switch Statement,"Get Help,Git",,11,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Switch Statement” exercise from the lesson “Conditionals & Logic”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Switch Statement


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
The content says: Note:  Without the  break  keyword at the end of each case, the program would execute the code for all matching cases and the  default  code as well. This behavior is different from  if  /  else  conditional statements which execute only one block of code.
Is this correct? without the ‘break’ keyword, i don’t think the program executes the code for “all matching cases AND the default case”, rather, it simply executes “all the code within that matching case and below”. For example, if you let number = 1 in the example, it will execute cases of 1, 2, 3, 4, and 5 because case 5 has ‘break’ keyword in it. Note that number is clearly NOT 2 nor 3 nor 4 nor 5. so case 2, case 3, case 4, case 5 are NOT matching case at all.

Hello @mraji. Welcome to the forum!
You are EXACTLY right! I believe this issue has already been reported to Codecademy. I’ll check for sure. If it hasn’t, I’ll report it.
Update: Didn’t see it in the que of active bugs, so I made a report. Thanks for pointing out this error.

Can a switch statement be used together with relational operators such as: <, !=, >= please?
For example,
#include <iostream>

int main() {

    int rating = 4;

    switch (rating) {

        case (rating <= 3): // Is this possible please?
            std::cout << ""Less than or equal to 3 stars!\n"";
        break;
        default:
            std::cout << ""Better than 3 stars!\n"";
        break;

    }

}

Thank you!

Hello, @shenobey.
I don’t think you can use an expression like that in a case. Someone please correct me if I’m wrong. You can, however, use a range like this:
#include <iostream>

int main() {

    int rating = 4;

    switch (rating) {

        case 0 ... 3: // You have to include a space then 3 dots, so the compiler knows the dots aren't decimals. The space after the dots is optional. The values are inclusive.
            std::cout << ""Less than or equal to 3 stars!\n"";
        break;
        default:
            std::cout << ""Better than 3 stars!\n"";
        break;

    }

}

You can also use ranges of letters: 'A' ... 'M'. The spaces, I believe are optional with non-numeric values, so 'A'...'M' should also work.

Thank you very much, midlindner!

Why is this the case? In mraji’s example, why would the computer execute case 2 , 3, etc, if number = 1?
Like isn’t the computer supposed to only execute cases that match the condition?


int main() {
int number = ?;
switch(number) {
case 1 :
std::cout << “Bulbusaur\n”;
case 2 :
std::cout << “Ivysaur\n”;
case 3 :
std::cout << “Venusaur\n”;
break;
case 4 :
std::cout << “Charmander\n”;
break;
case 5 :
std::cout << “Charmeleon\n”;
break;
case 6 :
std::cout << “Charizard\n”;
break;
case 7 :
std::cout << “Squirtle\n”;
break;
case 8 :
std::cout << “Wartortle\n”;
break;
case 9 :
std::cout << “Blastoise\n”;
break;
default :
std::cout << “Unknown\n”;
break;
}
}

If i set number to 1 it will still run case 2 and 3 because they don’t have breaks, but if i set number to 3 it will only run case 3, presumably because the computer recognizes that number != case 1 or case 2. Why can the computer recognize the inequality in the latter case but not the former?

Hello @arnodunstatter.
Everything between the { }'s following the switch() statement is a single block of code. The case 1:, case 2:, etc. are just labels. Basically what happens is when the expression inside of the switch() statement’s parenthesis is evaluated, control flow is passed to the matching label. Labels aren’t executed. They just mark a spot in the switch statement’s code block. When control is passed to first matching case:  label, every line of executable code that follows inside of the code block gets executed. If control reaches a break; statement it gets passed to the next line of code outside the switch statement’s code block.

hello @midlindner, just  a reminder to the previously asked question concerning the absence of the “break”. the bur hasn`t been resolved yet?




 net1618211917:

the bur hasn`t been resolved yet?


Not sure what you mean.
"
41,FAQ: Vectors - .size(),"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “.size()” exercise from the lesson “Vectors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise .size()


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi guys there is a little thing I am confused about. I did the exercise in which it asks to add the more grocery items and asks us to print the size of the grocery. I did all of it and it was correct but instead of showing the total number grocery items on the right side, it shows me some weird message. It says the following : /usr/lib/gcc/x86_64-linux-gnu/7/…/…/…/x86_64-linux-gnu/Scrt1.o: In function _start': (.text+0x20): undefined reference tomain’
collect2: error: ld returned 1 exit status
Can anyone explain me why didn’t I get the number of grocery items?

Definintely strange behavior with the console throughout the lesson. Seems like evey other exercise the console shows the error you mentioned, and doesn’t save code in the editor. When I rereshed my browser to see if the console would behave properly, my code was gone. There has been buggy behavior reported in at least one Python lesson where the console was temporarily malfunctioning, but it was quickly resolved. Hopefully this will be too. Perhaps @sonnynomnom could take a look at the exercises in this lesson on vectors.




 text9413046488:

undefined reference to main


…well, is it? that’s what ld would say when you try to compile and link a file with no main in it.
"
42,FAQ: Variables - Arithmetic Operators,"Get Help,Git",,20,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Arithmetic Operators” exercise from the lesson “Variables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Arithmetic Operators


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
This is the first lesson that contains the line return 0;. What does this mean?

Hello jjtumelty,
return 0; is because main() is a function that needs to return a -int- value, -return 0;- means that main() function returns a int with the value of zero, maybe this is difficult now but in the next topics this will be clear for you.
Regards,
José.

numbers for status codes is very common in program. 0 is very often used to indicate the function/method ran/completed successfully
i mean who doesn’t know 404 page not found? So numbers are very common to indicate success or failure (and what kind of failure), particular useful if your program grows in size.

Hello,!
I am able to compile and execute the code, the  “Next” button appears and everything seems to go in a flow. However I cannot see the output of my program even if the code compiles successfully. Please let me know how do i see the output of my program.
Thanks!

is the second instruction really needed to get the answer of the arithmetic operation

Hello, @mega6510276251! Welcome to the forum!
I assume this is the instruction you are referring to:

But how would we know what that value is?
You can output the value by simply adding this code underneath:
std::cout << score << ""\n"";

Notice how when we want to output a variable, we don’t add double quotes around its name.

This statement is not necessary for the arithmetic operation score = 1234 * 99; to be executed. It is only necessary if we want to see the value assigned to score printed to the console.

Regarding the code:
std::cout << score << ""\n"";

What is the function of << ""\n"" please?
When using std::cout, do we always need to include ""\n"" at the end please?
Thank you!

\n is special entity for new line. Do you always need it? No, only when you want a new line.

But in the earlier exercises we were able to return strings without the use of

return 0;

as shown below:

image.png959×216 9.33 KB

Furthermore, the function isn’t returning an integer with the value of zero, as 1234 * 99 = 122166.
I’m still just as confussed as jjtumelty as to why

return 0;

is needed.

Hello, @arnodunstatter.
return 0; at the end of your int main() method is essentially an exit status code. As I understand it, 0 by convention means that the program executed successfully. You could include code to return something other than 0 to indicate that the program is finished, but did not successfully complete its task(s).
As to why your program works even when you don’t have return 0; at the end of your int main() method, again, as I understand it, most modern compilers add return 0; to the compiled file when the programmer leaves it out.

How do I, as the programmer, know that the program will execute successfully before i actually run it?
Also, thanks for the response!

If the last line of the int main() method is reached and executed then the program was not halted by an error. You might have a program, Program A, that in its code executes another program, Program B. Let’s say Program A is expecting Program B to move a file from one location to another. In your Program B, you could have code to return 1; if for whatever reason the file wasn’t successfully moved. This would be preferable to letting execution be halted by a runtime error. This way Program A could include code to deal with the problem. If Program B is able to complete its job, the last line of int main() will be reached, and 0 will be returned, so Program A knows all is well.

thanks for that explanation.

There looks to be a bug in this lesson. If the code is compiled in the right-hand-panel with > g++ math.cpp and run with > ./a.out the result is not printed to the screen. For maintainers here, the code (if edited with your favorite editor in the right-hand-panel) does not have the modifications the user make in the left-hand-panel.
Short answer, this problem does not print the output the user should expect and is confusing to a new  learner.

Hello, @tag1340309919.
Did you click Run before compiling? Clicking Run saves your code. The compiler will compile the last ‘saved’ code from the editor.

Ah. OK. Hitting “Run” saves the code but it doesn’t compile and run it? Perhaps the button ought to be “Save” rather than “Run”?
Thanks

Yeah, it really should be a Save button, or the instructions could mention clicking Run to save our code prior to compiling.

hola
no entendí la tercera parte del ejercicio si me la pudieran explicar se los agradecería

@joscodigo0,
Despues de teclear g++ math.cpp y presionar enter, teclee ./a.out
No se olvida hacer todo en la ventana llamado bash. Lo siento si mi español está mal.
¡Espero poder ayudarlo!
"
43,FAQ: Functions: Scope & Flexibility - Review,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review” exercise from the lesson “Functions: Scope & Flexibility”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Review


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I’m trying to build a function that does the same thing as in the example ( 7/ 9 ).

add_together()

which takes two arguments and, if they’re numbers, adds them, and if they’re strings/characters, concatenates them.
Since i’m using a template, i don’t have any relevant fns.cpp, but my fns.hpp is as follows:

template 
T add_together(T input1, T input2){
return input1 + input2;
}

I know that strings can be concatenated using the “+” operator, and yet when i try to run my test main(), as follows:

#include <iostream>
#include “fns.hpp”
#include <string>
int main() {
std::cout << add_together(1,2) << “\n”;
std::cout << add_together(“A”, “B”) << “\n”;
}

I get the following:
error: invalid operands of types 'constant char*' and 'constant char*' to binary 'operator+'
After some googling i see that constant characters cannot be added together, but a constant character can be added to a string, but if, within my main(), i specify as follows:

std::cout << add_together(std::string “A”, “B”) << “\n”;

then the error changes to:
error: expected primary-expression before string constant
std::cout << combine(std::string ""A"", ""B"" << ""\n"";
and i have no clue what that means. Any ideas?

I decided to challenge myself by using one function inside of another function. It took me a lot of debugging to get it straight, but it was worth it! My idea was to create a program which calculates kinetic energy from an object’s mass, displacement (that’s distance in a particular direction), and the time taken to make the movement. Here is the main.cpp file of my code:
#include <iostream>
#include ""fns.hpp""

int main() {
  std::cout << kinetic_energy(80, 25, 16) << ""\n"";
}

//KE = 0.5 * 80 * ((25 / 16) * (25 / 16))
//KE = 97.6562 Joules

Here is the fns.hpp file of my code:
double kinetic_energy(double mass, double displacement, double time);
double average_velocity(double displacement, double time);

Here is the fns.cpp file of my code:
double average_velocity(double displacement, double time) {
  return displacement / time;
}
double kinetic_energy(double mass, double displacement, double time) {
  return 0.5 * mass * (average_velocity(displacement, time) * average_velocity(displacement, time));
}

Thank you, Codecademy for the fact that I was able to code this! Keep up the good work!
"
44,FAQ: Errors - Link-time Errors,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Link-time Errors” exercise from the lesson “Errors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Link-time Errors


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I got stuck on the link-time error lesson for a while. It turns out you need to turn int Main() into int main(). The hint section doesn’t steer you into this direction. Hopefully this helps somebody out.
Happy coding 

hello, you need to change Main to main

hey guys, please this might sound amateur but i am actually an amateur.
please do we need to worry about the code that was already written, because after i had finished compiling i came back to the code to see if i could understand what was in the code editor,but i couldn´t understand how they came about it, please can ibe enlightened?
"
45,FAQ: Errors - Compile-time Errors,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Compile-time Errors” exercise from the lesson “Errors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Compile-time Errors


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
hehe I fixed them before ever compiling the code:

image1280×1024 155 KB


There is a mistake in the hint: it refers to millionaire.java. As this is a C++ course one can only imagine this material was copy-pasted from a Java course.
"
46,FAQ: Errors - Review,"Get Help,Git",,12,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review” exercise from the lesson “Errors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Review


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hey
Can anyone explain what’s error here??
#include 
#include <stdlib.h>
#include 
int main() {
srand (time(NULL));
int	fortune = rand / 10;
if (fortune == 0) {
std::cout << ""Flattery will go far tonight.\n"";

} else if (fortune == 1) {
std::cout << ""Don't behave with cold manners.\n"";

} else if (fortune == 2) {
std::cout << ""May you someday be carbon neutral\n"";

} else if (fortune == 3) {
std::cout << ""You have rice in your teeth.\n"";

} else if (fortune == 4) {
std::cout << ""A conclusion is simply the place where you got tired of thinking.\n"";

} else if (fortune == 5) {
std::cout << ""No snowflake feels responsible in an avalanche.\n"";

} else if (fortune == 6) {
std::cout << ""He who laughs last is laughing at you.\n"";

} else if (fortune == 7) {
std::cout << ""If you look back, you'll soon be going that way.\n"";

} else if (fortune == 8) {
std::cout << ""You will die alone and poorly dressed.\n"";

} else if (fortune == 9) {
std::cout << ""The fortune you seek is in another cookie.\n"";

}
}

This should be the end result
#include 
#include <stdlib.h>
#include 
​
int main() {
srand (time(NULL));
int fortune = rand() % 10;
if (fortune == 0) {
​
std::cout << “Flattery will go far tonight.\n”;
} else if (fortune == 1) {
std::cout << ""Don't behave with cold manners.\n"";

} else if (fortune == 2) {
std::cout << ""May you someday be carbon neutral\n"";

} else if (fortune == 3) {
std::cout << ""You have rice in your teeth.\n"";

} else if (fortune == 4) {
std::cout << ""A conclusion is simply the place where you got tired of thinking.\n"";

} else if (fortune == 5) {
std::cout << ""No snowflake feels responsible in an avalanche.\n"";

} else if (fortune == 6) {
std::cout << ""He who laughs last is laughing at you.\n"";

} else if (fortune == 7) {
std::cout << ""If you look back, you'll soon be going that way.\n"";

} else if (fortune == 8) {
std::cout << ""You will die alone and poorly dressed.\n"";

} else if (fortune == 9) {
std::cout << ""The fortune you seek is in another cookie.\n"";

}
}

std::rand() gives you any digit number  like 54856415,654681,etc, so dividing by 10 wont give you a single digit …
which results in failure of all if-else test cases …
ps : u must try printing std::rand() 10 times to get an idea about how it works , dont forget to add srand(time(NULL)) before it …

Thank you so much …

I’d hope there’s an explanation of the srand and rand() before throwing them at you.
Or at least a hint that you should Google them.

Hi guys I have a quick question, I am trying to make a program, that mimics a bank. You have to put in the correct pin and it gives you an “access granted” message. In the console I keep getting Access denied 10 times if I put in the wrong digit! Can anyone figure out what I keep doing wrong? Thanks. If you have any questions just let me know.
#include <iostream>

int main() {
  int x;

  
  std::cout << ""Please enter your bank pin!"";
  std::cin >> x;
  
  for (int y = 0; y < 10;) {
    if (x==4526) {
      std::cout << ""Access Granted\n"";
    }
    else {
      std::cout << ""Access denied, please try again."" << y+1 << "" tries remaining\n"";
y++;
    }
}
}


You need to find a keyword to break out of the loop if you successfully guessed the pin number.

i think its the last curly brace but if your getting an output then i think it should be that your variables or program logic is flawed.

hey guys, please a quick question.
i was able to find the bugs and remove them but i am not getting exactly the “Flattery will go far tonight” fortune, i am getting other output put not the supposed output. so my question now is : is it part of a bug or is that how the program is meant to behave?

Thank you, I have already figured it out

Hey, I think that’s how program is meant to behave, but you could also add some conditions to print out only “Flattery will go far tonight”.
"
47,FAQ: Hello World - Introduction to C++,"Get Help,Git",,7,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction to C++” exercise from the lesson “Hello World!”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Introduction to C++


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
The first lesson whwre you run codecademy it started to position the code on the bottom but for the solution it was right next to it How?

What is object orientated programming in simple words if possible?

The phrase “Object Oriented” means that a program compiles in segments, not line-by-line.  For example, in C++, you can create a method that contains different attributes, such as string name1 = ""death-waltz""; as a part of the constructor, and then call it again CUSTOMIZABLY, meaning you can replace it with new characters, if the string is not immutable. In non-OOPLs, you cannot do this to my understanding. Hope this helps!

Just so you guys know, cout does not stand for character output, as you said in lesson 3: “Output”. Rather, it stands for console output. I understand some people refer to it as C++ out, C out, character out, create output, etc., but I do believe the actual meaning is console output .

Can I use c++ to create games? If not what code can I use?

Modern desktop games like Half-life, Doom and so on are mainly written in C++ with API libraries for graphics, such as: OpenGL, DirectX, Vulkan. There are also lots of complicated math involved so you may consider brushing up your knowledge in group theory, probability theory, calculus and etc.
"
48,FAQ: Variables - Review,"Get Help,Git",,18,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review” exercise from the lesson “Variables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Review


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
Excited that this exercise is here, and looking to contribute some ideas? Go here!
None of the above?  Find out where to ask other questions here!
","
When is the reference guide for C++ variable going to come out?

My output is, ""your bmi is: 'inf""
int main() {
  
  	double height, weight, bmi;
  	bmi = weight / (height * height);
  
  std::cout << ""Type in your height (m): "";
  std::cin >> height;
  std::cout << ""Type in your weight (kg): "";
  std::cin >> weight;
  std::cout << ""Your bmi is: "" << bmi << ""\n"";
  
 
  
  return 0;

}


When they literally say don’t forget to add a “\n” multiple times, and then they don’t

I got the same issue.
Did you fix it?

@pozo29 @thisisit8032542346
Please note that we assign values to the weight and height variables in these lines (by getting input from the console):
std::cin >> height;
std::cin >> weight;

But in the code provided by @thisisit8032542346 value of the bmi is calculated above these lines. So the computer is not able to use values provided by the user of our program because bmi is calculated earlier. To fix this problem we just need to move calculation of the bmi to the end of the script:
#include <iostream>

int main() {
  // declare variables
  double height, weight, bmi;

  // get input and assign value to the variable height and weight
  std::cout << ""Type in your height (m): "";
  std::cin >> height;
  std::cout << ""Type in your weight (kg): "";
  std::cin >> weight;
  
  // use inputed values to calculate bmi
  bmi = weight / (height * height);
  std::cout << ""Your bmi is: "" << bmi << ""\n"";

  return 0;
}


Can anyone help me figure this out? My code looks almost exactly the same as previous successful versions, but it will only ask for one input and then give up. This is so frustrating.

Capture.JPG1672×833 56.4 KB


Hello, @micro2271336966. Welcome to the forum!
Have you clicked Run since you added the code to get the user’s weight? Clicking Run saves your code. If you don’t click Run after each change in the code editor, you just re-compile the same code that was there before the previous time that you clicked Run.

That did it, wow. Thank you very much for the fix, I feel so silly for not understanding that.

No problem. I believe the instructions are a little unclear regarding the use of the Run button in the lessons where we have to compile the code. The button really should be labeled Save in these lessons.

I keep getting this:




[Album] Imgur





It won’t print the other statements, just the first one. I also tried putting values into the variables and it wouldn’t calculate.
double height = 1.51, weight = 65.75, bmi;

Hello, @srinac, and welcome to the forums. Did you click Run after adding code? See this answer above FAQ: Variables - Review

Based o the lack of the command prompt - it looks like your program execution wasn’t finished, the program waits for the input from you. Click on the terminal (right pane), input the value for height (1.51) and press enter.

Hmm ok  I got it. I thought the terminal printed out text. That’s why I got confused  because I thought it print out : type in your height (m):, type in your weight (kg), and Your bmi, as the other lessons like Hello World.

There’s an issue with the final exercise with the BMI calculation. When I do the code exactly the way I’m supposed to:
#include <iostream>

int main () {

double height, weight, bmi;

std::cout << ""Type in your height (m): "";
std::cin >> height;

std::cout << ""Type in your weight (kg): "";
std::cin >> weight;

bmi = weight / (height * height);

std::cout << ""Your BMI is "" << bmi << ""\n"";

}

I get this really long error message about ; being expected before std::cout, but when i run it in g++ on my ubuntu laptop it works just fine, so there is clearly something wrong with the console in the exercise.

Hello, @calvy667, and welcome to the forums. If you’re sure you haven’t omitted any semicolons in your code in the Codecademy editor, please post a screenshot that includes your code as well as the error message in the console.
One possibility may be that you didn’t save your most recent edit in the editor prior to compiling, or haven’t compiled since your most recent saved edit. The Run button should really be labelled Save in this exercise.

i got question about the terminal after compiling and executing the code for the bmi exercise the terminal keeps giving me the same answer that was written as my weight ?

The output from my code is not what I expect or the last two exercises yet they are being marked as correct. For example the code below only outputs the following typing 1 as the first input
Type in your height (m): 1
dollar sign
It never asks for the weight. I cant understand why. As soon as I hit enter after typing in the number it goes to the dollar sign and does not ask for the weight.
Is this due to my code being wrong or a bug?
#include 
int main() {
double height, weight, bmi;
// Ask user for their height
std::cout << ""Type in your height (m): "";
std::cin >> height;
// Now ask the user for their weight and calculate BMI
std::cout << ""Type in your weight (kg): "";
std::cin >> weight;
bmi=weight/(height*height);
std::cout<<“Your BMI value is "" << bmi <<”\n"";
return 0;
}
Any help would be appreciated. Thank you in advance.
"
49,FAQ: Loops - Introduction to Loops,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Introduction to Loops” exercise from the lesson “Loops”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Introduction to Loops


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I’m stuck, I need help. I know this isn’t apart of the exercise, but my calculator is only returning the actual third number of what I inputted, not the difference. If you run this code, you’ll see exactly what I’m talking about. Note: Please input “+” as your first operator, because that’s the part I’m working on and then “-”.
#include 
#include 
using namespace std;
int main() {
char op;
char opS;
double num1;
double num2;
double num3;
// Title
std::cout << ""-Calculator-\n"";


std::cout << ""Enter your first number.\n"";
std::cin >> num1;

std::cout << ""Enter either of these operators: +, -, /, or *\n"";
std::cin >> op;

std::cout << ""Enter your second number.\n"";
std::cin >> num2;

double storedNum1;

 switch(op)
{
    case '+':
        std::cout << ""Answer:\n""<< num1+num2;
        num1+num2==storedNum1;
        std::cout << ""\n* , /, + or - this number? If not, enter 'exit'\n"";
        
        std::cin >> opS;
        
        switch(opS)
        {
        case '-':
		std::cout << ""Enter your third number."";
		std::cin >> num3;
		std::cout << num3-storedNum1 << "" is the answer."";
        	
		}
        
     	break;

    case '-':
        std::cout << ""Answer:\n"" << num1-num2;
        break;

    case '*':
        std::cout << ""Answer:\n"" << num1*num2;
        break;

    case '/':
        std::cout << ""Answer:\n"" << num1/num2;
        break;

    default:

        std::cout << ""Operator isn't valid. Try again.\n"";
        break;
}
char c;
std::cin >> c;
return 0;

}

Btw I can say your code is messed up little a bit. What do you mean by num1+num2==storedNum1; ? I think you are trying to sum num1 and num2 and then assign to a variable storedNum1 but that’s not the right way of doing it. You can do this storedNum1 = num1 + num2;
Also, I will suggest you go through lvalue & rvalue topics



GeeksforGeeks – 27 Sep 17



lvalue and rvalue in C language - GeeksforGeeks
A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.






"
50,FAQ: Logical Operators - Logical Operator: &&,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Logical Operator: &&” exercise from the lesson “Logical Operators”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Logical Operator: &&


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why is hunger and anger ""int""s, not ""bool""s? Also, is there any reason why you would want to use “&&” instead of the more intuitive “and”? Same goes for “II” and “!” with regards to “or” and “not”.

Same question - why are hunger and anger designated as ""int""s and not ""bool""s in lines 5 & 6 of the code? Good question, @shampoomactavish!
"
51,FAQ: Variables - Step 2: Initialize a Variable,"Get Help,Git",,5,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Step 2: Initialize a Variable” exercise from the lesson “Variables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Step 2: Initialize a Variable


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I keep getting an error when trying to compile
int main()
{
int year;
year = 2019;
}
It gives me the error:
variable.cpp: In function ‘int main ()’:
variable.cpp:11:1: error: expected ‘;’ before
token
}
I’ve tried rewriting the code, starting a new session but nothing works. what have I done wrong here?

Just you need to include the required library for main() function.
write the following line at the very first of your code
#include 

I don’t believe any includes are required here, since to my knowledge there is no source file we need to include to be able to define a main function.
The code looks fine to me; my guess is maybe there used to be a bug in the course.

They need to update it to 2020. Just a small note. 
"
52,FAQ: Vectors - Adding and Removing Elements,"Get Help,Git",,12,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Adding and Removing Elements” exercise from the lesson “Vectors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Adding and Removing Elements


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi,
In this exercise, why is the vector declare as “std::string” instead of just “string”?
Thank you,
Megan

@ajaxcoder74881 hey megan, the C++ string class is part of the std namespace. so you simply have to include it 

great note tho. im going to add a hint in there just in case

Why do we need to use .push_back and  .pop_back?
I mean what is their function?

to add/delete from a vector!
for example, suppose you are building a game and you want to keep track of an user’s friend or inventory list, you can create a vector that holds those people/items. and as they add a friend/item, you can use .push_back(). and as they delete a friend/item, you can use .pop_back().

Hi! How can we pop-back  a specific index and/or a specific value?
Edit: For when you want to change just one value maybe in the middle of the vector,  not every value as in the Operations lesson under Vectors.

But wouldn’t
std::vector [char] last_jedi;
also work?
square brackets above should be triangles but the forum somehow deletes what’s between them, sorry about that.
Since we haven’t discussed the char vs string difference in the previous lessons I’m confused what is the difference between char and string.

Hi!
Shall we add file #include string or it’s not necessary ?

What is a return value?

please is there any particular way to know the reason and why there is a change in the letters color?

I tried .pop_back() function in the last_jedi case, I used this function right after the four strings “.push_back""ed, then cout from index 0 to 3. and I got the result :” kylo rey luke finn "".
Obviously the .pop_back() function didn’t work as predicted.
Then I tried to add another .push_back(“kylo”) after the .pop_back(), guess what I got ?
"" kylo rey luke kylo ""
So, it seems that .pop_back() don’t really remove the last element in the vector unless you add something to the vector after you .pop_back() it.
why? what if I really just want to remove it instead of replace it?
"
53,FAQ: Classes and Objects - Review,"Get Help,Git",,6,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review” exercise from the lesson “Classes and Objects”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Review


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hello, I was just wandering if there is a way to delete a particular element in a vector unlike the pop_back() method which only deletes the last element in a vector?
A reply would be appreciated.

Hello there, is it a good idea to use a switch statement in a while or a for loop considering that there will be break statements in the switch cases ?

Hello you all! I need some help here. Why my code doesn’t work?
Everything was fine until I added constructor, destructor and moved declarations and definitions to separate files.
Thanks!


gist.github.com


https://gist.github.com/codecademydev/f05d50b44e27e781b4ab91752fb7d1c7
main.cpp
#include <iostream>
#include ""your_class.hpp""
// include your header file here:


int main() {
 Pet pet1(""Willy"", ""Dog"", ""Schnider"", 5);

 std::cout << pet1.get_name() << ""\n"";
 std::cout << pet1.get_type() << ""\n"";
This file has been truncated. show original
your_class.cpp
#include <iostream>
#include <string>
#include ""your_class.hpp""

 Pet::Pet(std::string new_name, std::string new_type, std::string new_owner, int new_age)
 {
   name = new_name;
   type = new_type;
   owner = new_owner;
   age = new_age;
This file has been truncated. show original
your_class.hpp
#include <iostream>
#include <string>

class Pet {
  // attributes
  std::string name;
  std::string type;
  std::string owner;
  int age;

This file has been truncated. show original








You probably need to do in a function by copying the vector to another vector except the element(s) of which you define their indexes to be ignored. Then, at then end, you have your new vector without those element(s).

beside those problematic set_xxx() methods, I think there were some weird chars somewhere as spaces that were making the issue. I cleaned up your code and it’s working. Have a look and compare it with yours.
/////////////////////////////////////////main.cpp
#include <iostream>
#include ""your_class.hpp""
// include your header file here:


int main() {

 Pet pet1(""Willy"", ""dog"", ""Schnider"", 5);

 std::cout << pet1.get_name() << ""\n"";
 std::cout << pet1.get_type() << ""\n"";
 std::cout << pet1.get_owner() << ""\n"";
 std::cout << pet1.get_age() << ""\n"";
}

/////////////////////////////////////////your_class.hpp
#include <iostream>
#include <string>

using namespace std;

class Pet {
  // attributes
  std::string name;
  //std::string type;
  std::string type;
  std::string owner;
  int age;

  public:
  // add constructor
    Pet(std::string new_name, std::string new_type, std::string new_owner, int new_age);
    

  // add destructor
    ~Pet();

  // methods
  /*void set_name(std::string new_name);

  void set_type(std::string new_type);

  void set_owner(std::string new_owner);

  void set_age(int new_age);*/

    std::string get_name();

    std::string get_type();

    std::string get_owner();

    int get_age();

  //void print_data();
};


/////////////////////////////////////////your_class.cpp
#include <iostream>
#include <string>
#include ""your_class.hpp""

using namespace std;


Pet::Pet(string new_name, string new_type, string new_owner, int new_age){   
   name = new_name;
   type = new_type;
   owner = new_owner;
   age = new_age;
 }

 
 Pet::~Pet()
 {
   std::cout << ""Object is destroyed.""<<endl;
 }
/*
void Pet::set_name(std::string new_name){
    name = new_name;
  }

void Pet::set_type(std::string new_type){
    type = new_type;
  }

void Pet::set_owner(std::string new_owner){
    owner = new_owner;
  }

void Pet::set_age(int new_age){
    age = new_age;
  }
*/
string Pet::get_name(){
    return name;
  }

string Pet::get_type(){
  return type;
}

string Pet::get_owner(){
    return owner;
  }

int Pet::get_age(){
    return age;
  }

/*void Pet::print_data(){
     std::cout << name << "", "";
     //std::cout << type << "", "";
     std::cout << owner << "", "";
     std::cout << age << ""\n"";
  }*/

"
54,FAQ: References and Pointers - Memory Address,"Get Help,Git",,3,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Memory Address” exercise from the lesson “References and Pointers”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Memory Address


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
If I consider the following code -

int soda = 99;
int &pop = soda;
pop += 1;
soda +=  20;
std::cout << soda << ""\t"" << pop;

This one changes the value to 120, so a change to a reference changes the original variable and vice-versa, but in Line 2 it’s not a declaration, though it’s not being considered as the Address-Of operator , WHY ? Am I having some wrong concepts about Declaration ?

First, remember this point:
If & is used in declaration, it’s a reference, else it’s a memory address.
In your example, & is used in declaration. Therefore, it’s a reference (aka alias). Reference is directly modifying the variable it’s pointing to. Hence, line 3 and 4 of your code will make changes on soda and pop, and both of them are the same. Line 3, adds 1 to initial value (99+1=100) and line 4 adds 20 (100+20=120).
Line 2 of your code IS A DECLARATION.
"
55,FAQ: Compile & Execute - Comments,"Get Help,Git",,10,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Comments” exercise from the lesson “Compile & Execute”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Comments


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
it keeps saying that spell.cpp was moved but every time I reset the exercise it does not get spell.cpp back.

Hi!
I was just going through lesson 4 of C++ and I have a question. As it says in the lesson, // is used of comments on one line of the program, but what if the comment written after // is longer than a line and reaches two or three lines, would there be an error or would the program still run as normal?

as long as you just let it linewrap you’ll be fine, if you hit return, you’ll get an error. Common practice is to limit your code line length to around 80 characters.

guyyyyys how should i compile and excute !

hello, i was going through 4 lesson of C++ and i got a doubt what would be the change if we write //print “harry potter” instead of //harry potter ??

Why we name the executable file  of spell.cpp  as spell? Why not anything else such as SP or ttp etc?

I am really not happy with these tutorials. No detailed explanations on what to do and no help.

What is the difference between doing
g++ spell.cpp then ./a.out
vs.
g++ spell.cpp -o spell then ./spell
Are these two actions the same? Is there a difference? Does it matter?

This might be a dumb question, but why didn’t the code write “expecto patronum”?
"
56,FAQ: Classes and Objects - Access Control: Public and Private,"Get Help,Git",,14,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Access Control: Public and Private” exercise from the lesson “Classes and Objects”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Access Control: Public and Private


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I don’t understand the essence of access modifiers such as public or private in classes if for example everything in a class is  private , meaning class members are limited to the scope of the class.
What is the point if object instances have no access to its class members ?
Please correct me if I am misunderstanding this concept or at least clarification. Thank you.

Hello,
My apologies if the questions are very basic (I’m used to Python and just beginning in C++) or off-topic.
This is the code of the song.hpp file:
#include 
// add the Song class here:
class Song {
std::string title;
public:
void add_title(std::string new_title);
std::string get_title();
};
In the song.cpp file I was expecting that the “Song ::add_title” method (see code ) I needed to return the “title” but it is not. In that case when I call the method how will the function call return a string?
// add Song method definitions here:
void Song::add_title(std::string new_title) {

  title = new_title;

}

The second question is related with this other method :
In this case I don’t pass any parameter but the function returns “title”.
std::string Song::get_title() {

  return title;

}

My guess is that the “title” variable was defined previously in the Song class so any method inside that class can use that variable. Is this correct?
Thank you in advance.
iroupa




 iroupa:

IN that case when I call the method how will the function call return a string?


the method won’t return a string, void means no value is returned.

Hi stetim94.
Thank you for your help.
I understand that void means that no value is returned but what I would like to mean in my question is how does the function assigns title to the variable if the function doesn’t return any value?

title is an attribute (also known as member data), as explained in this lesson:
https://www.codecademy.com/courses/learn-c-plus-plus/lessons/cpp-classes-and-objects/exercises/cpp-class-members
we can assign to attributes like title, which is very different from return (handing back data to caller)
if we where to do this:
void Song::add_title(std::string new_title) {

  title = new_title;
  return tilte
}

we would have a problem.

If I understood it correctly, your explanation answers my first (no return case ) and second question (return inside function), which means that if I define a method like the get_title inside a class and I want to use it  main to get that attribute I will always need to use return right?
Thank you for your explanation




 iroupa:

which means that if I define a method like the get_title inside a class and I want to use it main to get that attribute I will always need to use return right?


for example, this:
#include <iostream>
#include ""song.hpp""

int main() {

  Song electric_relaxation;
  
  electric_relaxation.add_artist(""A Tribe Called Quest"");
  std::cout << electric_relaxation.get_artist();
  
}

we print (cout) the artist, by printing the returned data
but we could also make a method which does the printing for us, and then doesn’t have a return value (void).
Its important to understand what return does, we can also just return a string if we want:
#include <iostream>
#include ""song.hpp""

int main() {

  Song electric_relaxation;
  
  electric_relaxation.add_artist(""A Tribe Called Quest"");
  std::cout << electric_relaxation.hello_world();
  
}

#include <string>

class Song {
  
  std::string title;
  std::string artist;

public:
  void add_title(std::string new_title);
  std::string get_title();
  
  void add_artist(std::string new_artist);
  std::string get_artist();
  
  std::string hello_world();
  
};

#include ""song.hpp""

// add Song method definitions here:
void Song::add_title(std::string new_title) {

  title = new_title;

}

std::string Song::get_title() {

  return title;

}

void Song::add_artist(std::string new_artist) {

  artist = new_artist;

}

std::string Song::get_artist() {

  return artist;

}

std::string Song::hello_world(){
  return ""hello world"";
}


Thank you for your detailed example and my apologies if the questions were to basic but as I referred previously I’m just begining with C++ and OOP.

I’m not sure what you mean, but if you mean that what is the point of private it’s so that your program doesn’t get messed up by accidentally altering it and so it can be more organized from all the other code. Please let me know if you need more help.

Does all c++ functions need to be declared with a return type as such:
[return_type] [function_name] () {
}
Because I did not specify any return type (not even void) and the exercise gave me a pass. That’s why I wonder

yes, return type is always required (or void). If either the exercise or compiler gives an error, its generally not good
don’t just assume because the lesson doesn’t give an error that everything is fine. Writing air tide validation is a very time consuming task.

Well, in exercise 5 about constructors. The constructor function has no return type it is just declared as:
Class_name(…);
It has not return type in it’s declaration.

constructors are the exception. That is because constructors should never return any values. So in a sense its void, despite being explicitly mentioned by the developer.
"
57,FAQ: References and Pointers - Review,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review” exercise from the lesson “References and Pointers”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Review


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
So…reviving the topic, would it be advised to take the C## course as well for a full understanding or nah?

I think this lesson references and pointers helped me understand & and *. However, I was hoping this lesson could help understand the this operator and the arrow operator.

I completely forgot about the letter so it really surprised me and I got quite emotional for the time and effort to finish it. That last experience was like give myself a pat on the shoulders. That was a wonderful course (review, in my case). Thank you!
"
58,FAQ: Code Challenge: C++ Functions - First Three Multiples,"Get Help,Git",,24,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “First Three Multiples” exercise from the lesson “Code Challenge: C++ Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise First Three Multiples


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I didn’t quite understand the for loop in the main() program. Could someone please explain what exactly does it do? I’d be grateful.

It’s like the for each function in other languages: for each value/element in the vector/array/list print out the multiples of each number. So here you’ve got the multiples of 8 in a vector IE {8,16,24}: print out each multiple(the element) on a new line.

Hi, I don’t really understand the use of the for loop in this exercise.
for (int element : first_three_multiples(8)) {
std::cout << element << “\n”;
I thought a for loop, runs a block of code a certain number of times.
in this case, can’t we just call in the function ?
Edit: sorry I didn’t see the reply above. So follow up question, how come the loop prints out each multiple individually and not all of them on the same line?

If first_three_multiples is a function, then why do I have to put std::vector in front of it?  Also, why is std::vector mentioned again inside the function?  It seems redundant to me.  Thank you.


yeah my codes the same as the solution, still doesnt work. this happens on so many of these lessons. how are you guys going to charge for a service that doesnt work correctly?


code_acadbeingdumb.PNG1683×985 106 KB

literally the same as the solution but counting it as wrong

Thanks a lot! That was clear and helped me get the meaning of the code 

The body of the for loop runs like this:
std::cout << element << “\n”;
Here “\n” is an escape sequence (it basically helps to format the output on the monitor)
which makes the control go to the next line. When the loop runs again, the output for that iteration will appear on the next line. Hope this helps 

Did the same thing until i noticed that I used () instead of the needed {} to enclose the num, num2 num3 in the vector definition.


image727×486 22.8 KB


I have same issue…output is also produce correclty
Capture696×631 30.8 KB


I think your problem is that you totally removed the main() function. The program was expecting you to have two functions, and call the first_three_multiples() in the main() function

@citrus7 it have main function which is hide behind prompted message.(i.e Is first_three_multiples()).
Please refer following link to know what is the main reason to cause this problem.
link:  Error in First Three Multiples

according to suggestion given by codecademy moderator…it produce result without an error.
Capture2586×547 23 KB

o/p: 8,16,24 without any error message

What does the for-loop do in this program? the syntax seems wrong compared to previous lessons. no semicolons and only 2 parts? the challenge doesnt explain it at all. how does the value of “first_three_multiples(8)” get put in “element”?
 for (int element : first_three_multiples(8)) {
    std::cout << element << ""\n"";
  }


for (int element : first_three_multiples(8))
it’s called range based for loop.
I am not having much knowledge about this,
but basically iterate vector from i=0 to i<vector.size()
and each time of iteration it assign new value to the variable(‘element’).
when i=0    =>    element=8;
i=1     =>     element=16;
i=2     =>     element=24;
for better understanding of range based for loop read following article
link:-  https://www.geeksforgeeks.org/range-based-loop-c/
(also you can check on IDE which can give better idea how range based loop works)

Hello,
When I run my code, it first returns 0 0 0 and then the correct answer 8 16 24, but I don’t get why. Any suggestions?
Edit:
When I changed my code to this, the 0 0 0 disappeared. But why? 
(left first code, right edited code)

Schermafbeelding 2020-03-30 om 21.46.181861×732 89.5 KB


In your first attempt, you specified a size for the vector. You did not include an initial value, so 0 was assigned. If you were to edit that line of code, and provide an initial value like so:
std::vector<int> multiple(3, 11):

You would have a vector that looks like this: {11, 11, 11}. Then you append the first three multiples of 8 to that vector, so your output would be:

11
11
11
8
16
24

When you removed (3), you instantiated an empty vector {} rather than a vector with 3 elements assigned the value of 0 by default {0, 0, 0}.

Code will not pass but i have it working on the console i have an output of 8, 16, 24. but its not passing! I have checked several times and im sure of my code, but even without looking at the code i clearly have passed as the requested output is working!
""Both includes iostream and vector added.
// Define first_three_multiples() here:
std::vector first_three_multiples (int num) {
std::vector multiples {num, num * 2, num * 3};
return multiples;
}
int main() {
for (int element : first_three_multiples(8)) {
std::cout << element << “\n”;
}
};
"
59,FAQ: Loops - Guess Number,"Get Help,Git",,21,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Guess Number” exercise from the lesson “Loops”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Guess Number


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I’ve compiled and run the following code for “guess number” exercise, and it works for the correct answer but if you enter the wrong answer it just exits the program. Any ideas?
#include 
int main() {
int guess;
int tries;
std::cout << “I have a number between 1-10.\n”;
std::cout << ""Please guess it: "";
std::cin >> guess;
// Write a while loop here:
while (guess != 8 && tries < 50) {
std::cout << ""Wrong guess, try again: "";
std::cin >> guess;

tries++;

}
if (guess == 8) {
std::cout << ""You've got it!\n"";

}
}

Hi buckydharma.
If you declare tries = 1
int tries = 1;
as above and your program will work.
Iam new to this so i dont really know, but i think the while loop cant compare any “tries < 50” if its just declared  as tries.

That worked great – thank you!

Hi!
I have a doubt. on the exercice :
#include 
int main() {
int guess;
int tries = 0;
std::cout << “I have a number 1-10.\n”;
std::cout << ""Please guess it: "";
std::cin >> guess;
// Write a while loop here:
while (guess !=8 && tries < 50)
{
std::cout << “Wrong guess, try again :”;
std::cin >> guess;
tries++;
}
if (guess == 8) {
std::cout << ""You got it!\n"";

}
}
on the while condition means :
while (guess !=8 && tries < 50)
Does that mean that the while continue just tries = 50 or it continue just to guess isn’t equal to 8 AND tries is less than 50 so if guess isn t equal to 8, it can ask you how many time it is necessary before the condition ?
the ‘&&’ is it here just for the exercice because the while condition could be while (guess !=8) . if we want to limit the tryes, do we have to had an : if tries == 3 or something like that ?
Thanks

Hi @freejackjc,
The loop will continue while guess does not equal 8 and tries is less than 50. The && logical operator means that both conditions (guess != 8 and tries < 50, in this case) must be true for the loop to continue. If the guess is 8, or tries is equal to 50, the loop will stop operation.
If you wanted to limit the number of tries to a smaller number, you just need to change “50” to a different value, like below:
while (guess != 8 && tries < 3)
Because tries starts with a value of 0, this will limit the user to 3 tries.

Your default code creates an infinite loop:
while (guess == 8) { ...}
If you happen to compile this example then happen to guess 8, you will crash your browser tab. I would probably warn users of this or leave this out entirely until the next step.

What worked ? As I am having the same problem as you.It is already
int tries = 0;
so its correct nothing wrong in it , maybe glitch of terminal ?

Hey, i have a question.
What does tries++ mean,i cant figure out what is its purpose.

the “++” on the variable “tries” increments the value by 1.
So whenever you run something that iterates multiple times and you want to keep track you can use an already initialized int variable and just add 1 to it.
So in this case:
tries++
translates to “Add 1 to the current value of tries”
it can also be written as:
tries = tries + 1 [I think. I don’t know if it works the same in C++ as it does in Python].

Hey guys, super confused by this task.
Here’s my code:
int main() {
int guess;
int tries = 1;
std::cout << “I have a number 1-10.\n”;
std::cout << ""Please guess it: "";
std::cin >> guess;
// Write a while loop here:
while (guess != 8 && tries < 50) {
std::cout << ""Wrong guess, try again: "";
std::cint >> guess;

tries++;

}
if (guess == 8) {
std::cout << ""You got it!\n"";

}
}
I compile and everything is fine, if I input the number 8 then I get the “You got it!” message. But if I get it wrong, I get nothing. It’s just dead. I tried my own way, then copied the hint and the same result. Any ideas?

Why won’t this work : removing “tries++” and making “<50” to “==50”?
Can there be a further explanation to ++. I read the comments but still confused why “++” is necessary near the end of the code. What I see is 49+1 but why not just have ==50?
int main() {
int guess;
int tries = 0;
std::cout << “I have a number 1-10.\n”;
std::cout << ""Please guess it: "";
std::cin >> guess;
// Write a while loop here:
while (guess !=8 && tries == 50){
std::cout << “Wrong guess, try again”;
std::cin >> guess;
}
if (guess == 8) {
std::cout << ""You got it!\n"";

Can anyone explain why this code won’t work?


Increment  and  decrement operators  are unary operators that  add  or  subtract  one, to or from their operand, respectively. They are commonly implemented in imperative programming languages. C-like languages feature two versions (pre- and post-) of each operator with slightly different semantics.


The increment operator increases, and the decrement operator decreases, the value of its operand by 1. The operand must have an arithmetic or pointer data type, and must refer to a modifiable data object. Pointers values are increased (or decreased) by an amount that makes them point to the next (or previous) element adjacent in memory.  In languages that support both versions of the operators：


The  pre -increment and  pre -decrement operators increment (or decrement) their operand by 1, and the value of the expression is the resulting incremented (or decremented) value.
The  post -increment and  post -decrement operators increase (or decrease) the value of their operand by 1, but the value of the expression is the operand’s original value  prior  to the increment (or decrement) operation.

What the code is doing is this.
Set a variable guess but don’t give it a value other than its an integer.
Do the same with tries but set the int value to 0.
Send message to console an add a new line…
Send another message to console.
Prompt for user input.
Enter a while loop and repeat forever until guess does not equal 8 and tries equals 50.
After we leave the loop, if guess equals 8 then we send a message to the console.
Reading what I just said is that what you are trying to accomplish?

I understand very little of what you wrote but I’ll read your response again. I was wondering why ==50 wouldn’t work to replace <50 and i++? This is the only source I came across to learning code and have no other knowledge of the field.  If 50 tries is the maximum number why couldn’t I just have “==50”? Why do I have to insert basically 49 (<50) then put i++ to make it to 50? again I’ll re-read to try to understand what you posted. Thanks




 psmilliorn:


The pre -increment and pre -decrement operators increment (or decrement) their operand by 1, and the value of the expression is the resulting incremented (or decremented) value.



That is represented as ++i.

The  post  -increment and  post  -decrement operators increase (or decrease) the value of their operand by 1, but the value of the expression is the operand’s original value  prior  to the increment (or decrement) operation.

That is represented as i++.

I was wondering why ==50 wouldn’t work to replace <50

Because the loops continues until a condition is met.  That condition you set never finishes because you removed the increment variable inside the loop.  Thus, the value never updates.  So you could do =50 or <50, and never will be met until you add the increment  variable back inside the loop.
Also, even if you guessed the correct number, it still won’t work because you want to do the correct guess AND 50 tries, on that iteration.  So, basically if you did have the increment variable back in the loop, you would have to guess that number 50 times before you broke out of the loop.

I have a question just to clarify my understanding of the material. My program runs as expected when numbers are entered. When a letter or any string of characters besides a number is entered as a guess, the program returns a page or two worth of “Wrong guess, try again” and exits. I can hypothesize about why that might happen, but there’s nothing explicitly causing that in the code, so anything I come up with is a wild guess.
I know it’s not a learning goal for this particular lesson, but it seemed like a good place to ask whether this behavior can be controlled, and whether this behavior is an expected and predictable response in c++ or maybe an artifact of the virtual terminal.
#include <iostream>

int main() {
int guess;
int tries = 0;
  
std::cout << ""I have a number 1-10.\n"";
  std::cout << ""Please guess it: "";
  std::cin >> guess;
  
  while (guess != 8 && tries < 50){
    std::cout << ""Wrong guess, try again: \n"";
    std::cin >> guess;
    tries++;}
  
if (guess == 8) {
std::cout << ""You got it!\n"";
  }  
}


very late, but it keeps count of how many tries you’ve attempted by incrementing the variable tries by one every time you guess a number

I think that, in the sample code provided, the initial value for tries should be declared as 1 and not 0. If it is 0, the program will let you try 51 times This is easy to detect if you change 50 with 5 - it lets you try 6 times.

Also slightly out of the scope of the exercise, but I’m curious: With the default code, why do I not need a new line symbol within the while loop? It seems like every other time I forget a \n at the end of my std::cout stuff, it mashes the line into the end of the previous one, but this doesn’t.
For reference, the while loop I’m using:

while (guess != 8 && tries < 50){
std::cout << ""Wrong guess, try again: "";
std::cin >> guess;

tries++;

}

Does std::cin count as a new line marker or something (since I notice that the first guess doesn’t have a \n either)?
"
60,FAQ: Variables - Step 1: Declare a Variable,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Step 1: Declare a Variable” exercise from the lesson “Variables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Step 1: Declare a Variable


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
pls i would love to know why we have to compile and execute
"
61,FAQ: Conditionals & Logic - Review,"Get Help,Git",,47,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review” exercise from the lesson “Conditionals & Logic”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Review


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I did the optional exercise for the review section.
I used a switch statement to calculate the weight on different planets, as seen below(and it works). However when I want to add the statement ""your weight in this planet is "" std::cout << ""Your weight in this planet is "" +(weight * rg2); I get an error.
The error is: ""invalid operand of char + binary operator
Why is that?
int main() {
  double weight;
  std::cout << ""What is your earth weight\n"";
  std::cin >> weight;
  int planet;
  std::cout << ""Enter number (1-6) for planet to fight on\n"";
  std::cin >> planet;
  switch (planet){
    case 1:
      {double rg1 = 0.78;
      std::cout << (weight * rg1);}
      break;
    case 2:
      {double rg2 = 0.39;
      std::cout << (weight * rg2);}
      break;
    case 3:
      {double rg3 = 2.65;
      std::cout << (weight * rg3);}
      break;
    case 4:
      {double rg4 = 1.17;
      std::cout << (weight * rg4);}
      break;
    case 5:
      {double rg5 = 1.05;
      std::cout << (weight * rg5);}
      break;
     case 6:
      {double rg6 = 1.23;
      std::cout << (weight *rg6);}
      break;
  }



Solved
I got it!!!
I was concatenating using “+” instead of  "" <<"" for the standard output!!!
Now my output is how I wanted it “your weight on this planet is ***”

It took me way longer than it should have to figure out why declaring a string failed when compiling…
Strings were mentioned in the earlier lessons, but no examples or details on how to use them were given.
After some googling I found out you have to have “using namespace std;” or use std::string instead of just string when declaring.
Once I finally figured that out, this was my final program.
#include <iostream>
using namespace std;

int main() {
 
  double earthWeight;
  int planetNumber;
  double planetWeight;
  string planetName;
  
  std::cout << ""Please enter your weight on Earth: "";
  std::cin >> earthWeight;
  
  std::cout << ""Please select a planet from the following list:\n\n"";
  
  std::cout << ""   1: Venus\n"";
  std::cout << ""   2: Mars\n"";
  std::cout << ""   3: Jupiter\n"";
  std::cout << ""   4: Saturn\n"";
  std::cout << ""   5: Uranus\n"";
  std::cout << ""   6: Neptune\n\n"";
  
  std::cout << ""Planet Number: ""; 
  std::cin >> planetNumber;  
  
  switch (planetNumber){
    case 1 :
      planetWeight = earthWeight * 0.78;
      planetName = ""Venus"";
      break;
    case 2 :
      planetWeight = earthWeight * 0.39;
      planetName = ""Mars"";
      break;
    case 3 :
      planetWeight = earthWeight * 2.65;
      planetName = ""Jupiter"";
      break;
    case 4 :
      planetWeight = earthWeight * 1.17;
      planetName = ""Saturn"";
      break;
    case 5 :
      planetWeight = earthWeight * 1.05;
      planetName = ""Uranus"";
      break;
    case 6 :
      planetWeight = earthWeight * 1.23;
      planetName = ""Neptune"";
      break;
    default :
      planetName = ""Unknown"";
      break;
  }
  
  if (planetName == ""Unknown""){
    std::cout << ""Invalid planet input.\n"";
  }else{
    std::cout << ""Your weight on "" << planetName << "" would be "" << planetWeight << ""\n"";
  }
  
}


//My final program
#include 
int main() {
double w = 150;
int p = 8;
std::cout << “What is your earth weight?\n”;
std::cin >> w;
std::cout << “Which plant number will you fight on?\n”;
std::cout << “1. Venus   2. Mars   3. Jupiter  4. Saturn   5. Uranus   6. Neptune \n\n”;
std::cin >> p;
switch § {
case 1 :
std::cout << ""Your weight is ""<<  w0.78 <<“lbs,\n”;
break;
case 2 :
std::cout << ""Your weight is "" << w0.39 <<“lbs,\n”;
break;
case 3 :
std::cout << ""Your weight is "" <<  w2.65 <<“lbs,\n”;
break;
case 4 :
std::cout << ""Your weight is ""<<  w1.17 <<“lbs,\n”;
break;
default :
std::cout << ""Your weight is ""<< w*1.05 <<“lbs,\n”;
break;
}
}

Here’s my solution to the exercise!  it works
#include 
int main() {
double weight;
std::cout << “Enter your earth weight\n”;
std::cin >> weight;
int planet;
std::cout << “Please, choose a number for the planet you want to fight on\n”;
std::cout << ""   1 = Venus\n"";
std::cout << ""  2 = Mars\n"";
std::cout << ""  3 = Jupiter\n"";
std::cout << ""  4 = Saturn\n"";
std::cout << ""  5 = Uranus\n"";
std::cout << ""  6 = Neptune\n"";
std::cin >> planet;
double v1=0.78;
double m2=0.39;
double j3=2.65;
double s4=1.17;
double u5=1.05;
double n6=1.23;
switch (planet) {
case 1:
std::cout  << ""Your weight in Venus is "" << (weightv1) <<""\n"";
break;
case 2:
std::cout << ""Your weight in Mars is "" << (weightm2) << “\n”;
break;
case 3:
std::cout << ""your weight in Jupiter is "" << (weightj3) << “\n”;
break;
case 4:
std::cout << “Your weight in Saturn is” << (weights4) << “\n”;
break;
case 5:
std::cout << “Your weight in Uranus is” << (weightu5) << “\n”;
break;
case 6:
std::cout << “Your weight in Neptune is” << (weightn6) << “\n”;
break;
default:
std::cout << “Error in numbers\n”;
  }

}

Here’s mine pretty much as those who choose a similar switch-case solution. Have a good one!
#include 
#include <stdlib.h>
int main() {
double weight;
int planet;
std::cout << “Hi champ! what’s your weight in Earth?\n”;
std::cin  >> weight;
std::cout << “On which planet is your next fight?\n 1)Venus 2)Mars 3)Jupiter\n 4)Saturn 5)Uranus 6)Neptune\n”;
std::cin  >> planet;
// I choose to have a more clean structure with a switch-case flow instead of the if-else if-else
// (which is completely right as an option)
switch(planet) {
case 1: weight = weight / 0.78; std::cout << “Your weight in Venus is:\n” << weight << "" kg\n"";
break;
case 2: weight = weight / 0.39; std::cout << “Your weight in Mars is:\n” << weight << "" kg\n"";
break;
case 3: weight = weight * 2.65; std::cout << “Your weight in Jupiter is:\n” << weight << "" kg\n"";
break;
case 4: weight = weight * 1.17; std::cout << “Your weight in Saturn is:\n” << weight << "" kg\n"";
break;
case 5: weight = weight * 1.05; std::cout << “Your weight in Uranus is:\n” << weight << "" kg\n"";
break;
case 6: weight = weight * 1.23; std::cout << “Your weight in Neptune is:\n” << weight << "" kg\n"";
break;
}
}

This is what I used:
#include <iostream>
#include <thread>
#include <chrono>

int main() {
int weight;
int planet;
std::cout << ""what is your earth weight? "";
std::cin >> weight;
std::cout << ""which planet do you want to fight in? "";
std::cin >> planet;
switch (planet) {
  case 1:
std::cout << planet / 0.78 << std::endl;
    break;
  case 2:
std::cout << planet / 0.39 << std::endl;
    break;
  case 3:
std::cout << planet / 2.65<< std::endl;
    break;
  case 4:
std::cout << planet / 1.17 << std::endl;
    break;
  case 5:
std::cout << planet / 1.05 << std::endl;
    break;
  case 6:
std::cout << planet / 1.23 << std::endl;
    break;
  default:
    std::cout << ""Invalid\n"";
    break;
  
}

}```
also please make sure to tell us what arithmetic to use :D

Guys,why the he** is no (return 0;) needed at the end?!
Cheers for the replies!

Tried to do a fancy work… but I failed…
Here is my code:
#include 
int main() {
double EW;
int num;
cart PN;
double FW;
wait
//Variables I defined
std::cout << “Hello warrior!\n”;
std::cout << “This is a programme to help you with calculate the weight of you in different planet only if you answer the following question.\n”;
//Greatings and intros.
std::cout << “1.What is your weight on EARTH?\n”;
std::cin >> EW;
if (EW <= 0){
std::cout >> “Please renter your weight.\n”;
return;
//In case someone enter a impossible number of weight.
} else {
std::cout >> “Great!”;
}
std::cout << “2.Which planet you want to fight on? Please enter the number of the planet. Here is the number of each planet:\n\n”;
std::cout << ""   1. Venus   2. Mars    3. Jupiter\n"";
std::cout << ""   4. Saturn  5. Uranus  6. Neptune\n\n"";
//A tip.
std::cin >> num;
//Enter the number of planet.
switch (num) {
case 1:
FW == EW* 0.78;
PN == “Venus”;
case 2:
FW == EW* 0.39;
PN == “Mars”;
case 3:
FW == EW* 2.56;
PM == “Jupiter”;
case 4:
FW == EW* 1.17;
PN == “Saturn”;
case 5:
FW == EW* 1.05;
PN == “Uranus”;
case 6:
FW == EW* 1.23;
PN == “Neptune”;
default:
std::cout << “We only know about thouse 6 planets right now.”;
return;
//In case user enter a number which is not 1, 2, 3, 4, 5, or 6.
}
std::cout << “So your wight on”;
std::cout >> PN;
std::cout << “is:”;
std::cout >> FW;
std::cout << “\n THX for using this programme!GH & HF!”;
//Final statement
}
I would appreciate if someone can help me!

Compiled and executed using
g++ space.cpp
./a.out
And typed the following code, however the code didn’t run and code academy let me pass?
Any help would be greatly appreciated:
int main() {
double eweight;
std::cout <<“What is your earth weight?\n”;
std::cout <<""My earth weight is "";
std::cin >> eweight;
int num;
std::cout <<“What number planet do you want to fight on?\n”;
/*#, Planet,				               Relative gravity
1 Venus							0.78
2 Mars							0.39
3 Jupiter							2.65
4 Saturn							1.17							
5 Uranus							1.05
6 Neptue							1.23
*/
std::cin >> num;
double pweight;
switch(num){
case 1:
pweight=eweight * 0.78;
break;
case 2:
pweight=eweight * 0.39;
break;
case 3:
pweight=eweight * 2.65;
break;
case 4:
pweight=eweight * 1.17;
break;
case 5:
pweight=eweight * 1.05;
break;
case 6:
pweight=eweight * 1.23;
break;
default:
std::cout <<“Invalid number please try again\n”;
}
std::cout <<“Your planet weight is “<<pweight<<”\n”;
}




 chipjumper42437:

int weight;


Since the main function is a interger(int). Therefore you must return a interger. So imagine if the main function was a string (int main > string main). You have to return a string like
return ""hello""

or if it was a bool function (int main > bool main). Then the return would be either true or false
return true


cheers mate!!
have still a lot to cover 

I don’t know why it’s have a lot of “\n” in your HINT
Can you explain to me why is it?
Thanks a lot \

Here is my solution. I decided to use a switch as well - seems like less work?
#include <iostream>

int main() {
  int earth_weight;
  int planet;
  double planetary_weight;
    
  std::cout << ""Enter your earth weight: \n"";
  std::cin >> earth_weight;
  
  std::cout << ""I have information on the following planets: \n"";
  std::cout << ""1.Venus 2.Mars 3.Jupiter \n"";
  std::cout << ""4.Saturn 5.Uranus 6.Neptune \n"";
  std::cout << ""Please make your selection: \n"";
  std::cin >> planet; 
  
  switch (planet) {
    case 1:
      std::cout << ""Venus\n"";
      planetary_weight = earth_weight * .78;
        break;
    case 2:
      std::cout << ""Mars\n"";
      planetary_weight = earth_weight * .39;
        break;
    case 3:
      std::cout << ""Jupiter\n"";
      planetary_weight = earth_weight * 2.65;
        break;
    case 4:
      std::cout << ""Saturn\n"";
      planetary_weight = earth_weight * 1.17;
        break;
     case 5:
      std::cout << ""Uranus\n"";
      planetary_weight = earth_weight * 1.05;
        break;
      case 6:
      std::cout << ""Neptune\n"";
      planetary_weight = earth_weight * 1.23;
        break;
      default: 
      std::cout << ""Invalid input\n"";
  }
  
  std::cout << ""Your weight on this planet is "" << planetary_weight << ""\n"";
}


I assumed that he already knew what planet was which based off the number. This is what i did
#include <iostream>
using namespace std;
// W = M x G
int main() {
  
  float earth_weight, mass, gravity, weight;
  short planet;
  
  cout<<""What is your earth weight?\n"";
  cin>> earth_weight;
  
  cout<<""Enter the number of the planet that you are fighting in? \n"";
  cin>>planet;
  //calculating his mass from his earth weight
  mass = earth_weight/0.98;
  //calculating his weight on the planet he inputed
  switch(planet){
    case 1 :
      weight = mass * 0.78;
      break;
    case 2:
      weight = mass * 0.39;
      break;
    case 3:
      weight = mass * 2.65;
      break;
    case 4:
      weight = mass * 1.17;
      break;
    case 5:
      weight = mass * 1.05;
      break;
    case 6:
      weight = mass * 1.23;
      break;
  }
  cout<<""Your weight on planet #""<<planet<<""is ""<<weight<<endl;
   
}


Hi Netpro,
Thanks for sharing your work! Looks neat.
Yeah, I encountered the same problem previously, and learnt that “string” is not a variable that is really at the bottom of the heart of C++ like char, int, double, etc. Rather, string is within std, the standard library, thus it is necessary to add the “std::” bit. I read it’s because string is essentially a ‘string’ of characters (chars).
Anyway just wanted to add few words from my recent learning as well. Happy coding.

Hi all,
Here is my piece of work. I made an extra effort to deal with naughty users, who will put in negative values as weight, etc. haha.
This can also be found from: https://github.com/haratzj/space/blob/master/space.cpp.
Cheers, Happy coding.
//This is an app that converts one's earth weight to a chosen planet weight

#include <iostream>

int main (){
    int planet_num, whilecheck=0, ifcheck=0;
    double earth_weight, venus=0.78, mars=0.39, jupiter=2.65, saturn=1.17, uranus=1.05, neptune=1.23;
    std::cout << ""What is your weight on Earth?: "";
    std::cin >> earth_weight;

    // This while loop checks the earth_weight input and make sure its not negative. Giving 5 chances.
    while (earth_weight < 0 && whilecheck < 5) {
        std::cout << ""You can't have negative value here. Please re-enter your weight : "";
        std::cin >> earth_weight;
        whilecheck = whilecheck +1;
    }
    // If the user has put in a negative value for more than 5 times, the code is forced to break, by returning 0.
    if (whilecheck > 4) {
        std::cout << ""Stop putting in negatvie number!\n"";
        return 0;
    }
    std::cout << ""Also, on what planet do you want to fight?\n"" << ""1-Venus, 2-Mars, 3-Jupiter, 4-Saturn, 5-Uranus, 6-Neptune: "";
    std::cin >> planet_num;

    // Similar input validity check
    while (planet_num != 1 && planet_num != 2 && planet_num != 3 && planet_num != 4 && planet_num != 5 && planet_num !=6 && ifcheck < 5) {
        std::cout << ""Please choose a valid option : "";
        std::cin >> planet_num;
        ifcheck = ifcheck +1;
    }
    if (whilecheck > 4 || ifcheck >4) {
        std::cout << ""Stop putting in invalid inputs!\n"";
        return 0;
    }

    switch(planet_num){
        case 1:
        std::cout << ""You have chosen Venus! "" << ""You will weigh "" << earth_weight*venus << ""kg there!\n"";
        break;
        case 2:
        std::cout << ""You have chosen Mars! "" << ""You will weigh "" << earth_weight*mars << ""kg there!\n"";
        break;
        case 3:
        std::cout << ""You have chosen Jupiter! "" << ""You will weigh "" << earth_weight*jupiter << ""kg there!\n"";
        break;
        case 4:
        std::cout << ""You have chosen Saturn! "" << ""You will weigh "" << earth_weight*saturn << ""kg there!\n"";
        break;
        case 5:
        std::cout << ""You have chosen Uranus! "" << ""You will weigh "" << earth_weight*uranus << ""kg there!\n"";
        break;
        case 6:
        std::cout << ""You have chosen Neptune! "" << ""You will weigh "" << earth_weight*neptune << ""kg there!\n"";
        break;
        default: //default does not have 'break' as it really doesn't matter. but it may be a good practise to include one?
        std::cout << ""Sorry, something went wrong... Stay on the Earth maybe...\n"";
    }
}


I added on to this.
#include <algorithm>
#include <locale>
#include <iostream>

using namespace std;

int main() {
  //It should ask him what his earth weight is.
  cout << ""How much do you weigh on Earth?\n"";
  double weight;
  cin >> weight;
  
  //Ask him to enter a the planet he wants to fight on.
  string planet;
  cout << ""Which planet do you want to fight on?\n"";
  cin >> planet;
  
  // convert string to back to lower case
  for_each(planet.begin(), planet.end(), [](char & c) {
	  c = tolower(c);
  });  
  
  //It should then compute his weight on the destination planet.
    if (planet == ""venus"")
      weight *= 0.78;
    else if (planet == ""mars"")
      weight *= 0.39;
    else if (planet == ""jupiter"")
      weight *= 2.65;
    else if (planet == ""saturn"") 
      weight *= 1.17;
    else 
      cout << ""Planet unknown.\n"";
  
  cout << ""Your weight will be "" << weight << "".\n"";
}

I struggled a little at the start with the switch, so i copied my code into a notebook and tried re-writing with if statements. Which did work, but i was determined not to move on in the lessons until i figured what i was doing wrong with the switch statements, in the end it was me putting the wrong variables into the switch statements… so here’s the final code i did, and it works! 
#include <iostream>

int main() {
  
  double earth;
  int planet;
  
  std::cout << ""Please enter your earth weight: "";
  std::cin >> earth;

  std::cout << ""Please Chose Your Planet You Want To Visit!\n"";
  std::cout << ""1.Venus 2.Mars 3.Jupiter 4.Saturn 5.Uranus 6.Neptune\n"";
  std::cin >> planet;
  
  switch (planet) {
    case 1:
      earth = planet * 0.78;
      break;
    case 2:
      earth = planet * 0.39;
      break;
    case 3:
      earth = planet * 2.65;
      break;
    case 4:
      earth = planet * 1.17;
      break;
    case 5:
      earth = planet * 1.05;
      break;
    case 6:
      earth = planet * 1.23;
      break;
    default:
      std::cout << ""Invalid\n"";
      break;
      
  }
  
  std::cout << ""Your weight will be: "" << earth << ""\n"";
  
  
  
  
  
  
  
  
  
}

"
62,FAQ: Classes and Objects - Destructors,"Get Help,Git",,8,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Destructors” exercise from the lesson “Classes and Objects”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Destructors


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why don’t we add a parameter to the destuctor in song.cpp and song.hpp ? like:
“~Song(std::string title);”
Thanks

The parameter would be meaningless in context. Parameters are used to input information into a system. A destructor is used to empty out information from a system by removing objects that are not in use. Any parameters your include in a destructor would necessarily be removed from memory when the destructor executed, invalidating their entry.

Usually what kind of code is written in a destructor? Printing “goodbye” like this exercise does not seem to be a normal use of destructors. Is memory allocation (I read the article at the end of this course) related? If one does not allocate memory manually, is it necessary to write something in a destructor?

Hey!
In the explanation of the lesson the  scenarios when the destructor is called automatically are listed:

The object moves out of scope.
The object is explicitly deleted.
When the program ends

From what I understand thus far, scope is a relative matter. Could someone explain what is meant by “out of scope” in this case?
My guess is that the scope implied here is the scope of main(). Unless I’ve misunderstood the definition of scope.

Hello everyone,
Wouldn’t it make more sense in this exercise to call the method get_title() instead of directly printing the class attribute? That’s the point of the method.
Song::~Song() {
std::cout << ""Goodbye, "" << get_title() << “\n”;
}
Regards.

Was wondering the same.
Although the parameter might be destructed before it is called out rendering the “Call X parameter” useless?

I think the point of the method was to be accessible outside of the Song class (which is why the get_title method is public). Since the “title” attribute is already a member of the Song class, there is no need for a Song destructor to call a Song method to access a Song attribute.
"
63,FAQ: Vectors - Review,"Get Help,Git",,24,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review” exercise from the lesson “Vectors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Review


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why do you declare the int product_odd as being 1 at the beginning of the code? I thought generally you set it to 0…?? Is it something to do with the fact you will be multiplying it??

multiplication can’t be done by 0.
03 would be 0. Then again 01 would be 0 and  then 0*9 =0.
If it was set to 2, the total would be 54

Is anyone having a problem with this exercise in which, you complete the task but it is forever attempting to verify if I did the problem correctly? I’ve been waiting about 5 minutes now and normally it only takes a matter of seconds

jokes i refreshed the page and now it works

Why do you declare the int total_even = 0 ?

#include <iostream>

int main() {
	std::vector<int>numbers = {2, 4, 3, 6, 1, 9};
	int even_total = 0;
	int odd_total = 0;
  for (int i = 0; i < numbers.size(); i++)
  {
    if (even_total % 2 == 0)
    {
     even_total = even_total + numbers[i]; 
    }
    if (odd_total % 2 == 1)
    {
      odd_total = odd_total + numbers[i];
    }
  }
 std::cout << ""Sum of even numbers is "" << even_total;
 std::cout << ""Sum of odd numbers is "" << odd_total;
}

Is my code but it errors
review.cpp: In function 'int main()':
review.cpp:4:7: error: 'vector' is not a member of 'std'
  std::vector<int>numbers = {2, 4, 3, 6, 1, 9};
       ^~~~~~
review.cpp:4:14: error: expected primary-expression before 'int'
  std::vector<int>numbers = {2, 4, 3, 6, 1, 9};
              ^~~
review.cpp:7:23: error: 'numbers' was not declared in this scope
   for (int i = 0; i < numbers.size(); i++)
                       ^~~~~~~

It seems to say that std::vector isn’t an expression, even though I was taught that it is.

Hey Speed_reader,
You just forgot to add the library for vector in your code. Below the #include iostream you need #include vector for your program to recognize std::vector. Hopefully you figured this out.
Cheers!

I don’t understand how “if (vector[i] % 2 == 0)” is able to find the even numbers in the vector.
To my understanding, this line is saying “okay, use that value you just pulled from the vector and divide it by two. If you get zero, then yep, that’s an even number, now do the following.” But none of the values in the vector would yield zero if you cut them in half.
Does that make sense? What am I missing here?

% doesn’t mean divide. It’s the modulo operator. It returns the remainder of dividing the dividend by the divisor. If any element in the vector divided by 2 has a remainder of 0 then it’s an even number. Hope this helps!

Ahhhh! Yes, that makes perfect sense now, thank you so, so much. That’s been bugging me all day.

For some reason if I #include it just loads forever when I press run. If i leave that part out then it errors out which makes sense but then I can’t check if my program actually works.

Hello, @microblaster90973.
Welcome to the forum.
Sounds like you may have an infinite loop in your code. If you’ll include your code in a post using these guidelines, we can take a look.

Why do you declare the int total_even = 0 ?

If I wanted to print out under each for and else loop the value on the vector that was chosen, how would I do that so I can see what is happening behind the scenes.  Thank you.
#include 
#include 
int main() {
int total_even = 0;
int product_odd = 1;
std::vector vector = {2, 4, 3, 6, 1, 9};
for (int i = 0; i < vector.size(); i++) {
if (vector[i] % 2 == 0) {

  total_even = total_even + vector[i];

} else {

  product_odd = product_odd * vector[i];

}

}
std::cout << ""Sum of even: "" << total_even << “\n”;
std::cout << ""Product of odd: "" << product_odd;
}

I don’t understand the whole problem can someone please help me

I’m really struggling with understanding using for loops within the vectors topic. What does it mean in the code where it states:
for (int i = 0; i < vector.size(); i++) {

    if (vector[i] % 2 == 0) {

      total_even = total_even + vector[i];

    } else {

      product_odd = product_odd * vector[i];

    }

If someone could help me line by line that would be amazing thank you.

I hope no one minds I’m reviving a topic that’s not been posted on for a few days, because I’m frightfully confused. I tried solving this exercise, but I received an error. I checked the hint, and couldn’t find any meaningful difference between it and my code. Could anybody help me make sense of this? Here is my code:
#include <iostream>
#include <vector>

int even_sum = 0;
int odd_product = 1;
std::vector<int> numbers = {2, 4, 3, 6, 1, 9};

for (int i = 0; i < numbers.size(); i++) {
  if (numbers[i] % 2 == 0) {
    even_sum = even_sum + numbers[i];
  } else {
    odd_product = odd_product * numbers[i];
  }
}

And here is my error message:
review.cpp:8:1: error: expected unqualified-id before ‘for’
 for (int i = 0; i < numbers.size(); i++) {
 ^~~
review.cpp:8:17: error: ‘i’ does not name a type
 for (int i = 0; i < numbers.size(); i++) {
                 ^
review.cpp:8:37: error: ‘i’ does not name a type
 for (int i = 0; i < numbers.size(); i++) {
                                     ^


You need a main function. If you put your code within the main function, that should resolve your errors.:
int main()
{
//your code here
}

I am wondering the same question as “ignacioocampo9263873” and “hhc” on this forum. Why do you need to declare:
“int total_even = 0;”
I ran the program without the “0” declaration and received an outlandishly large number something around 32,000. The original declaration was simply:
""int total_even;
which I assumed defaulted to zero? Am I incorrect?
what was to programing using to add the “even” the vector loop?
"
64,FAQ: Variables - Chaining,"Get Help,Git",,30,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Chaining” exercise from the lesson “Variables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Chaining


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I do not see the output window.
I do not have terminal

This question confused me because of the brackets.  I had -
int score = 0;
std::cout << ""Player score: ["" << score << ""]\n"";

Could not figure out why it wouldn’t accept that answer.

Okay, I don’t get it. Where is a window that shows any output from the program. I write the code, compile and execute but where is the output. When you write HTML
it comes up in a browser. Where is the output for the C++?

that depends,  if you use std::cout, usually to the console from which you execute the program. See documentation:
http://www.cplusplus.com/reference/cstdio/stdout/
of course, once you are a bit further along with C++, you could build your own graphical interface with libraries like QT. Then starting your program starts a graphical window. Usually, you first work in the command line to get the basics of c++ down
HTML is just a markup language, so yes, there the HTML is rendered in the browser.

because of your square brackets ([])
the square brackets in the example are only there to indicate what the variable is you should replace.

One thing that I felt was a bug is that you have to hit the Run button before compiling. I didn’t see that listed anywhere. I’m guessing that saves the file, and being used to environments that autosave is a step some people might not be used to.

So why do the square brackets become part of the output if they were not specified in the source code. I get the feeling the output is canned, and not really a result of compiling.

Why can’t I see the output after compiling and executing the code in C++?

Currently running through the tutorials to see if it would be good for new people in the lab I work in. For some reason, code identical to the solution code(and what would work in a normal terminal) didn’t output anything at all. Maybe a bug??

I just rechecked the lesson in question, and everything seems to be working. Is it possible that you didn’t click “Run” before compiling? There is no auto-save feature. While “Run” may be a bit misleading, it saves your code. If you don’t click “Run” prior to compiling after making changes in the code editor, the compiler just re-compiles whichever code had been saved previously. If that’s not the fix, please post your code. Hope this helps!

I did hit run, but I closed it, reopened, ran it again, and am unable to replicate the error. Talk about a cliche…

I have noticed that on occasion the browser in the rightmost pane loses it’s connection, and has to be refreshed by refreshing my browser. Not really anything we can do other than deal with it and press on. 
Here’s a link to the Codecademy Troubleshooting Guide
It has information regarding which browsers and devices will yield the best results, and a few basic tips for when gliches happen.
Happy Coding!

Why does it keep saying error fatal error this file does not exist   in the terminal?

What are you typing in the terminal that is generating the error?

Out of curiosity, I tried leaving off the additional << operator after the score variable
#include 
int main() {
int score = 0;
// Output
std::cout << ""Player score: "" << score;
}
It returns the amout of the score but has a dollar sign immediately after. Can anyone tell me what this dollar sign means? If I add the extra operator and then the ; "" <<;"" the program will not compile. Do I always need to follow a variable with a new line “\n”?

The dollar sign is just the prompt for the console. Your next command will be typed to the right of the dollar sign. Adding a new line ""\n"" to the end of any std::cout << statement will just move the prompt or the next printed value down to the next line similar to hitting ‘enter’ or ‘return’ in a word processor or text editor.

Thanks! I wasn’t paying attention to the dollar signs in front of each line in the console.

so I’m trying to pass this level of this chaining but when I input what’s is exactly asking me it keeps saying “Did you output the exact phrase using chaining? Take a look at the hint if needed.” I’m not understanding what I’m doing wrong or if its a bug in the system. I input everything as the same as the hint
#include <iostream>

int main() {
  
  int score = 0;
  
  // Output
std::cout << ""player score: "" << score                                                                                    << ""n/"";
   
}


Hello, @cloud3640311884. Welcome to the forum. Here are the instructions:

Inside game.cpp , we have declared and initialized an int variable called score .
Now output the following using chaining:
Player score: [score]
where [score] should be the value of the variable score .
Make sure to add a new line after! //looks like you may have skipped this part

See the very last instruction.
"
65,FAQ: Conditionals & Logic - Else If,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Else If” exercise from the lesson “Conditionals & Logic”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Else If


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Edit: I already solved this.
I get this error while running my code:
ph.cpp:30:1: error: expected declaration before '}' token
 }
 ^

Does anyone know what it means?
Solution: I had an additional } at the end. I removed it.


image.png636×865 26.2 KB

**Problem: ** It keeps telling me "" Did you write an if , else if , else statement?"" even tough I used them. I refreshed but it still doens’t work, I also tried to copy and paste it back but it doesn’t work, reset neither.
You can see that on the screenshot.

I had the same issue and it was the line spacing.  Try entering a blank line between each line of code.
Thank you,
"
66,FAQ: Logical Operators - Review,"Get Help,Git",,10,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review” exercise from the lesson “Logical Operators”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Review


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I’m having trouble understanding the logic of the instructions and the hint for the review.
The instructions are:

If the year can be evenly divided by 4 then it is a leap year, however…
If that year can be evenly divided by 100, and it is not evenly divided by 400, then it is NOT a leap year.
If that year is evenly divisible by 400, then it is a leap year.

The hint says:
else if (y % 4 == 0 && y % 100 != 0 || y % 400 == 0) 

Surely it should be as according to instructions:
else if (y % 4 == 0 && y % 100 == 0 || y % 400 == 0) 

Maybe the y % 100 != 0 is a typo?
Also how is any leap year evenly divisible by 400???  For example 2004 was a leap year. 2004 % 400 = 4 which is not evenly divisible.

The hint is correct.



 arraysolver16164:


If that year can be evenly divided by 100 , and it is not evenly divided by 400, then it is NOT a leap year.



but if i look at  the hints:

If the year can be evenly divided by 4 then it is a leap year, however…
If that year can be evenly divided by 100, and it is not evenly divided by 400, then it is NOT a leap year.

you should really read them together, the however on the previous line is crucial there.
lets explain this one first from a human perspective, then we will get back to the code in a second. A little know fact about leap years, is that for centuries (1500, 1600, 1700, 1800, 1900, 2000) and so forth, there is a special rule. A century is only a leap year when divisible by 400. So 1600 and 2000 are leap years, but 1700, 1800 and 1900 are not
Then its good to realize, that and (&&) operator is evaluated before the or (||) operator.
So the best way for to express this in code, is to check if a year is divisible by 4 but not divisible by 100. This way, we deal with 1700, 1800 and 1900 which are not leap years.
so for 2004 we get:
2004 % 4 == 0 && 2004 % 100 != 0

we get:
0 == 0 && 4 != 0

so we are good.
lets also do 1900:
1900 % 4 == 0 && 1900 % 100 != 0

results in:
0 == 0 && 0 != 0

then we get:
true && false

which is false, which is good. 1900 is not a leap year
then finally we have % 400 to deal with 1600, 2000 and so forth
hope this helps

I have a question…
…you know how there are orders of operation in regular math? (I mean Bedmas) This order can change the answer to the expression: 5 + 5 / 5 there are two scenarios;
a) ignoring Bedmas --> 2
b) Bedmas --> 6
Of course in proper mathematics, the answer is always going to be b)
My question is,
a) are there similar rules in coding with the and and or conditions
b) Can I use brackets?
For example, if (200 > 300 && 200 > 100 || 200 > 99)
of, further simplified if (false  && true || true)
Would this expression evaluate to true and have the code run, or would it evaluate to false?
Are we looking at it like this:
if (false && true)
or
if (false || true)
As for my second question,
as in Bedmas, could I use brackets?
for example, could I do something like
if (false && (true || true))
(which would evaluate to false)
Please reply, I feel this information would be very important, of course I could just experemint on my own, but I hope someone will reply

Thankfully programming also has a fixed order of operations, otherwise things would become a mess. Here is the list for c++:
https://en.cppreference.com/w/cpp/language/operator_precedence
a) yep, they are in the list i just posted
b) yep, you can use brackets



 mega1343860287:

as in Bedmas, could I use brackets?
for example, could I do something like
if (false && (true || true))
(which would evaluate to false)


if brackets where not used/possible, false && true || true would be true. So you answered your own question?

hey guys
please i need assistance with the hint, why did they write
int y = 0
like is it necessary can`t i just write      int y ?
and also it brings me to this part with is kind of confusing, like mathematically i don´t think it´s right
else if (y % 4 == 0 && y % 100 != 0 || y % 400 == 0)

It’s a good habit and in some languages its required to declare an initialize variables.  You could but you might get unexpected behavior/results.
Order of operation still exist as well.
if Y divided into 4 has no remainder and y divided into 100 does not a remainder OR y divided into 400 has no remainder, is what it is saying.  Whether that is expected results or not is another thing.

i think the instructions are unclear:

When you say “can be evenly divided by 100”, doesn’t that mean it should be exact? there should be no remainders, but on the answer it says “y % 100 != 0”


You have taken the instructions out of context:

If the year can be evenly divided by 4 then it is a leap year, however…
If that year can be evenly divided by 100, and it is not evenly divided by 400, then it is NOT a leap year.

the however on the previous step is very crucial. In fact, these two steps have to be read together.

I found this website helpful in solving the leap-year exercise as the instructions were explained in more detail and steps through the process.
Thank you,
https://www.tutorialspoint.com/cplusplus-program-to-check-leap-year
"
67,FAQ: Errors - Run-time Errors,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Run-time Errors” exercise from the lesson “Errors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Run-time Errors


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I got 0 when i ran the program. This feels wrong.

Interesting to know that when the width and length are defined as integers, the ratio (regardless of how it’s defined) will also be an integer.
To give a more accurate ratio, all of them should be defined as float / double.


The clues were already given in the type of possible errors.
If you note the actual program instruction you would notice that the programmer forgot the actual dimensions and input the wrong dimension in the program.
By instinct many of us tried to change the type of input from int to float/double. It would be necessary only if there are fractions that would make the calculations relevant. For this particular program float/double is not necessary.

"
68,FAQ: Hello World - Output,"Get Help,Git",,20,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Output” exercise from the lesson “Hello World!”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Output


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Quick question, what does the “std” stand for?

if i google:
c++ std
google provides the answer for me:
C++ Standard Library - Wikipedia
without even having to click on it, the link already has the answer in it

“std” stands for standard. Hope this was helpful!

I think it is a c++ standard library the replaces the “using the namespace”

When I typed std::cout<<“codecademy\n”; I got the output but not in the case cout<<“codeacademy\n”; … why so??

C++ is made up of many libraries. cout belongs to the standard library also referred to as a namespace. cout by itself means nothing. std::cout is referring to cout in the standard namespace. It can get tiring having to type std:: before everything that you want to use from the standard library, so that’s where using statements come in. You probably haven’t gotten to those yet, but in time you will. For now, it’s best to follow the progression of the lessons. Happy coding!

this online program that you use to write and run your C+  instractions is programmed to see this word “codecademy” output in the terminal , nothing else ; so it is not related to C++ compiler or not meaning that you have made a mistake

cout will not work without being qualified as an object in the std namespace in one of the following ways:
using declaration:
#include <iostream>
using namespace std;
int main() {
  cout<<""Any text"";
}

or explicit qualification:
#include <iostream>
int main() {
  std::cout<<""Any text"";
}

Attempting to use cout without qualification will raise an error:
error: 'cout' was not declared in this scope
If you have information to the contrary, please share.

Daza007
Hi, why do we have to include wired symbols in any computer languages that we never learnt or heard about this. It really is confusing symbols.
How to write programs in a straightforward instructions with a flow chart as a guide and minimize weird symbols!!!

When typing between the curly braces, does the amount of space between the line of code and the braces matter? In the exercise there are 3 empty lines between { and }. For example

{


(line of code)


}

VS

{
(line of code)
}





 stanislawkokolus1356:

does the amount of space between the line of code and the braces matter?


only for readability.

So I did all the directions right, but it gave me an error code. What did I do wrong?

Here’s what I did:
Screenshot 2020-02-05 at 5.02.25 PM1366×768 89.4 KB
 What did I do wrong?

nevermind I got it now.

What’s the primary purpose of ""#include "" and “<<” ?


Include directive

From Wikipedia, the free encyclopedia
Include directive

Many programming languages and other computer files have a directive, often called  include  (as well as  copy  and  import ), that causes the contents of a second file to be inserted into the original file. These included files are called copybooks or  header files . They are often used to define the physical layout of program data, pieces of procedural code and/or forward declarations while promoting encapsulation and the reuse of code.
To include code from the include file into another file so you don’t have to duplicate that code.
<< Operator
This operator ( << ) applied to an output stream is known as  insertion operator . It is overloaded as a member function for:

arithmetic types

Generates a sequence of characters with the representation of val, properly formatted according to the locale and other formatting settings selected in the stream, and inserts them into the output stream.
Internally, the function accesses the output sequence by first constructing a sentry object. Then (if good), it calls num_put::put (using the stream’s  selected locale ) to perform both the formatting and the insertion operations, adjusting the stream’s  internal state flags  accordingly. Finally, it destroys the sentry object before returning.
(2) stream buffers
Retrieves as many characters as possible from the input sequence controlled by the  stream buffer  object pointed by sb (if any) and inserts them into the stream, until either the input sequence is exhausted or the function fails to insert into the stream.
Internally, the function accesses the output sequence by first constructing a sentry object. Then (if good), it inserts characters into its associated  stream buffer  object as if calling its member function sputc, and finally destroys the sentry object before returning.
(3) manipulators
Calls  pf(*this) , where pf may be a  manipulator .
Manipulators are functions specifically designed to be called when used with this operator.
This operation has no effect on the output sequence and inserts no characters (unless the manipulator itself does, like endl or ends do).
std::operator<< (ostream)

 std::cout<<""Codecademy\n"";

Hello, The task of those symbols and their use is kind of vexing to me. Could someone  please, please explain to me, why, O why
“::” i.e. double colons
“<<” i.e. double  less-than symbols
and lastly, what does “std” even mean?

std means the standard namespace
  What is std and what does it means?
Double quotes is how we wrap strings.  Single quotes is for characters.
When should I use single quotes and double quotes in C or C++ programming?
<< Is used to for output likewise with >> for input aka I/O.
insertion operator
extraction operator

So if I had to guess, this would be the way to put a single line of code into a namespace
"
69,FAQ: Compile & Execute - Compile and Execute,"Get Help,Git",,18,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Compile and Execute” exercise from the lesson “Compile & Execute”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Compile and Execute


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi everyone,
I am very confused about the second exercise in C++ compile and execute part:

Q1 asks us to compile hello.cpp

This is the code that I think should be right:
#include 
**int main() **
{

**  std::cout << “Hello World!\n”;**
**  $ g++ hello.cpp**

}
Here is the code that the system think is right(nothing has changed compare to the original code)
#include 
**int main() **
{

**  std::cout << “Hello World!\n”;**
**  $ g++ hello.cpp**

}
2. Q2 says to execute a.out
This my code, the system told me it was wrong:
#include 
**int main() **
{

**  std::cout << “Hello World!\n”;**
**   g++ hello.cpp**
**   ./a.out**

}
Not sure about what the correct code is.

When I click on “solution”, it gave me the original code.


hey devwhiz, it’s kind of hard to tell by the formatting of your message, but just to be clear are you typing the compile command in the terminal on the right side of your screen?  In bash you should type g++ hello.cpp after the $ that is already there.
Hopefully this helps.

Whenever I attempt to compile the code using the following in the terminal
g++ hello.cpp
It does not create a new file called a.out like it is supposed too, this seems to lead on to later problems in the course. I have changed nothing to the default code in the “hello.cpp” file that would cause this issue, and I know that when typing g++ hello.cpp in the terminal that it needs to come after the dollar sign. I do not know if this is just an issue with me or an issue with codeacedmey, Please help me!

same thing happened to me, think its an issue in codecademy’s part. i sent in a bug report about it and hopefully it gets fixed soon
edit: tried entering ./a.out as the 2nd step instructed to, it allowed me to continue. so i think this should not be affecting the exercise?

the thing is just really broken

I got the same problem too. I’m just posting to the plataform realize it’s really a bug.
Edit:I did the same thing. The file is not created but if you execute the command it works correctly.

hi
i don’t undersatnd how to compile where i should write g++ ! what it means the terminal where i should write in !
please how did u do to compile

Please read this before you guys get mad !
Dear future user of C++ Codecademy the lesson isnt broken or bugged I will help you through this step by step!
First step, there is a terminal on the screen the tab is titled “bash” click on the $ sign that you see it will allow you to type in the terminal. Please type g++. Then press enter on your keyboard.
Next part of the lesson requires you to type ./a.out  . Then press enter on your keyboard
That’s how you complete part 2 of the lesson . Keep learning friends =)

Hi everyone
I’m having some issues compiling my C++ ‘program’. I’ve followed the video tutorial (the visual studio one) on it step by step and used the exact same code and commands, but compiling fails with the following error message:
g++ : The term 'g++' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.

Suggestions?
Thanks.

I am working with c/c++ for Visual Studio Code, and trying to run my first program,
#include 
  int main () {
    std: :cout  <<""Hello World""!\n;

}
I got an errorg++ : The term ‘g++’ is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of
operable program. Check the spelling of
the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:1

g++ hello.cpp

  + CategoryInfo          : ObjectNotFound: (g++:String) [], CommandNotFoundException
  + FullyQualifiedErrorId : CommandNotFoundException




thanks




 1minuteholidays74038:

I don’t have a compiler installed


install one
I’d try saying how but windows users tend to both have lots of expectations and also not know how to do things, and probably have to do some work-arounds because of windows and none of that makes it easy to help. But there are probably plenty of guides to google.
Otherwise I’d say install msys2 and then run $ pacman -S gcc and then you’d be done.


omg tyvm, never thought to click on the screen with the $ and type there.

There is small bug in this exercise. If the user enters any random command instead of the one mentioned, the exercise gets marked as green and the a.out file gets generated.
I am attaching a sample screenshot for reference.

codecademyErr.PNG1920×888 78.5 KB


this is exactly what I needed. I didn’t quite understand that it was asking me to enter the commands in the terminal and not the text editor… whoops!

hey,
Did you also put the "" $"" sign? i was sort of getting the problem at first until i read the hints

I understand how the bash scripting works here, but what terminal do you type this into when developing outside of the code academy compiler, the windows terminal?

Bash, Powershell, etc.



 object0007022121:

he windows terminal?


Yes.
"
70,FAQ: Functions - Tackling Multiple Arguments,"Get Help,Git",,28,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Tackling Multiple Arguments” exercise from the lesson “Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Tackling Multiple Arguments


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I have made it to step 4 and I have to call name_x_times with arguments my_name and some_number within int main(). My problem is that when I type in the code it says that I need to type it within main() although I already am. What am I doing wrong? If somebody could please help that would be greatly appreciated.
#include 
// Define name_x_times() below:
void name_x_times(string name, int x)
{
while (x>0)
{
std::cout<< name;
x–;
}
}
int main() {
std::string my_name = “Add your name here!”;
int some_number = 5; // Change this if you like!
// Call name_x_times() below with my_name and some_number
name_x_times(my_name, some_number);
}

Your subtraction operation doesn’t look correct. Try to add another minus sign:
x - -;

Thanks for the suggestion. Although I do already have two minus signs, it just does not appear that way in the text above. Any other suggestions?

Thank you for your help chipcoder46164, my problem with the code was that I needed to put (std::string name, int x).

just finished step 4 in this chapter
¨my code.
#include <iostream>

// Define name_x_times() below:
void name_x_times(std::string name, int x) {
  while (x > 0); { 
  std::cout << name;
  x--;
    
  } 
    
}

int main() {
  
  std::string my_name = ""Jonathan"";
  int some_number = 5; // Change this if you like!
  // Call name_x_times() below with my_name and some_number
  name_x_times (my_name, some_number);  

}

and cant move on the circle when pressing run is just rolling around,
thanks in advanced,
zyph

Question: how come strings have to be defined with std::string x; , but ints can just say int x; without the std:: thing?? Which vars have to be defined before you give the type and which don’t??
Thanks,
Dawn

#include <iostream>

// Define name_x_times() below:
void name_x_times(std::string name, int x) {
  
while (x > 0) {
  
std::cout << name << ""\n"";
x == x-1;  
  
  
}
  
}


int main() {
  
  std::string my_name = ""Add your name here!"";
  int some_number = 5; // Change this if you like!
  // Call name_x_times() below with my_name and some_number
  
  
}

I have cleared steps 1 and 2. In step 3 I was told to print the string variable ‘name’ and then decrease the variable ‘x’ by 1. I wrote ‘x = x-1;’ and clicked the ‘Run’ button. It doesn’t give the correct result. But when I wrote x–; and clicked the ‘Run’ button, it gave the correct result. I  remember that I used this type of syntax and got the correct answer in some other exercises and got the correct answer. Is the syntax ‘x = x-1;’ incorrect? (or) Is any other mistake present in my program?

I don’t understand why this code needs to have a while loop. And I especially don’t understand why the parameter inside the while loop says x > 0 when the loop keeps subtracting 1 from x. Why isn’t it x < 0?
Here’s my code:
#include <iostream>

void name_x_times(std::string name, int x) {
  while (x > 0) {
    std::cout << name;
    x--; 
  }
}

int main() {
  
  std::string my_name = ""Riya. "";
  int some_number = 5; 

  name_x_times (my_name, some_number);
}

Any help would be greatly appreciated! 

The code doesn’t “need” a while loop per se’, but this is one way to repeat a block of code a specific number of times. Your function name_x_times() takes 2 parameters. The first is the name to print to the console, and the second is the number of times to print it. The variable name will be assigned the name, and x will be assigned the number. while will repeat the code inside it’s code block { } as long as the condition in the parenthesis evaluates to true. In your main() function you are calling the name_x_times() function with the arguments: ""Riya. "" and the number 5, so the first time this line is executed: while (x > 0) x is 5. std::cout << name; prints Riya. to the console, and x is decremented by 1. while (x > 0) is evaluated again, and since x is now 4 Riya. is printed a second time. This process continues until x is no longer greater than 0 resulting in this output:

Riya. Riya. Riya. Riya. Riya.

Hope this helps!

This makes much more sense, thank you so much for your help!!

Is anyone else also experiencing bugs where you write valid code (even the same as the official solution) and it isn’t being accepted? For this exercise’s final piece I called the function as below
name_x_times(my_name, some_number);
and it wasn’t accepted. It was in the right place and everything. I’m a free member, but I won’t be coughing up the subscription price anytime soon considering how many bugs like this I’ve run into.

I’m having an issue just with the first bit defining the function- for some reason the underscore in the name of the function make it stop working properly.

image.jpg720×698 48.3 KB
!
When i write it properly name_x_times it suddenly goes red and wont be recognised as a function. Does anyone know what is doing this and how to fix it

Is anyone having a problem where the program wont move forward? I click run and it just spins with no feedback

Hello, @michaelschlemback779.
Welcome to the forum.
That usually happens when you have an infinite loop in your code. If you’ll post your code following these guidelines, we can take a look.

Hi, for the example, why do we use if/else ? couldn’t we just say that
total_included = price * tip + price ?
the example :
double get_tip(double price, double tip, bool total_included) {

  if (total_included) {

    return price * tip + price;

  } else {

    return price * tip;

  }

}


The reason for this is if you want to include the price of the total + tip, or just calculate the tip.


Tackling Multiple Arguments c   error1206×150 20.6 KB

I changed some_number to 10000 and I get this result. Why this happens? Why it shifts lines all the sudden?

You are forgetting the \n character (which shifts the output to the next line). It should be in your cout statement within name_x_times(string name, int num)
Like  std::cout << name << '\n';

I know about that. I don’t want “rand om 112!” and then next line but as it is right now. Problem as I see is that about first 1000 lines writes ok then suddenly shifts.
"
71,FAQ: Conditionals & Logic - Coin Flip Demo,"Get Help,Git",,4,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Coin Flip Demo” exercise from the lesson “Conditionals & Logic”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Coin Flip Demo


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
In the coin flip problem, when i put some number in place of (time(NULL)), the output comes out to be tails always. Why is it so?/

Hello there. I would also like to know 




 rutuja_b:

In the coin flip problem, when i put some number in place of (time(NULL)), the output comes out to be tails always. Why is it so?/




stackoverflow.com






What is time(NULL) in C?


c, time


  
  answered by
  
    jonsca
  
  on 03:01AM - 26 Sep 11 UTC







You can pass in a pointer to a  time_t  object that  time  will fill up with the current time (and the return value is the same one that you pointed to). If you pass in  NULL , it just ignores it and merely returns a new  time_t  object that represents the current time.

So when you seed that value and then do
  int	coin = rand() % 2;

You then flip based on that value % 2.  What it equates to determines if its heads or tails.  What it sounds like is based on that link is that your feeding it a constant value, so your getting a constant result.
So, with what it ask you to do, you are always returning the else statement.

#include <iostream>
#include <stdlib.h>
#include <ctime>

int main()
{

  // Create a number that's 0 or 1
  srand(time(NULL));
  int coin = rand() % 2;

  // If number is 0: Heads
  // If it is not 0: Tails

  if (coin == 0)
  {
    std::cout << ""Heads\n"";
  }
  else
  {
    std::cout << ""Tails\n"";
  }
}


"
72,FAQ: Functions - How Return Values Work,"Get Help,Git",,6,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “How Return Values Work” exercise from the lesson “Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise How Return Values Work


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Why is the gif so fast??? I can’t see what is going on.

why is this explained after the exercise…

Hi! What is happening when we use or don’t use the parentheses () at the end of the function calling?

Hi! Can we change the return type of main() to a value other than int?




 toskap3:

Hi! Can we change the return type of main() to a value other than int ?


Yes, good questions @toskap3. I can’t see it answered.
I would also like to know why I only see return type as’int’ for main () function. IN most cases, it seems ‘void’ would be better suited.
"
73,FAQ: Code Challenge: C++ Functions - Average,"Get Help,Git",,8,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Average” exercise from the lesson “Code Challenge: C++ Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Average


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I would like to ask about the fuctions. Okay if;
“void something(std::string 1, std::string 2)” why does, “double something(double 1, double 2)”.
What’s the differences?
Is void is only for std::string and double is the same as void but only for double, so what does bool is for and what is the “void” for integer?
Is it something like this? I’m so confused.

I got this:
#include 
// Define average() here:
double average(double num1, double num2)
{
return (num1+num2)/2;
}
int main() {
std::cout << average(42.0, 24.0) << “\n”;
std::cout << average(1.0, 2.0) << “\n”;
}


namespace “std” has no member “cout”
You are missing an include.

double average(double num1, double num2)
{
    return (num1 + num2) / 2;
}

int main()
{

    std::cout << average(42.0, 24.0) << ""\n"";
    std::cout << average(1.0, 2.0) << ""\n"";
}


I have a question reg the average exercise. The code i wrote was this. what is the difference from it to the correct answer?
My code:
#include 
// Define average() here:
void average(double num1, double num2){
double average_var;
average_var = (num1 + num2) / 2;
return average_var;
}
int main() {
std::cout << average(42.0, 24.0) << “\n”;
std::cout << average(1.0, 2.0) << “\n”;
}
ANSWER FROM EXERCISE:
#include 
// Define average() here:
double average(double num1, double num2) {
return (num1 + num2) / 2;
}
int main() {
std::cout << average(42.0, 24.0) << “\n”;
std::cout << average(1.0, 2.0) << “\n”;
}




 cloudsurfer18009:

#include
// Define average() here:
void average(double num1, double num2){
double average_var;
average_var = (num1 + num2) / 2;
return average_var;
}
int main() {
std::cout << average(42.0, 24.0) << “\n”;
std::cout << average(1.0, 2.0) << “\n”;
}
ANSWER FROM EXERCISE:
#include
// Define average() here:
double average(double num1, double num2) {
return (num1 + num2) / 2;
}
int main() {
std::cout << average(42.0, 24.0) << “\n”;
std::cout << average(1.0, 2.0) << “\n”;
}


When you format your code
#include

// Define average() here:

void average(double num1, double num2)
{
    double average_var;
    average_var = (num1 + num2) / 2;
    return average_var;
}

int main()
{
    std::cout << average(42.0, 24.0) << “\n”;
    std::cout << average(1.0, 2.0) << “\n”;
}

ANSWER FROM EXERCISE :
#include

    // Define average() here:
    double
    average(double num1, double num2)
{
    return (num1 + num2) / 2;
}

int main()
{
    std::cout << average(42.0, 24.0) << “\n”;
    std::cout << average(1.0, 2.0) << “\n”;
}

You can see that double from the answer is a double function.  Your double function is a void.  Void returns nothing, yet you are attempting to return average_var.
It will be easier to read it like this and compare where you went wrong.
#include

// Define average() here:

void average(double num1, double num2)
{
    double average_var;
    average_var = (num1 + num2) / 2;
    return average_var;
}

double average(double num1, double num2)
{
    return (num1 + num2) / 2;
}

int main()
{
    std::cout << average(42.0, 24.0) << “\n”;
    std::cout << average(1.0, 2.0) << “\n”;
}


Actually, there is a reason. The ‘void’ function only returns strings, nothing else. In order to return a double, integer, or boolean, you need to have separate code for each. ‘void’ only refers to strings and
std::cout << something1 << something 2;




 tera7893163464:

The ‘void’ function only returns strings


Void returns nothing, that’s why its void.  It’s void of a return.
"
74,FAQ: Functions - Return Types — Beyond the Void,"Get Help,Git",,23,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Return Types — Beyond the Void” exercise from the lesson “Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Return Types — Beyond the Void


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Whether I type ‘true’ or ‘false’ my programs prints 0. What have I missed?
std::cin >> support;
return support;

Probably a bit late, but this is what i found out.
It responds to both 1 [one] or 0 [zero].
For some reason it does not respond to ‘true’ and ‘false’.
1 [one] represent ‘true’ and 0 [zero] represent ‘false’
and by including std::boolalpha in the/a std::cout (meaning you could have std::boolalpha in a seperate std::cout before the actual bool is printed.) you change the output from integers to either ‘true’ or ‘false’. examples:
std::cout << std::boolalpha << needs_it_support() << “\n”;
Hope this is somewhat helpfull.

How was I suppose I had to change the
std::cout <<support:
to
return support;
This was not what the part one was asking.
Often the answer does not match at all what was ask, English is not my native language but I believe the questions are not well formulated
i keep figuring out answers on my own and by ignoring what the question is asking and peeking at the answer and understand from there.

Nothing happens when I click the RUN button. Here is my code:
#include 
// Change needs_it_support so that it returns support:
bool needs_it_support() {
bool support;
std::cout << “Hello. IT. Have you tried turning it off and on again? Enter ‘true’ for yes, ‘false’ for no.\n”;
std::cin >> support;
return support;
}
int main() {
// Change the following line to print the function result:
std::cout << needs_it_support();
}

It seems that clicking ‘Run’ in this particular exercise doesn’t compile and execute like it did in the previous exercises in the lesson. You can compile and execute the code yourself in the terminal if you like, but the outcome won’t be what is expected. support is a bool variable. When you std::cout << a bool, the output is either a 0 for false or a 1 for true. This particular needs_it_support() function will always return 0 unless the user ignores the instructions, and enters 1.  The reason for that may not make sense at this point in the course.
Hope this helps, and happy coding!

Hi! Why are std::string , and  std::vector  used with std:: in front, while
double ,  int ,  bool and  char aren’t?

It would take some research to find out why certain data types, built-in methods, etc. are in each particular namespace, but the short answer to your question is that string and vector are not fundamental data types in C++. They are defined in the standard namespace referred to in code as namespace std, so to use them, you have to tell the compiler where to find the definition. Later you’ll start using something called using statements. For example: ( using namespace std; ). This will give you access to all of the items in the standard namespace without having to type std:: before everything belonging to the standard namespace. Hope this helps!

Why does the function work when we assign an integer to a ‘bool’ variable?

C++ stores bool values as either 1 or 0. 1 is true. 0 is false. When you make an assignment to a bool variable, you can use: true, false, 1 or 0. These are considered bool values. You cannot assign just any integer to a bool variable. You can assign the bool values 0 or 1. Hope this helps!

Have you figured out why the program doesn’t work when we use true and false

It should work with true or false. Making assignments in code, and getting user input are a little different. Printing the output to the console as ‘true’ or ‘false’ also requires more than is taught at this point in the lessons.
This example will take 1 or 0 as input, but output true or false:
#include <iostream>

int main() {
  bool answer;
  std::cout << ""Enter 1 for true or 0 for false:\n"";
  std::cout << ""The sky is blue.\n"";
  std::cin >> answer;
  std::cout << ""\nYou answered: "" << std::boolalpha << answer;
  return 0;
}

Output:

Enter 1 for true or 0 for false:
The sky is blue.
1
You answered: true

This example will take true or false as input, but output 1 or 0:
#include <iostream>

int main() {
  bool answer;
  std::cout << ""Enter true or false:\n"";
  std::cout << ""The sky is blue.\n"";
  std::cin >> std::boolalpha >> answer;
  std::cout << ""\nYou answered: "" << answer <<""\n"";
  return 0;
}


Output:
Enter true or false:
The sky is blue.
true
You answered: 1

The std::boolalpha allows the input to be true or false in a std::cin statement or changes the output to true or false in a std::cout statement. If our code didn’t use input from the user, we could assign any of the accepted bool values to the bool variable in our code:
 bool mybool;
 mybool = 1;
 mybool = 0;
 mybool = true;
 mybool = false;

Hope this helps.

I don’t really understand this website so I don’t know if I am asking my own question or replying to somebody elses, but I don’t understand when to simply call the function like:
function(); or if you are supposed to: std::cout << function();. Could someone shed some light on when to use which.

The short and simple answer is that you would only use std::cout << some_function(); if you want to print the value returned by the function to the console. If you just want the function to execute without printing the result invoke it with some_function();.

I am confused by this exercise, perhaps because I am new to coding. If I retype the entire solution - which I’ve done a few times now - , I still get this error: 
Why?

so bool and int are fundamental data types that don’t require specifying our namespace?

This code works
bool needs_it_support() {
int support;
std::cout << “Hello. IT. Have you tried turning it off and on again? Enter 1 for yes, 0 for no.\n”;
std::cin >> support;
return support;
}
int main() {
// Change the following line to print the function result:
std::cout << needs_it_support();
}

#include <iostream>

// Change needs_it_support so that it returns support:
bool needs_it_support() {
  
  bool support;
  
  std::cout << ""Hello. IT. Have you tried turning it off and on again? Enter 1 for yes, 0 for no.\n"";
std::cin >> support;
  
  return support;
  
  
}

int main() {
  
  // Change the following line to print the function result:
 std::cout << needs_it_support();
  
}

This is my code. It was “checked” as correct to proceed, but when i compiled and executed , I answered on the question with 1 and I got the respond: 1$
When i repeated and answered 0 I got the respond: 0$
 confused although i proceeded to next lesson…

Hello, @design3579020597.
The $ is just the console prompt. If you modify the std::cout statement in your main() function like so: std::cout << needs_it_support() << ""\n""; the prompt will appear on the next line instead of immediately following your output.

#include
bool needs_it_support(){
bool support;
std::cout<<"" 1 for yes, 0 for no"";
std::cin>>support;
return support;
}
int main(){
std::cout<<needs_it_support()<<""\n"";
}
why is is that if i cout needs_it_support() in the main, it prints everything in that function including the cin input. But if I am just going to call out the function like needs_it_support(); the cin value doesnt get printed otherwise the return value doesnt get printed out?
"
75,FAQ: Functions - Parameters & Arguments,"Get Help,Git",,15,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Parameters & Arguments” exercise from the lesson “Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Parameters & Arguments


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Inside the code:
`#include 
// Define get_emergency_number() below:
void get_emergency_number(std::string emergency_number){
std::cout << ""Dial "" << emergency_number;
}
int main() {
// Original emergency services number
std::string old_emergency_number = “999”;
// For nicer ambulances, faster response times
// and better-looking drivers
std::string new_emergency_number = “0118 999 881 999 119 725 3”;
// Call get_emergency_number() below with
// the number you want!
get_emergency_number(new_emergency_number);
}`
How come if I put in ‘string emergency_number’ instead of ‘std::string emergency_number’ for the parameter in the ‘void get_emergency_number’ function I get an error?

I answered a very similar question here:




FAQ: Functions - Return Types — Beyond the Void C++


    It would take some research to find out why certain data types, built-in methods, etc. are in each particular namespace, but the short answer to your question is that string and vector are not fundamental data types in C++. They are defined in the standard namespace referred to in code as namespace std, so to use them, you have to tell the compiler where to find the definition. Later you’ll start using something called using statements. For example: ( using namespace std; ). This will give you a…
  



Why doesn’t  this work:
// Call get_emergency_number() below with
// the number you want!
std::cout << get_emergency_number(new_emergency_number);
But in 2/10 this works:
// Use rand() below to initialize the_amazing_random_number
int the_amazing_random_number = rand() % 500;
std::cout << the_amazing_random_number;

Hello @srinac.
If you look at the method, get_emergency_number(), what is its return type?




 srinac:

std::cout << get_emergency_number(new_emergency_number);


std::cout << needs a value to print. The expression that follows is a method call, so the value to print will be the return value of the method. What does get_emergency_number() return?

how can i call the new_emergency number ??

Honestly, this exercise is kind of a confusing mess guys, sorry. It was great so far but this is pretty annoying.
I’m being asked to define a function first, but I have to put empty curly brackets before hitting Run to validate it and move on to the next instruction because the actual definition is in step 2…what?
Step 3, I must call the function with “either number”…either of which number? The old or the new? That doesn’t make any sense.
Are we talking about a new number here, or just the one you call when you want better looking drivers? Why is the variable underneath called new_emergency_number?
Why is there a string called old number? I don’t seem to need it? None of the instructions mention it?
Basically now I have fully functioning code that won’t validate a successful exercise because I can’t understand what I’m supposed to do with it.
How about you explain in practice how this function is used so I know what to do with it instead of referencing goofy TV shows and slathering your code with nonsensical comments that have nothing to do with the goal of the function?

Yeah I’m having the same kind of issue with this lesson.  I click run to go to the next step and it says I did it wrong, and if I tell it to just show me the solution it’s exactly what I typed, plus the entire rest of the lesson.  This is by far the most annoying thing I’ve experienced on Codecademy.


This video helped me. I agree my code wasn’t exactly the same but It worked the exact same way… not sure if thats wrong? I am sure there are best practices involved. Also the last couple of lessons don’t let you compile the code so they have taken away the ability to experiment with different ways to write the code. I also cant find the tab to report the problem.
here is the way I wrote my code.
#include 
void get_emergency_number (int num){
std::cout << "" The new number is: "" << num << “\n”;
//the “num” argument is defined inside the the int main and called to the std::cout statement.
int main(){
// Original emergency services number
std::string old_emergency_number = “999”;
// For nicer ambulances, faster response times
// and better-looking drivers
get_emergency_number (911);
}
Now if you’re still reading I just checked to see if I could have used there number (0118 999 881 999 119 725 3). It seems that the argument for int cant take more than 8 numbers. That must be why they added a declared a separate variable.

Im having trouble on step 3 it asks me to call it inside main

For those having trouble:
#include 
// Define get_emergency_number() below:
void get_emergency_number(std::string emergency_number){
std::cout << ""Dial "" << emergency_number << "" "";
}
int main() {
// Original emergency services number
std::string old_emergency_number = “999”;
// For nicer ambulances, faster response times
// and better-looking drivers
std::string new_emergency_number = “0118 999 881 999 119 725 3”;
// Call get_emergency_number() below with
// the number you want!
get_emergency_number(new_emergency_number);
}

Hey y’all. I have tried all the solutions in this forum to no avail. It would be great to have this exercise revamped so that a result can be achieved. Very happy to see C++ on Codecademy!

yes obviously you to mention std:: before string to declare a string variable we are just decalaring a string variable in function defination for storing value

i want to know can i store numeric value in string type variable why are not we double type variable in this exercise
anybody plzz reply!!!

#include 
// Define get_emergency_number() below:
void get_emergency_number(std::string emergency_number) {
std::cout << ""Dial "" << emergency_number;
}
int main() {
// Original emergency services number
std::string old_emergency_number = “999”;
// For nicer ambulances, faster response times
// and better-looking drivers
std::string new_emergency_number = “0118 999 881 999 119 725 3”;
// Call get_emergency_number() below with
// the number you want!
get_emergency_number(new_emergency_number);
}
this was my code that passed the exercise without errors and actually printed the correct thing.
"
76,FAQ: Hello World! - Pattern,"Get Help,Git",,18,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Pattern” exercise from the lesson “Hello World!”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Pattern


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Yea sweet lets start off learning c++ by having the user guess what arbitrary number of spaces are required to pass the specs

Is is necessary to write std:: ?
Can we only write cout<<?

tabs over spaces, why use spaces for this?

I’ve been waiting for quite some time for this C++ course to come out, and i really like it! The only thing that i think is weird is that i can t see what it says it wants me to make it say, so then i have to see the solution, when i want to keep trying.

You can type:
using namespace std;
at the beginning of your program to not have to type std:: every time in your program.

Hi can someone pls tell me what I am doing wrong? I pass the exercise but on the right side it isn’t the same pattern.
#include 
int main()
{
#include 
int main()
{
std::cout << ""			   1\n"";
std::cout << ""				2 3\n"";
std::cout << ""     4 5 6\n"";
std::cout << “7 8 9 10\n”;
}
}



std::cout << ""           1\n"";
std::cout << ""	       2 3\n"";
std::cout << ""    4 5 6\n"";
std::cout << “7 8 9 10\n”;


Should be like this.

I am not able to jump the next level after printing the numbers from 1 to 10… why so?

Howdy All …
just farting around and I took a diffrent approach, learning to consolidate and comment code, requardless of language. Nothing EPIC or earth shattering but my 1st thoughts were:

    1
  2 3
4 5 6

7 8 9 10
it took a few tries to the align columns created. More important is it ran …follow the examples and understand the code. Then substitute and "" see what happens if I change this "" …
Trial and error with code is important if you want to learn how to debug!! -lol-
a good habit is developed a take sometime and investigate. It saved a few lines of code and I had to think to make it work, the space looks weird but it runs. baby steps for me and how it works >>>>>>>>>

or use the following code.
#include <iostream>
#include <stdint.h>

using namespace std;

int main()
{

  uint16_t line=4,num=1, f;//You can play with line to print more numbers
  uint8_t b=line,FS;//FS=Front space
  if(line<5){f=2;}
  else if (line>=5&&line<14){f=3;}
  else {f=4;}//increase if statement and adjust f value for more lines

  for (uint8_t a=1;a<=line;a++){
        for (FS=b*f;FS>=1;FS--){
            cout<<"" "";
        }
        for (uint8_t aa=1;aa<=(a-1);aa++){
                printf(""%0*d "",(f-1),num);
                num++;
        }
        printf(""%0*i\n"",(f-1),num);
        num++;
        b--;
  }
}


or like…
#include 
int main()
{
std::cout << ""       1\n     2 3\n   4 5 6\n7 8 9 10\n"";
}

Doing coppers way certainly works but you’d have to add in the extra spaces to maintain the format of the original output they posted.
For visually learning, I just did it the way below to keep the spacing apparent. Not necessarily the cleanest though.
#include <iostream>

int main() 
{
  
  std::cout << 
""       1\n""
""     2 3\n""
""   4 5 6\n""
""7 8 9 10\n"";

}


I feel like this is a bug in their program. The output doesn’t match the description of what they’ve asked you to do. I don’t think doing a std::cout << for every single number is necessarily the most efficient, but that isn’t the point here. I did the exercise correctly based on the description and illustration - resulting in an output exactly like the one shown - but wound up having to accept the program’s solution over my own.
Nowhere does it display or ask the user to create a triangle of numbers.

Hello @sneakysquid09. Welcome to the forum.
You are exactly right. The exercise instructions do not describe the output the SCT expects. There is also an error here:

The actual output would be:

Hello
Goodbye

I will report this bug directly to the Codecademy Team. Thanks for bringing attention to this matter!
Update:
The instruction panel has been corrected:

image.png700×554 16.8 KB


I was able to do my code without multiple std::cout<< usages per below:
std::cout<<""             1\n""
""         2   3\n""
""     4   5   6\n""
"" 7   8   9  10\n"";
Is it best practice to use multiple std::cout<< or is it considered more efficient to not repeat the code line multiple times?

image1366×768 99.5 KB
Anybody know why I’m “wrong”?

look at your output vs what they ask for. It’s flipped. You’re very close.
"
77,FAQ: Functions - Void — The Point of No Return,"Get Help,Git",,10,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Void — The Point of No Return” exercise from the lesson “Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Void — The Point of No Return


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Would have been helpful if you stated explicitly that you did not want us to print the quotation marks around the oscar wilde quote. I just spent ten minutes looking for a bug in my code that wasn’t there.

Try again using:
void  oscar_wilde_quote(){
std::cout << “The highest, as the lowest, form of criticism is a mode of autobiography.\n”;
}

i wrote the quote wrong 

Inside of  main() , call  `oscar_wilde_quote() I dont know wat to do can someone help me

You need to std::cout a string in the function oscar_wilde() and then call that function inside the int main().

It would be nice to know that you don’t need to enter return before function because all previous examples had return marked as a blue operator before declared function. This was very off-putting!

I can’t understand this: Inside of  main() , call  oscar_wilde_quote(). Can anybody help me? 

int main() {
// Call your function here:
oscar_wilde_quote() ;
}

Cannot understand this topic.What happens after calling that function again?
"
78,FAQ: Functions: Scope & Flexibility - Default Arguments,"Get Help,Git",,5,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Default Arguments” exercise from the lesson “Functions: Scope & Flexibility”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Default Arguments


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
There’s a typo

But the following does NOT work for  add_num(3);  the computer assumes that  3  still corresponds to  num1 :

should probably read:

But the following does NOT work for  add_nums(3);  the computer assumes that  3  still corresponds to  num1 :

as there is no mention of add_num() anywhere else.

Why the default values should only be included on the .hpp and not the relative .cpp file too?

I have the same doubt, have you figured it out?
Can it be specified in any of both files?

what does it mean by ""remove all unnecessary false arguments?
"
79,FAQ: Conditionals & Logic - Else Clause,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Else Clause” exercise from the lesson “Conditionals & Logic”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Else Clause


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
80,FAQ: Functions: Scope & Flexibility - How to Get Your Functions Inline,"Get Help,Git",,12,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “How to Get Your Functions Inline” exercise from the lesson “Functions: Scope & Flexibility”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise How to Get Your Functions Inline


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Is there an explanation anywhere about why with the inline keyword the execution was slower?
Here are the times
0.02295 //without inline
0.024281 //with inline

Same here. There was no real difference upon adding the inline keyword.

Mine didn’t work at all. Codecademy showed that I completed the exercise and I was able to click the next button (to move on) but with inline nothing happened! Does anyone know why?
Thanks!

Same problem as anaya99 has. It shows that I completed the exercise and I am able to click the next button but nothing happens.

Go back to main.cpp and hit run again

I got 0.02786 ms without inline, and 0.024231 ms with inline. Unlike what earlier posters got, my code actually ran faster.
What is supposed to be the reason behind why using inline functions can either increase or decrease runtime? What is the speeding up or slowing down dependent upon?

There’s always minor differences in the times for either version (with or without inline), for me at least.
Kinda defeats the purpose of the exercise, but the idea is that sometimes using inline will make things faster and sometimes make things slower. I don’t know why as of know (there’s probably a ton of info out there on it) but for code this short and simple it doesn’t make a discernible difference. One we start making more complex stuff there will likely be a difference.

thanks dude! 

I found a bit of confusion with this line here:
“Using  inline  advises the compiler to insert the function’s body where the function call is…”
Since we’re putting inline in the .hpp file, aren’t we supposed to say that inline advises the compiler to insert the function’s body where the function declaration is?
Or is that line still correct as those header contents are essentially inserted above main() function within the .cpp file. So technically it’s still correct that it’s within the file where the function is called?

same thing happened to ma at first. I think it was my adblock, ublock origin blocking the inline. I turned it of and reloaded and it worked.

Hi Everyone. I am having trouble understanding how inline functions work! I searched elsewhere and one site says “C++ provides an inline functions to reduce the function call overhead”, which is the switch between when a function executes and when the CPU returns the function. However, could anyone please explain inline functions clearly? Thank you.
"
81,FAQ: Classes and Objects - Constructors,"Get Help,Git",,6,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Constructors” exercise from the lesson “Classes and Objects”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Constructors


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
7 posts were split to a new topic: [PENDNG] Typo in the explanation’s image

Why are we using new_title and new_artist here? can’t we just go with (std::string title,std::string artist)  ?

It’s the lesson and what it tells you to do. Although, it’s not a function it’s a parameter so you  can’t overload it as far as I know. By that I mean there’s already existing strings so the program would get confused and cause an error.

In slide 5/7, I think there is a small mistake in instruction. Please have a look at following screenshot. The line “#include “city.hpp”” should be written after “// city.cpp”, not after “// city.hpp”. Please correct me if I’m wrong.
CodeCademy_C++_Constructors810×632 32.1 KB

I had an error message referencing Song.cpp, even though I passed the exercise. This is the error message:
song.cpp:9:29: error: no ‘std::__cxx11::string Song::get_title()’ member function declared in class ‘Song’
std::string Song::get_title() {
^
song.cpp:15:30: error: no ‘std::__cxx11::string Song::get_artist()’ member function declared in class ‘Song’
std::string Song::get_artist() {
^
(Scroll down)

This is my code:
#include ""song.hpp""

// add the Song constructor here:
Song::Song(std::string new_title, std::string new_artist) {
  title = new_title;
  artist = new_artist;
}

std::string Song::get_title() {

  return title;

}

std::string Song::get_artist() {

  return artist;

}

What did I do wrong?
"
82,FAQ: Functions: Scope & Flexibility - How to Build Function Templates,"Get Help,Git",,12,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “How to Build Function Templates” exercise from the lesson “Functions: Scope & Flexibility”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise How to Build Function Templates


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Can we Use templates to declare functions in the header file and STILL define them in the cpp file?

Can someone please explain the syntax of the following?

particularly that of line 6

Line 6 is a ternary operator.
A ternary operator  is an operator  that takes three arguments. The first argument is a comparison argument, the second is the result upon a true comparison, and the third is the result upon a false comparison.
So in this example:
First argument: is num2 smaller than num1?
2nd arument: if 1st argument is true then return num2.
3rd argument: if 1st argument is false then return num1.

In the hint it says if the function is flexible it can be type T as it is below. However, in their example at the very beginning the function isn’t type T and they say it’s flexible. Wondering why the lesson only worked when I made my function type T but their original example isn’t that way.
template typename T>
T some_function_name(T item1, T item2) {
// do stuff with item1 and item2
}
If you can help I’d really appreciate it. Thanks!

I couldn’t figure out how to do it. Well, I’m pretty sure I got it right because I have basic knowledge and know it’ll work, but it just doesn’t want to work. I wrote down the exact same thing that’s in the view solution part and that doesn’t work when I input it, it only works when the computer does it itself.


Same my solution was verbatim. I even tested a copy and paste of the solution and it wouldn’t work. At least we know.

I think it should be made clearer that templates are inline by default.
@llamalead0409476024 It should take arguments (T num1, T num2) .

Why is this wrong?
template 
T get_smallest(T num1,T num2) {
return num2 < num1? num2 : num1;
}
I typed this in and then when it said it was wrong I typed show solution and got this exact same result.

The instruction says to remove everything from numbers.cpp and I removed everything except what was needed in the numbers.hpp.  Then, it worked.

What is the point of the .cpp file if we remove everything to condense it down to the .hpp file? I understand the .hpp file serves as a point of reference for the program to pull functions into the main body, but if you’re removing everything from the .cpp file and putting the function directly in the .hpp file then there doesn’t seem to be any reason for one file or the other.

Hi,
The code below is what I entered and when I ran it from numbers.hpp screen there was an error but when I ran the code from main.cpp the code ran without an error. Also, I noticed that in your example you did not have the typename T which may have just been a typo.
Hope this helps,
// Replace these declarations with a template
template typename T
T get_smallest(T num1, T num2){
return num2 < num1? num2 : num1;
}
"
83,FAQ: Loops - 99 Bottles,"Get Help,Git",,23,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “99 Bottles” exercise from the lesson “Loops”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise 99 Bottles


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Another answer for this exercise is the next:
#include <iostream>

int main() {

  // Write a for loop here:
  int n = 99;
  for(;n > 0;){
    std::cout << n;
    std::cout << "" bottles of pop on the wall.\nTake one down and pass it around.\n"";
      std::cout << --n << "" bottles of pop on the wall.\n\n"";  
  }
 return 0; 
}

We can use -for- like -while-, while(n > 0) can write like for(;n > 0;) and if we use pre-decrement --n, we can do a decrement of n.
I love for loop, oh! by the way  we can do an infinite loop with for(;;){}

Hi josen0,
I’m assuming such is the case, but you’ve tried this code and it lets you pass the exercise, correct? I only ask because I have a heck of a time trying to move forward and finish this lesson, but no matter what I do, CA’s “terminal” thingy won’t accept it. Before, I had it reading out the same message, but without the space between the verses, so I tested out your code in my computer’s real terminal, and thought “Aha! that’s why it doesn’t pass.” so I added the extra newline code and its output is identical now, but…still no. The only  difference with my code is that I use the endl methods for the 1st “bottles on wall” line and the “take one down” line. I’m pretty exasperated , and I’ve got a mind to report a bug to Codecademy. Do you have any thoughts on that? Other readers, have any of y’all had similar problems with this exercise?

Hello rubycoder77505,
CA doesn’t recognize this code as OK, in fact, the official solution is the next:
#include <iostream>

int main() {

  // Write a for loop here:

  for (int i = 99; i > 0; i--) {

    std::cout << i << "" bottles of pop on the wall.\n"";
    std::cout << ""Take one down and pass it around.\n"";
    std::cout << i - 1 << "" bottles of pop on the wall.\n\n"";

  }

}

I put an alternative solution for this exercise in order to show an alternative use of for loop, as you can see my code works, maybe you can take some ideas for that code and use it for you.
Sorry to not specify that CA doesn’t recognize that code as good answer, please take a breath and try the official solution to pass step.
Thank you for comment, if you have some question, please feel free to comment here.
Happy Holidays.
Regards,
Jose.

Thanks for your reply Jose, I’m convinced at this point then, sadly, that this is indeed a bug. Perhaps it has something to do with my browser, I usually use Opera, but I think, why now, when all the other code I’ve used before is fine?
Either way, I figure my code is perfectly valid and it works in a “real-life” (i.e., my computer’s terminal) situation, and there’s only so much time of my life I’m gonna spend editing code for a 99 bottles of beer/pop/whatever  program, so I’ll report the bug and move forward with my life. BTW, I tried the official solution you’ve posted here, that apparently doesn’t pass for what I get with CA either! (Not blaming you, of course. Like I said, I really think it’s a bug at this point). I wanna get past this before I start having psycho nightmares where “99 bottles of beer on the wall” is being sung slowly by children playing jumprope LOL.
For any who are interested in this topic, here is my code. Happy Holidays to you too, Jose!
#include 
int main() {
// Write a for loop here:
for (int bottle = 99; bottle > 0; --bottle) {
std::cout << bottle << "" bottles of pop on the wall."" << std::endl;
std::cout << “Take one down and pass it around.” << std::endl;
std::cout << (bottle - 1) << "" bottles of pop on the wall.\n\n"";
}
}
(Later edit, the #include line has iostream in the more than/less than symbols, but Codecademy’s forum seems not to recognize that, for HTML reasons i guess)

@rubycoder77505, has this run for you yet? I’ve tried different browsers and even went so far as to testing it on three computers. I reported a bug as well and it’s still not going.  Even cheating and using the hint’s code does nothing for me. I, too, am having nightmares of 99 bottles.

The exercise wants one of the following patterns to match in the code:
for\s*\(int\s*i\s*=\s*99\s*;\s*i\s*>\s*0\s*;\s*i--\s*\)
for\s*\(\s*i\s*=\s*99\s*;\s*i\s*>\s*0\s*;\s*i--\s*\)

\s means whitespace and * means zero or more, \) and \( are just )(, the rest is the same as it says in the pattern.
@sonnynomnom exercises that test behaviour are much more pleasant, and I suspect a big reason for the existence of a solution button in the learning environment is the widespread use of regexes which just can’t be reliably passed by following instructions. For example, renaming i, or doing --i or putting a space between i and --. Maybe someone doesn’t want to use int as the type. Maybe they use >= instead of >, perfectly valid, doesn’t conflict with instructions. Results in an error message asking whether a for loop was added. Yeah. It was. The wrong thing is tested.
(Also, I can’t pass it at all, get no error message or anything, but that might be my unusual access pattern, maybe I do something very unintended, so I won’t claim that it’s a bug, maybe though)

@ionatan totally agree. i’m also a huge believer of problem solving in different ways. right now we have to rely on regex for a lot of the tests in learn c++ simply because we just added the language. things will change very soon tho!

om_niscient, I did manage to finally get the exercise to pass, but not for any good reason. I ran josen0’s official solution code, and received the following error message:
99bottles.cpp:3:1: error: expected unqualified-id before ‘for’
for (int i = 99; i > 0; i–) {
^
99bottles.cpp:3:18: error: ‘i’ does not name a type
for (int i = 99; i > 0; i–) {
^
99bottles.cpp:3:25: error: ‘i’ does not name a type
for (int i = 99; i > 0; i–) {
^
99bottles.cpp:19:1: error: expected declaration before ‘}’ token
}
^
But, it did light up the ‘Next’ button and allow me to pass. Now I’m a bit disappointed to see that that’s basically all for C++ lessons here for now, at least without upgrading to Pro, which i’m unfortunately not in a position to do right now. It was good learning experience at least, except for that darn 99 bottles exercise. I don’t know what glitch caused that, I hope that’ll work out for you as well. I’m not sure why it wasn’t working before, and then all of a sudden it did that one time.

It seems like the official solution suggests that you should add the final verse at the end as well to pass.
std::cout << ""No more bottles of pop on the wall.\n"";
std::cout << ""No more bottles of pop.\n"";
std::cout << ""Go to the store and buy some more,\n"";
std::cout << ""99 bottles of pop on the wall.\n"";
  

This is really silly and CA should recognise this.

I remember this song going a little differently, so I programmed it like this:
(NB, this solution won’t pass the exercise, you have to replicate the sample verse exactly to the letter)
#include <iostream>

int main() {

  int cont = true;
  char yesno;
  while (cont){
    
  	for (int i = 99; i > 0; i--){
    	std::cout << i << "" bottles of beer on the wall,\n"" << i << "" bottles of beer.\nTake one down, pass it around,\n"" << i-1 << "" bottles of beer on the wall.\n\n"";
  	}
	std::cout << 0 << "" bottles of beer on the wall,\n"" << 0 << "" bottles of beer.\nGo to the shops, buy a new box\n"" << 99 << "" bottles of beer on the wall...\n\n"";  
	
  std::cout << ""Continue? (y/n): "";
  std::cin >> yesno;
  std::cout << ""\n"";
    
    if(toupper(yesno)=='Y'){
      cont = true;
    } else {
      cont = false;
    }
    
    
  }
 
}
  


There is an error with this exercise’s instructions, it says “If you want to add the final verse at the end:”.
It should not say this like it is optional.  It should say to also add it period.  I spent time trying to figure out what was wrong with my code only to find out that that part was not optional and I couldn’t proceed because of that.

Wasn’t able to complete the code unless I added the final verse exactly  as it shows in the hint for the assignment. There are various ways to write the code, I felt like I had it right the first go but there aren’t instructions to complete the verse in the assignment unless you go to the Hint. Eventually I was forced to quit the assignment and ask for the correct code thinking I was missing something else only to find it was indeed just a copy of the solution in the hint menu. Not huge but it does hinder the flow to not have those instructions included in the practice.

What if I put this :
for (int i = 99; i > 0; i++) {
std::cout << i << "" bottles of pop on the wall.\n"";
std::cout << ""Take one down and pass it around.\n"";
std::cout << i - 1 << "" bottles of pop on the wall.\n\n"";

}
and not this:
for (int i = 99; i > 0; i–) {
std::cout << i << "" bottles of pop on the wall.\n"";
std::cout << ""Take one down and pass it around.\n"";
std::cout << i - 1 << "" bottles of pop on the wall.\n\n"";

}
What will happen because  it won’t run it

If it’s not running is anything happening?
I’d argue it would run.
And, I’d argue you could step through a few iterations manually.
And, the code is the source of truth for what would happen, it says what would happen. What does it say?
You could also run it locally if codecademy doesn’t deal with it.

Can anyone explain why my code is not accepted??
#include 
int main() {
// Write a for loop here:
for (int i = 99; i > 0; i–)
{
std::cout << i << "" bottles of pop on the wall.\n"";
std::cout << “Take one down and pass it around.\n” << i-1 <<"" bottles of pop on the wall\n\n"";
}
}

just delete the last std::cout line

delete last line
for (int i = 99; i > 0; i–) {
std::cout << i << "" bottles of pop on the wall.\n"";
std::cout << "" Take one down and pass it around.\n"";
}

I think that CA should mark this as a correct answer.
#include <iostream>

int main() {

  // Write a for loop here:
  for (int i = 99; i > 0; i--) {
    std::cout << i << "" bottles of beer on the wall, "" << i << "" bottles of beer. Take one down and pass it around, "" << i - 1 << "" bottles of beer on the wall.\n\n"";
  }
}


You are right.  Oh my, I would have never guessed.
"
84,FAQ: Variables - User Input,"Get Help,Git",,27,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “User Input” exercise from the lesson “Variables”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise User Input


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
When do we include “return 0;” and when is it okay to omit it?

What is the purpose of the return 0?

Why are we always creating a new line with “\n” when there is nothing happening with that new line after? Is it a good habit to have?

Hello hh1077,
We use -return- for return a value from a function, in this case the function is -main- that returns zero value -return 0;-,  but you will understand this point when you take the “functions” topic, don’t worry about that.
Regards
José

The program didn’t output anything when I typed in my tip. The machine says my code works but still nothing is outputted:

Screen Shot 2019-02-05 at 9.52.55 AM.png2728×1708 291 KB


You forgot to put a ; at the end of your last line of code. Like this:
std::cout << “You paid” << tip << “dollars\n”;
}

What did I do wrong? My code matches the example, but it will not run correctly.
1690c65e680b2a6eca459c0ce1257fdf913b3bef.png848×557 35.1 KB


#include <iostream>

int main() {
  
  int tip = 0;
  
  std::cout << ""Enter tip amount: "";
  std::cin >> tip;
  
  std::cout << ""you paid "" << tip <<""dollars.\n"";
  
}

any one know why this isnt working for me

I had the same problem “Bash: X: command not found”. Doesn’t make sense.

Might be a bug because when it gave me the solution, I had the exact same code but this time it worked.
Update: I copied and pasted their solution and it failed with the same error. I did it right, the tutorial is broken.

Update: I tried it on terminal and wrote the code using plaintext on notepad. It works. So the site is broken.

I have the same problem!

You are missing part of the #include line!
To correct reinput as follows:
#include <iostream>
That should fix it!

You are missing part of your #include line!
Try this:
#include 
That should fix it!

Well I try to reply but It leaves out the part that type that was missing so I will try it.
One more time!
Add this to the include line.  
At the end  #include
Line, note be sure to put a space the add the 
I hope this displays well so you can fix it!
I think that # character may be the cause of the display as I do not know how to write within these posts.

Hello, @web5769346207.
Welcome to the forum.
The posts that you are replying to are from April, so likely they have figured out their issue by now. The issue you are having trying to type #include <iostream> is due to the way the forum marks down what you type. In order to include code in your post, please follow these guidelines: How do I format code in my posts?
I edited your original post to show your code correctly. You should also note that the user you are trying to assist had the same issue, and actually did type #include <iostream>.

Ok, thanks. I was thinking that was the case, But did not thinks that the Question was also effected. So thanks again. this is my first time  posting to a form, but I did read the note on formatting. Just did not know in my head how to do it. But I will go back and learn how as I have just started learning Computer Programming Languages. My main reason for coming to you site, was to get some C Plus Plus Source code. But I have found you Free Course lesson very helpful. As a interesting  note, while viewing some code and adding some code from my Open Office Write Program I Found that  some thing was wrong with Open Office because when it type the keyboard character "" and then some text and them ""
I found that the first "" was not the same as the last "".  I find that very strange. I have not reported this to Open Office yet!. My Pc works fine while using your online course. so the PC!
Well Thanks again. Looking forward to more interaction on the codecademy Forums.

I have written mine exactly like the example

but this is what comes up

why does this happen

You are trying to run two commands on one line. You use g++ filename.cpp to compile. Then after that operation is complete, run the executable by typing ./a.out.
"
85,FAQ: Code Challenge: C++ Functions - Water Plant,"Get Help,Git",,8,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Water Plant” exercise from the lesson “Code Challenge: C++ Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Water Plant


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
My solution:
#include 
// Define needs_water() here:
std::string needs_water(int days, bool is_succulent)
{
std::string watering;
if (days > 3 && is_succulent == false)
{
watering = “Time to water the plant.”;
}
else if (days <= 12 && is_succulent == true)
{
watering = “Don’t water the plant!”;
}
else if (days >= 13 && is_succulent == true)
{
watering = “Go ahead and give the plant a little water.”;
}
else
{
watering = “Don’t water the plant!”;
}
return watering;
}
int main()
{
std::cout << needs_water(1, true) << “\n”;
}
Maybe someone knows a better solution?

It does’t matter if I put the int value first and then the bool and viceversa right?  I think codecademy needs my code to match theirs in order for me to continue.  I was doing the bool first then the int and It was giving me an error.  Of course I made the that the passed parameters were in the same order as in the fuction itself.

image.png580×556 38.8 KB


This still worked 
std::string needs_water(int days, bool is_succulent) {
  if (is_succulent == false && days > 3) {
    return ""Time to water the plant."";
  } else if (is_succulent == true && days <= 12) {
    return ""Dont water the plant!"";
  } else if (is_succulent == true && days >= 13) {
    return ""Go ahead and give the plant a little water."";
  } else {
    return ""Dont water the plant!"";
  }
}

int main() {
  
  std::cout << needs_water(10, false) << ""\n"";
  
}


std::string needs_water(int days, bool is_succulent) {
  
  if (is_succulent == false && days > 3) {
    return ""Time to water the plant."";
  } else if (days <= 12) {
    return ""Don't water the plant!"";
  } else if (days >= 13) {
    return ""Go ahead and give the plant a little water."";
  } else { 
    return ""Don't water the plant!"";
  }
 
}

Because of the nature of the cases, you don’t need to include the boolean values for the last 3 cases. There is only one condition with the false bool, so as long as it’s first everything is okay.

Hey guys, just wanted to offer a tip:
“is_succulent == true” is the same a “is_succulent” and “is_succulent == false” is the same as “!is_succulent”

That is what I did:
std::string needs_water(int days, bool is_succulent){
if (is_succulent == false && days > 3){
return ""Time to water the plant."";}

if (is_succulent == true && days >= 13){
return ""Go ahead and give the plant a little water."";}

return “Don’t water the plant!”;
}

This is getting to be bs.
#include 
#include 
using namespace std;
// Define needs_water() here:
string needs_water(int days, bool is_succulent){
if(is_succulent == false && days > 3){
return “Time to water the plant!”;
}
if(is_succulent == true && days <= 12){
return “Don’t water the plant!”;
}
if(is_succulent == true && days >= 13){
return “Go ahead and give the plant a little water.”;
}
return “Don’t water the plant!”;
}
int main() {
std::cout << needs_water(15, true) << “\n”;
}
this somehow doesn’t work for codecademy, even though it works perfectly.
"
86,FAQ: Vectors - Operations,"Get Help,Git",,28,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Operations” exercise from the lesson “Vectors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Operations


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
#include 
#include 
int main() {
std::vector delivery_order;
delivery_order.push_back(8.99);
delivery_order.push_back(3.75);
delivery_order.push_back(0.99);
delivery_order.push_back(5.99);
// Calculate the total using a for loop:
double total = 0.0;
for (int i = 0; i < delivery_order.size(); i++) {
delivery_order[i] == 3.75 + 0.99 + 5.99 + 8.99;

}
total == delivery_order[0];
std::cout << total << “\n”;
}
Why this program gives ‘0’ as the output?  I wrote total == delivery_order[0]. In the for loop I declared delivery_order[i] == 3.75 + 0.99 + 5.99 + 8.99. So I feel that total == sum. Where am I wrong?

I understood the first point (i.e I should not use ‘==’ sign). But I did not understand the second point which says that I should have written total = delivery_order[i] and not total = delivery_order[0]. I think that both of these will give me the correct result as each element of the vector is equal to the same value.

First, after these lines of code execute:
std::vector <double> delivery_order;

delivery_order.push_back(8.99);
delivery_order.push_back(3.75);
delivery_order.push_back(0.99);
delivery_order.push_back(5.99);

you have a vector that looks like this: [8.99, 3.75, 0.99, 5.99] These elements of the vector can be accessed by their index (position) like so: delivery_order[0] The value of the element at index 0 is 8.99. The value at index 1 is 3.75, index 2 is 0.99 and index 3 is 5.99
Your for loop is supposed to be used to calculate the sum of those 4 values. The reason you are getting 0 as the output is this line: total == delivery_order[0] Since you used ==, you are testing a condtion. That line of code is testing whether the value of total which is still 0.0 is equal to the value of delivery_order[0] which is 8.99. That evaluates to false which is stored as 0 in C++.
To get the total as instructed, you need to access each element of the vector, one at a time, and add its value to the total variable. That is the purpose of the for loop.
Try to re-write your for loop’s code body, and get the correct result. I’ve included the solution below if you get stuck. Happy coding!

for (int i = 0; i < delivery_order.size(); i++) {
  total += delivery_order[i]; //this will add  each value in turn to the total
}

std::cout << total << ""\n"";



My second post after 14 days was meant for Mohamed Abdelkarem who answered my question. I received it in my email account. Somehow his post is not visible here. Do you have any idea why is it so?
I should not have used the ‘==’ sign in my program in the question. You wrote that "" To get the total as instructed, you need to access each element of the vector, one at a time, and add its value to the  total  variable. That is the purpose of the  for  loop."" What is the problem if I make each element of the vector equal to the sum of four numbers and equate the variable ‘total’ to any single element of the vector(all the elements are equal to sum of numbers in the vector)




 tag0346608352:

What is the problem if I make each element of the vector equal to the sum of four numbers and equate the variable ‘total’ to any single element of the vector(all the elements are equal to sum of numbers in the vector)


I assume you’re referring to this line:
delivery_order[i] == 3.75 + 0.99 + 5.99 + 8.99;

What if you didn’t know what the 4 values were? What if you needed the 4 original values of the vector for a later operation? Your line of code above changes all of the values of the original vector to be the sum of the original values. Why would you need the same sum stored 4 times in a vector? Learning to access the values stored in an indexed collection of data without prior knowledge of those values, and without mutating them is an important concept in every programming language.

I know that ‘total += delivery_order[i]’ essentially means ‘total = total + delivery_order[i]’. Can I use ‘total = total + delivery_order[i]’ in my function? (i.e is it correct syntax)
Thanks for all the answers.

You can, and it’s perfectly fine syntactically, it’s just shorter to use +=. Opting to use total = total + delivery_order[i] is really just a matter of personal preference. There’s nothing wrong with choosing readability and clarity over being concise.

When using the for loop in vectors, how does the counter of it can be used as the index?

OK, I’ve been working at this for some time now and i can’t seem to get it to work. Every time i change something i get a new error then i start over and try again ever error has this: /usr/lib/gcc/x86_64-linux-gnu/7/…/…/…/x86_64-linux-gnu/crt1.o: In function _start': (.text+0x20): undefined reference tomain’
collect2: error: ld returned 1 exit status.
i dont know what that means to i dont know how to fix it and it tells me  “Did you output the total ?”
this is the code i have so far:
#include 
#include 
int main() {
std::vector delivery_order;
delivery_order.push_back(8.99);
delivery_order.push_back(3.75);
delivery_order.push_back(0.99);
delivery_order.push_back(5.99);
// Calculate the total using a for loop:
double total = 0.0;
for (int i = 0; i < delivery_order.size(); i++) {
total += delivery_order[i];
}

std::cout << total << “\n”;
}

Your code looks fine. The error in the console is a problem with the website. I’ve seen other users report the same message, and I’ve seen it myself in the lesson on vectors. I submitted a bug report, and suggest you do the same. If you click on the Get Help icon in the lower right corner of the exercise page, you’ll see a section for reporting bugs. Hopefully this will get fixed soon. @sonnynomnom, any chance you can facilitate someone looking into this?

Thanks i did just that and the very next lesson i got the same error and did it again. i hope they get that fixed. thanks again.

anyone know why instead of using delivery_order why does it use i?

Hello, @i_have_a_dream.
Welcome to the forums.
Could you be a bit more specific, and possibly paste in an example of the code you are referring to?

Hello, 2 days into programming and I have the excercise all wrong:
#include <iostream>
#include <vector>
  
int main() {
  
  std::vector<double> delivery_order;
  
  delivery_order.push_back(8.99);
  delivery_order.push_back(3.75);
  delivery_order.push_back(0.99);
  delivery_order.push_back(5.99);
  
  // Calculate the total using a for loop:
  
  double total = 0.0;
  
  for (double delivery_order = 0; delivery_order < delivery_order.size(); delivery_order++ ){

total = total + delivery_order;
}

…and might be kinda stupid to ask but:


why we use int variable? Both delivery_order vector and total variable are double. Aren’t int variables integer numbers , and  double variables decimical numbers?


as i_have_a_dream asked: why we use i instead of delivery_order ? We haven’t declared what i stands for in the code.   (I am talking for the for loop: for ( int i = 0;   …etc


I am so confused 

Hello, @design3579020597.
Welcome to the forums.
delivery_order is a vector. A vector is an iterable data structure. It is made up of elements that can be accessed by their index. In your code, after these lines of code are executed:
  std::vector<double> delivery_order;
  
  delivery_order.push_back(8.99);
  delivery_order.push_back(3.75);
  delivery_order.push_back(0.99);
  delivery_order.push_back(5.99);

your delivery_order vector could be visualized like this: {8.99, 3.75, 0.99, 5.99}.
It has 4 elements. That means delivery_order.size() returns a value of 4.
The index values for the elements begin with 0. delivery_order[0] has a value of 8.99. delivery_order[3] has a value of 5.99 (the last element of the vector).
You want to use a for loop to get the total amount of the delivery_order elements added together.
It is common practice to use the variable name i for the variable used to access an indexed data collection element at a particular index.
for (int i = 0; i < delivery_order.size(); i++)

In the line above we initialize i as an int because it will only hold integer values. In this case those values will be used to access the elements of the delivery_order vector inside the code body of the for loop. We give i the initial value of 0 because the first element of our vector is at index 0.
The next part of the for loop is the stop condition. It tells the computer when to stop executing the code inside the body of the loop. In this case we want to stop when the value of i is no longer a valid index for our vector. The valid indexes are: 0, 1, 2, 3. We’ve already established that delivery_order.size() will return 4. When the value of i is equal to 4 it will no longer be less than 4, so control will pass to the next line of code outside the for loop code body.
The last part of the for loop declaration tells the computer how to increment the variable i. We’ve used i++;, so i will be incremented by 1 following each iteration of the loop.
Inside the for loop is where we perform the calculation to get the total of the elements inside the vector:
  for (int i = 0; i < delivery_order.size(); i++ ){

    total = total + delivery_order[i]; //the first time this is executed i is equal to 0, so 8.99 will be added to the total then i will be incremented to 1 and 3.75 will be added to the total, and so on...
    //this would work as well: total += delivery_total[i];
  }

Using this method, we successfully add the value of each element in the delivery_order vector to the value of total, and then exit the loop after we’ve added the last value.

Thank you SO much midlindner for the answer. I willl go through it as you explained it line by line again. Thanks for the time you’ve put to write and explain it to me. I don’t think I can proceed to the next lessons/tasks if I don’t understand the logic exactly, so you’ve been really helpful. 

Can someone explain how a for loop works because I dont know how.

My code is this:
#include 
#include 
int main() {
std::vector delivery_order;
delivery_order.push_back(8.99);
delivery_order.push_back(3.75);
delivery_order.push_back(0.99);
delivery_order.push_back(5.99);
// Calculate the total using a for loop:
for (int i = 0; i < delivery_order.size(); i++) {
total = total + delivery_order[i];
}
std::cout << “Total is:” << total << “\n”;
double total = 0.0;  

}
And it doesn’t seems to be correct and I can’t go to the next step.
Where is the problem? I verify with the hints and it doesn’ t seemed to be wrong wrote.
Thank you

    std::vector delivery_order;


no instance of constructor “std::vector” matches the argument list

You have not told it what it is, as in what in it, what type, or if its empty.
std::vector::vector
This is how you declare or initialize a integer vector(you have float).
  std::vector<int> first;
// empty vector of ints

total = total + delivery_order[i];


identifier “total” is undefined

You have not declared or initialize this variable.  Also, if you do so inside of the loop it will then only live inside of the loop (scope).  Since you are calling it after the loop you need to declare this variable before the loop begins, outside of the loop.  Right now you have done so after the loop ends.
std::cout << “Total is :” << total << “\n”;


namespace “std” has no member “cout”’

You need to add the include file that has cout.
"
87,FAQ: References and Pointers - Pointers,"Get Help,Git",,2,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Pointers” exercise from the lesson “References and Pointers”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Pointers


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hello!
When I ran my codes to print pointer location, it brings different hexadecimal digits each time I printed the same code.
My question is this; does the variables and the pointers constantly changes their storage locations on the system as the project proceed?
Thanks !
"
88,FAQ: Functions: Scope & Flexibility - Function Overload!,"Get Help,Git",functions-c,5,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Function Overload!” exercise from the lesson “Functions: Scope & Flexibility”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Function Overload!


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
I have changed all the names and run the program. It gives the results but then the running does not end. Under the run button a line keeps on circling and I can not go to the next chapter. Help?

You’ve gotta show us your code for us to see what’s up with it.

It happened to me as well. I changed name completely from fancy_integer to grapes and  it worked.

Why does the exercise require one of the function return types to be an ‘int’ when using ‘double’ type arguments?
"
89,FAQ: References and Pointers - Pass-By-Reference,"Get Help,Git",,8,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Pass-By-Reference” exercise from the lesson “References and Pointers”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Pass-By-Reference


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
You can also find further discussion and get answers to your questions over in #get-help.
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head to #get-help and #community:tips-and-resources. If you are wanting feedback or inspiration for a project, check out #project.
Looking for motivation to keep learning? Join our wider discussions in #community
Learn more about how to use this guide.
Found a bug? Report it online, or post in #community:Codecademy-Bug-Reporting
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Difference between int &i and int& i ?
I see some code examples in Github use int&

Forget to Google
Found an answer on Stackoverflow,


stackoverflow.com






Is there a difference between int& a and int &a?


c++, reference


  asked by
  
  
    newprogrammer
  
  on 02:49AM - 30 Dec 11 UTC







#include <iostream>
int triple(int &i) {
  i = i * 3;
  return i;
}

int main() {
  int num = 1;
  std::cout << triple(num) << ""\n"";
  std::cout << triple(num) << ""\n"";
}

this would print 3 and then 9… why is that???
isn’t a reference simply a “copy” of the variable???
so since  num = 1; wouldn’t that mean that when the function is called its basically just inputting 3 times  1?? why does it take the answer of 3 and multiply it again?

I’m not exactly sure either, but best guess is this:
When we turn int i into the pass-by reference int &i
any variables used as arguments in the triple function are modified when i is returned. Thus, when we triple(num) and return i = 3 the first time, we’ve also modified the value of num such that num = 3. Running the same output command with our modified value produces the predictable result.

No, passing by value passes a copy of the value; passing by reference passes the “address” of the value’s storage location.
Imagine computer memory as a long line of lockers in a high school hallway. Locker #210 (maybe named “JanesLocker”) has a post-it note inside with the message “I love you, Jane” written on it.
Then you realize you need in locker #300 (maybe named “MarysLocker”) the same value as what’s in #210. You have two choices:


Pass by Value - you can write a copy of the post-it note that also says “I love you, Jane” and put that copy into #300, or


Pass by Reference - you can write a post-it note for #300 that says, “See #210”.


Later, you realize you need to change the message in #300 to, “I love you, Mary”. If you go to locker #300 (“MarysLocker”) , and see the passed-by-value note, you can change that note, and it will not affect the note in #210 (“JanesLocker”). But if you see the passed-by-reference note that has the message to “See #210”, you’ll then go to #210, and change that post-it note, essentially changing the message for both lockers.
It’s not an exact analogy, but maybe it’ll help you grasp the concept.

My above analogy probably fits better with the C language and pointers, rather than C++ and references. Perhaps a better analogy for C++/references is the same set of high school lockers, but with only one locker in play, #210, named both “JanesLocker” and “MarysLocker”. They’re the same locker, holding the same data, just by different names. This is like pass-by-reference. Modify the data in “MarysLocker” and it automagically modifies the data in ""JanesLocker’, and vice-versa.
Pass-by-value would still be like option 1 in the above analogy: two separate lockers, with one getting a copy of the data. Modify either copy, it has no effect on the other copy.

After you get through the lesson on pointers, you can run this code to see the difference in pass-by-value and pass-by-reference:
#include <iostream>

void xperiment(int &p) {
  std::cout << ""\n\nThe value of 'p' = "" << p;
  std::cout << ""\nThe address of 'p' = "" << &p;
}

int main() {
  
  int power = 9000;
  
  // Create pointer
  int* ptr = &power;
  
  // Print ptr
  std::cout << ""The address of 'power' = "" << ptr << ""\n"";
  
  // Print *ptr
  std::cout << ""The value of 'power' = "" << *ptr;

  xperiment(power);

}

When run, you can see that the address of both “power” and “p” are the same (one locker, with two names).
But change the line
void xperiment(int &p)

to
void xperiment(int p)

removing the “&”, you’ll see that “power” and “p” have different addresses (two different lockers, with “p” getting a copy of the data (“9000”) that’s in “power”.
"
90,FAQ: Conditionals & Logic - Introduction to Conditionals & Logic,"Get Help,Git",,1,"

This community-built FAQ covers the “Introduction to Conditionals & Logic” exercise from the lesson “Conditionals & Logic”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Introduction to Conditionals & Logic


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
91,FAQ: Conditionals & Logic - Relational Operators,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Relational Operators” exercise from the lesson “Conditionals & Logic”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Relational Operators


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
92,FAQ: Loops - Review,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Review” exercise from the lesson “Loops”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Review


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
93,FAQ: Loops - For Loop Demo,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “For Loop Demo” exercise from the lesson “Loops”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise For Loop Demo


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
94,FAQ: Conditionals & Logic - If Statement,"Get Help,Git",,7,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “If Statement” exercise from the lesson “Conditionals & Logic”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise If Statement


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
","
Hi!
I know that this souldn’t be the lesson to ask this, but I’ll do it anyway:
–> You put in the tutorial:
std::cout << ""Some text here\n"";
But this also works fine:
std::cout << ""Some text here"";
Why sould we put the \n when it’s easyer to do it without it?
–> And the other question is that is it better to put more spaces when without them it works?:
bmi = weight/(height*height);   [Without unnecessary spaces]
bmi = weight / (height * height);     [With spaces]
I know that you don’t save a lot by doing this, but i wanted to know
Thanks 

If you watch closely you’ll see the ? prompt at the end of the line rather than on the next line. That is why we need to include the newline escape character, \n at the end of the cout string.
Some text here?

vs.
Some text here
?

yes, I noticed this a litle bit after. Thanks anyway, now I know it for shure and that it means newline escape character.

Hello johnbrun,
About more spaces, this is how you are comfortable to read the code, if more spaces on code is good for you is ok, this is a detail that each programmer have, I think that it’s more about styles and likes to write code.
Regards,
José

You put in the tutorial:
std::cout << ""Some text here\n"";
you should do it the right way which is
std::cout << “some text here” << std::endl;
please fix it!

Why do you say endl should be used here? 
"
95,FAQ: Functions - How Parameters & Arguments Work,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “How Parameters & Arguments Work” exercise from the lesson “Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise How Parameters & Arguments Work


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
96,FAQ: Functions - Declare & Define,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Declare & Define” exercise from the lesson “Functions”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Declare & Define


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
97,FAQ: Vectors - Index,"Get Help,Git",,1,"

Community FAQs on Codecademy Exercises.jpeg1000×208 141 KB

This community-built FAQ covers the “Index” exercise from the lesson “Vectors”.
Paths and Courses
This exercise can be found in the following Codecademy content:
Learn C++
FAQs on the exercise Index


There are currently no frequently asked questions associated with this exercise – that’s where you come in!  You can contribute to this section by offering your own questions, answers, or clarifications on this exercise.  Ask or answer a question by clicking reply () below.
If you’ve had an “aha” moment about the concepts, formatting, syntax, or anything else with this exercise, consider sharing those insights!  Teaching others and answering their questions is one of the best ways to learn and stay sharp.

Join the Discussion. Help a fellow learner on their journey.
Ask or answer a question about this exercise by clicking reply () below!
Agree with a comment or answer? Like () to up-vote the contribution!
Need broader help or resources?  Head here.
Looking for motivation to keep learning? Join our wider discussions.
Learn more about how to use this guide.
Found a bug? Report it!
Have a question about your account or billing? Reach out to our customer support team!
None of the above?  Find out where to ask other questions here!
",
